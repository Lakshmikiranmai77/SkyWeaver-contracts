/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { FreemintFactory } from "./FreemintFactory";

export class FreemintFactoryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _assetsAddr: string,
    overrides?: TransactionOverrides
  ): Promise<FreemintFactory> {
    return super.deploy(_assetsAddr, overrides) as Promise<FreemintFactory>;
  }
  getDeployTransaction(
    _assetsAddr: string,
    overrides?: TransactionOverrides
  ): UnsignedTransaction {
    return super.getDeployTransaction(_assetsAddr, overrides);
  }
  attach(address: string): FreemintFactory {
    return super.attach(address) as FreemintFactory;
  }
  connect(signer: Signer): FreemintFactoryFactory {
    return super.connect(signer) as FreemintFactoryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreemintFactory {
    return new Contract(address, _abi, signerOrProvider) as FreemintFactory;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_assetsAddr",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "previousTier",
        type: "uint256"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newTier",
        type: "uint256"
      }
    ],
    name: "OwnershipGranted",
    type: "event"
  },
  {
    stateMutability: "nonpayable",
    type: "fallback"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_tier",
        type: "uint256"
      }
    ],
    name: "assignOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]"
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]"
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]"
      }
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address"
      }
    ],
    name: "getOwnerTier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "getSkyweaverAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106e93803806106e98339818101604052602081101561003357600080fd5b5051336000818152602081905260408082206000199081905590519092907fa4e9b194bafb51369051927f4c07278de72aa1ee689f375215ea3a16dfef618e908390a46001600160a01b0381166100bb5760405162461bcd60e51b815260040180806020018281038252602a8152602001806106bf602a913960400191505060405180910390fd5b600180546001600160a01b0319166001600160a01b03929092169190911790556105d5806100ea6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461008e5780635d511a11146100c957806365d9c8ad146100f7578063d559f05b1461011b578063e8f35d5a1461022f575b60405162461bcd60e51b815260040180806020018281038252602581526020018061054b6025913960400191505060405180910390fd5b6100b5600480360360208110156100a457600080fd5b50356001600160e01b031916610267565b604080519115158252519081900360200190f35b6100f5600480360360408110156100df57600080fd5b506001600160a01b03813516906020013561027d565b005b6100ff610374565b604080516001600160a01b039092168252519081900360200190f35b6100f56004803603606081101561013157600080fd5b81019060208101813564010000000081111561014c57600080fd5b82018360208201111561015e57600080fd5b8035906020019184602083028401116401000000008311171561018057600080fd5b91939092909160208101903564010000000081111561019e57600080fd5b8201836020820111156101b057600080fd5b803590602001918460208302840111640100000000831117156101d257600080fd5b9193909290916020810190356401000000008111156101f057600080fd5b82018360208201111561020257600080fd5b8035906020019184602083028401116401000000008311171561022457600080fd5b509092509050610383565b6102556004803603602081101561024557600080fd5b50356001600160a01b03166104fd565b60408051918252519081900360200190f35b6001600160e01b0319166301ffc9a760e01b1490565b33600090815260208190526040902054600019908111156102cf5760405162461bcd60e51b81526004018080602001828103825260328152602001806105196032913960400191505060405180910390fd5b6001600160a01b0383166103145760405162461bcd60e51b81526004018080602001828103825260308152602001806105706030913960400191505060405180910390fd5b6001600160a01b038316600081815260208190526040808220549051859391927fa4e9b194bafb51369051927f4c07278de72aa1ee689f375215ea3a16dfef618e91a4506001600160a01b03909116600090815260208190526040902055565b6001546001600160a01b031690565b336000908152602081905260409020546001908111156103d45760405162461bcd60e51b81526004018080602001828103825260328152602001806105196032913960400191505060405180910390fd5b60005b868110156104f3576001546001600160a01b031663b48ab8b68989848181106103fc57fe5b905060200201356001600160a01b0316888888886040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b031681526020018060200180602001806020018481038452888882818152602001925060200280828437600083820152601f01601f19169091018581038452868152602090810191508790870280828437600081840152601f19601f82011690508083019250505084810382526000815260200160200198505050505050505050600060405180830381600087803b1580156104cf57600080fd5b505af11580156104e3573d6000803e3d6000fd5b5050600190920191506103d79050565b5050505050505050565b6001600160a01b03166000908152602081905260409020549056fe5469657265644f776e61626c65236f6e6c794f776e6572546965723a204f574e45525f544945525f49535f544f4f5f4c4f57467265656d696e74466163746f7279235f3a20554e535550504f525445445f4d4554484f445469657265644f776e61626c65237472616e736665724f776e6572736869703a20494e56414c49445f41444452455353a26469706673582212202a2a9c9ecaca8fcce3b01ecedb091a0cecac3b26659dd0a587766f7b73eb34b764736f6c63430006080033467265656d696e74466163746f727923636f6e7374727563746f723a20494e56414c49445f494e505554";
