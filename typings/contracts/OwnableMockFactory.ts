/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { OwnableMock } from "./OwnableMock";

export class OwnableMockFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<OwnableMock> {
    return super.deploy(overrides) as Promise<OwnableMock>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): OwnableMock {
    return super.attach(address) as OwnableMock;
  }
  connect(signer: Signer): OwnableMockFactory {
    return super.connect(signer) as OwnableMockFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnableMock {
    return new Contract(address, _abi, signerOrProvider) as OwnableMock;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    stateMutability: "nonpayable",
    type: "fallback"
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "call_onlyOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "call_anyone",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "call_throw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610374806100696000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310f28194146100595780633fe9038014610077578063893d20e81461007f578063914cec9914610094578063f2fde38b1461009c575b005b6100616100af565b60405161006e91906102c4565b60405180910390f35b6100616100b4565b6100876100d7565b60405161006e91906102b6565b6100616100e6565b6100576100aa3660046101c6565b610117565b600190565b600060405162461bcd60e51b81526004016100ce906102e2565b60405180910390fd5b6000546001600160a01b031690565b600080546001600160a01b031633146101115760405162461bcd60e51b81526004016100ce906102f2565b50600190565b6000546001600160a01b031633146101415760405162461bcd60e51b81526004016100ce906102f2565b6001600160a01b0381166101675760405162461bcd60e51b81526004016100ce906102d2565b600080546001600160a01b0319166001600160a01b0383811691821780845560405192939116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b80356101c081610327565b92915050565b6000602082840312156101d857600080fd5b60006101e484846101b5565b949350505050565b6101f58161030b565b82525050565b6101f581610316565b6000610211602a83610302565b7f4f776e61626c65237472616e736665724f776e6572736869703a20494e56414c81526949445f4144445245535360b01b602082015260400192915050565b600061025d600283610302565b613a2f60f01b815260200192915050565b600061027b602683610302565b7f4f776e61626c65236f6e6c794f776e65723a2053454e4445525f49535f4e4f548152652fa7aba722a960d11b602082015260400192915050565b602081016101c082846101ec565b602081016101c082846101fb565b602080825281016101c081610204565b602080825281016101c081610250565b602080825281016101c08161026e565b90815260200190565b60006101c08261031b565b151590565b6001600160a01b031690565b6103308161030b565b811461033b57600080fd5b5056fea2646970667358221220a54987760246a2d97892aa6a79da7788b863513277afebcaad8911bb9e2272ed64736f6c63430006080033";
