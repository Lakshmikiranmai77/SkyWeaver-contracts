/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { TieredOwnableMock } from "./TieredOwnableMock";

export class TieredOwnableMockFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<TieredOwnableMock> {
    return super.deploy(overrides) as Promise<TieredOwnableMock>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): TieredOwnableMock {
    return super.attach(address) as TieredOwnableMock;
  }
  connect(signer: Signer): TieredOwnableMockFactory {
    return super.connect(signer) as TieredOwnableMockFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TieredOwnableMock {
    return new Contract(address, _abi, signerOrProvider) as TieredOwnableMock;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "previousTier",
        type: "uint256"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newTier",
        type: "uint256"
      }
    ],
    name: "OwnershipGranted",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_tier",
        type: "uint256"
      }
    ],
    name: "assignOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address"
      }
    ],
    name: "getOwnerTier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "onlyMaxTier",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "onlyTierFive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "onlyTierZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "anyone",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000818152602081905260408082206000199081905590519092907fa4e9b194bafb51369051927f4c07278de72aa1ee689f375215ea3a16dfef618e908390a4610426806100616000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80635d511a1114610067578063785beeb91461007c578063a67c68e81461009a578063dd9fb4f6146100a2578063e8f35d5a146100aa578063f9dd0818146100ca575b600080fd5b61007a610075366004610274565b6100d2565b005b610084610194565b604051610091919061036c565b60405180910390f35b610084610199565b6100846101d3565b6100bd6100b836600461024e565b6101e4565b604051610091919061039a565b6100846101ff565b336000908152602081905260409020546000199081111561010e5760405162461bcd60e51b81526004016101059061037a565b60405180910390fd5b6001600160a01b0383166101345760405162461bcd60e51b81526004016101059061038a565b6001600160a01b038316600081815260208190526040808220549051859391927fa4e9b194bafb51369051927f4c07278de72aa1ee689f375215ea3a16dfef618e91a4506001600160a01b03909116600090815260208190526040902055565b600190565b336000908152602081905260408120546005908111156101cb5760405162461bcd60e51b81526004016101059061037a565b600191505090565b3360009081526020819052806101cb565b6001600160a01b031660009081526020819052604090205490565b33600090815260208190526040812054600019908111156101cb5760405162461bcd60e51b81526004016101059061037a565b803561023d816103d0565b92915050565b803561023d816103e7565b60006020828403121561026057600080fd5b600061026c8484610232565b949350505050565b6000806040838503121561028757600080fd5b60006102938585610232565b92505060206102a485828601610243565b9150509250929050565b6102b7816103bc565b82525050565b60006102ca6032836103a8565b7f5469657265644f776e61626c65236f6e6c794f776e6572546965723a204f574e81527145525f544945525f49535f544f4f5f4c4f5760701b602082015260400192915050565b600061031e6030836103a8565b7f5469657265644f776e61626c65237472616e736665724f776e6572736869703a81526f20494e56414c49445f4144445245535360801b602082015260400192915050565b6102b7816103cd565b6020810161023d82846102ae565b6020808252810161023d816102bd565b6020808252810161023d81610311565b6020810161023d8284610363565b90815260200190565b600061023d826103c1565b151590565b6001600160a01b031690565b90565b6103d9816103b1565b81146103e457600080fd5b50565b6103d9816103cd56fea2646970667358221220a5d51916af14ef67c607edf8c67f2198e3bc46b9891ee26df14732e4596d066564736f6c63430006080033";
