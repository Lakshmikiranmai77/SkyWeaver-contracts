{
  "contractName": "MetaERC20Wrapper",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNonce",
          "type": "uint256"
        }
      ],
      "name": "NonceChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "token_id",
          "type": "uint256"
        }
      ],
      "name": "TokenRegistration",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_amount",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_owners",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOperator",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_signerAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_sig",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "_isGasFee",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "metaSafeBatchTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isGasFee",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "metaSafeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isGasFee",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "metaSetApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getIdAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token_id\",\"type\":\"uint256\"}],\"name\":\"TokenRegistration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_amount\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getIdAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signerAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"_isGasFee\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"metaSafeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isGasFee\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"metaSafeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isGasFee\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"metaSetApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"_id\":\"ID of the Token\",\"_owner\":\"The address of the token holder\"},\"return\":\"The _owner's balance of the Token type requested\"},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"_ids\":\"ID of the Tokens\",\"_owners\":\"The addresses of the token holders\"},\"return\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"},\"deposit(address,address,uint256)\":{\"details\":\"Deposit ERC20 tokens or ETH in this contract to receive wrapped ERC20s\",\"params\":{\"_recipient\":\"Address that will receive the ERC-1155 tokens\",\"_token\":\"The addess of the token to deposit in this contract\",\"_value\":\"The amount of token to deposit in this contract Note: Users must first approve this contract addres on the contract of the ERC20 to be deposited\"}},\"getIdAddress(uint256)\":{\"params\":{\"_id\":\"Meta-ERC20 token ID to get the corresponding ERC-20 token address\"},\"return\":\"ERC-20 token address\"},\"getNonce(address)\":{\"params\":{\"_signer\":\"Address to query signature nonce for\"}},\"getTokenID(address)\":{\"params\":{\"_token\":\"ERC-20 token address to get the corresponding Meta-ERC20 token ID\"},\"return\":\"Meta-ERC20 token ID\"},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"return\":\"True if the operator is approved, false if not\"},\"isValidSignature(address,bytes32,bytes,bytes)\":{\"details\":\"Verifies that a hash has been signed by the given signer.\",\"params\":{\"_data\":\"Full EIP-712 data structure that was hashed and signed\",\"_hash\":\"Hash of the EIP-712 encoded data\",\"_sig\":\"Proof that the hash has been signed by signer.     For non wallet signatures, _sig is expected to be an array tightly encoded as     (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType)\",\"_signerAddress\":\"Address that should have signed the given hash.\"},\"return\":\"True if the address recovered from the provided signature matches the input signer address.\"},\"metaSafeBatchTransferFrom(address,address,uint256[],uint256[],bool,bytes)\":{\"params\":{\"_amounts\":\"Transfer amounts per token type\",\"_data\":\"Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (  (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),  (GasReceipt g, ?bytes transferData) )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array\",\"_from\":\"Source addresses\",\"_ids\":\"IDs of each token type\",\"_isGasFee\":\"Whether gas is reimbursed to executor or not\",\"_to\":\"Target addresses\"}},\"metaSafeTransferFrom(address,address,uint256,uint256,bool,bytes)\":{\"params\":{\"_amount\":\"Transfered amount\",\"_data\":\"Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (  (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),  (GasReceipt g, ?bytes transferData) )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_isGasFee\":\"Whether gas is reimbursed to executor or not\",\"_to\":\"Target address\"}},\"metaSetApprovalForAll(address,address,bool,bool,bytes)\":{\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_data\":\"Encodes signature and gas payment receipt  _data should be encoded as (    (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),    (GasReceipt g)  )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array\",\"_isGasFee\":\"Whether gas will be reimbursed or not, with vlid signature\",\"_operator\":\"Address to add to the set of authorized operators\",\"_owner\":\"Address that wants to set operator status  _spender\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"params\":{\"_from\":\"The address which previously owned the token\",\"_ids\":\"An array containing ids of each token being transferred\",\"_values\":\"An array containing amounts of each token being transferred\"},\"return\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"params\":{\"_from\":\"The address which previously owned the token\",\"_id\":\"The id of the token being transferred\",\"_value\":\"The amount of tokens being transferred\"},\"return\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"params\":{\"_amounts\":\"Transfer amounts per token type\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source addresses\",\"_ids\":\"IDs of each token type\",\"_to\":\"Target addresses\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"params\":{\"_amount\":\"Transfered amount\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_to\":\"Target address\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"This function MUST return true if it implements the ERC1155TokenReceiver interface and ERC-165 interface.     This function MUST NOT consume more thsan 5,000 gas.\",\"params\":{\"interfaceID\":\"The ERC-165 interface ID that is queried for support.s\"},\"return\":\"Wheter ERC-165 or ERC1155TokenReceiver interfaces are supported.\"},\"withdraw(address,address,uint256)\":{\"details\":\"Withdraw wrapped ERC20 tokens in this contract to receive the original ERC20s or ETH\",\"params\":{\"_to\":\"The address where the withdrawn tokens will go to\",\"_token\":\"The addess of the token to withdrww from this contract\",\"_value\":\"The amount of tokens to withdraw\"}}}},\"userdoc\":{\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"constructor\":\"*********************************| |            Constructor            | |__________________________________\",\"getIdAddress(uint256)\":{\"notice\":\"Return the ERC-20 token address for the given Meta-ERC20 token ID\"},\"getNTokens()\":{\"notice\":\"Returns number of tokens currently registered\"},\"getNonce(address)\":{\"notice\":\"Returns the current nonce associated with a given address\"},\"getTokenID(address)\":{\"notice\":\"Return the Meta-ERC20 token ID for the given ERC-20 token address\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner\"},\"metaSafeBatchTransferFrom(address,address,uint256[],uint256[],bool,bytes)\":{\"notice\":\"Allows anyone with a valid signature to transfer multiple types of tokens on the bahalf of _from\"},\"metaSafeTransferFrom(address,address,uint256,uint256,bool,bytes)\":{\"notice\":\"Allows anyone with a valid signature to transfer _amount amount of a token _id on the bahalf of _from\"},\"metaSetApprovalForAll(address,address,bool,bool,bytes)\":{\"notice\":\"Approve the passed address to spend on behalf of _from if valid signature is provided\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Send multiple types of Tokens from the _from address to the _to address (with safety call)\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Transfers amount amount of an _id from the _from address to the _to address specified\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of caller's tokens\"},\"supportsInterface(bytes4)\":{\"notice\":\"Indicates whether a contract implements the `ERC1155TokenReceiver` functions and so can accept ERC1155 token types.\"}},\"notice\":\"Allows users to wrap any amount of any ERC-20 token with a 1:1 ratio  of corresponding ERC-1155 tokens with native metaTransaction methods. Each  ERC-20 is assigned an ERC-1155 id for more efficient CALLDATA usage when  doing transfers.\"}},\"settings\":{\"compilationTarget\":{\"erc20-meta-token/contracts/wrapper/MetaERC20Wrapper.sol\":\"MetaERC20Wrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc20-meta-token/contracts/wrapper/MetaERC20Wrapper.sol\":{\"keccak256\":\"0x09ae15ac203cb1d01bbcc410fcb0bfe1bcc1b4787f42df08de7b078e3cfadc4f\",\"urls\":[\"bzz-raw://aae9e93048f3dc262a3fc758e414ab44ea993f2b121649559e6e1de19e0822ca\",\"dweb:/ipfs/QmQsKC6MKo41J6TxbvMKuricx8m1HzQBYSVLcL6wZ4pFzL\"]},\"multi-token-standard/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x9632273d1c5272823807d1d0b1630af9e2dad7f1e41a65bfdbc66bda702c53a1\",\"urls\":[\"bzz-raw://6deb9bdff007e4b367d4561699f45f0f8521a4412a770a9292c109844f739f58\",\"dweb:/ipfs/QmTXrB3rTHHrNcHAa3PYoq2BRJiT4nMmMrPmA6AjDsk7HB\"]},\"multi-token-standard/contracts/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0xdf097e5f122d544a93027619c941dc8475bead114e421b9398d9a1482b9bffb8\",\"urls\":[\"bzz-raw://9bdc0f8d96e08965b0e7c98b8ba9e67a56afc26c014784caf53ea4e04a966eb3\",\"dweb:/ipfs/QmRiuqBiDqfQNUtpjiwj5rR1iD5Psh6KdzKiBNNriiq68m\"]},\"multi-token-standard/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0xf04346229f40d5f61afc28a9562b000cd2621467f47eb68d52b6837ad9e37a3a\",\"urls\":[\"bzz-raw://5656645d69f71ef176452aa526adc77009c73068e0c6382227d8c94abfc14939\",\"dweb:/ipfs/QmZrKZ7W79GAwf9byvJLeeutQjiy9vS2KAbt946afCpxYD\"]},\"multi-token-standard/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x5561863476cd7598c203efcd18bb436746a2596ac61e37c7bbf73790a511de39\",\"urls\":[\"bzz-raw://92f034ed08c66e4a1579b6ad8dd53e615cb7d39b2f26a131fd62f90f3d30e25b\",\"dweb:/ipfs/QmXKMPTepiBrfEKgpQR8PneSgAsVi2769wy9THBM65BspH\"]},\"multi-token-standard/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xfc4a8c65ffa42e0d53b26dea126a08ad0495cf623ff2e389de9bfaea01d39c74\",\"urls\":[\"bzz-raw://525d4c5a90b00caa4da3e7fca987cd56770ae9612aad92ea939cfc2c17a055b7\",\"dweb:/ipfs/QmRFuWERiyuHvYw6LiXMVnda6eCPqdXHkUgfNxE4z2WNr3\"]},\"multi-token-standard/contracts/tokens/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x454f992789731d8ca2e284409dc69115285e48c8c9ad8f38b1f35d9e7bc23320\",\"urls\":[\"bzz-raw://e101d27d80cecb9b8cc788982914974022984f90b213550bc1290818a7047139\",\"dweb:/ipfs/QmZu2HKUsQa5GbGrrtKbCkX5VLRZiPxAtDUxBDf1V7QtR1\"]},\"multi-token-standard/contracts/tokens/ERC1155/ERC1155Meta.sol\":{\"keccak256\":\"0xd60a39464c12b71be7634f1ce60d8710fbfd86fa77d614927fa5233feac400a4\",\"urls\":[\"bzz-raw://18d9102255226a59788d76818fb02e9eec3d96c233dabbf2f78c0d493217967e\",\"dweb:/ipfs/QmWjPth2gPAuUuMQomKHSeaiN76uE3XqkJnJ3YhhZcA6ks\"]},\"multi-token-standard/contracts/tokens/ERC1155/ERC1155MintBurn.sol\":{\"keccak256\":\"0x8b5247002651f1bcc2365b22051a9db517b4e4892d71594fd0adcea4a43ec678\",\"urls\":[\"bzz-raw://f7ddd00e7da49cbac08d2c3678b520875aee42c505ffde06e62c86f43f9da43a\",\"dweb:/ipfs/QmVBa6ocmrrLp3ak46hFHVGgL2GJq9z8VWvBX4GPyWYhrD\"]},\"multi-token-standard/contracts/utils/Address.sol\":{\"keccak256\":\"0xc089dcd9159bf02993336e47f629e8e86dcd3086cf2278e9ea06145b4094be5f\",\"urls\":[\"bzz-raw://bf05b053fb01bda8c24854d5d5c652c3c46c411597d90692e0c146b02a5154a0\",\"dweb:/ipfs/QmP5madVNQjx9JHqkdx9R79MdZZgeQJFEWVW5iwRYBV4ny\"]},\"multi-token-standard/contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x034231dab1ce11c6f855b0996bfff344f9e892c18ee5355037782840eb94e8ef\",\"urls\":[\"bzz-raw://927e05443a17e8dde5d3678c5ad580eb70b1450f140aed7d5e6eaee687fc001a\",\"dweb:/ipfs/QmaYVbmqL4UakxBdNZrMuC5ZQ2rccoVs4hkAgsRa5dfbXc\"]},\"multi-token-standard/contracts/utils/LibEIP712.sol\":{\"keccak256\":\"0x66001e3302b0f8f233f4adc5a7edb3dce66195608f463fbc72e525032cabd9a0\",\"urls\":[\"bzz-raw://8f8e37fa4e33ca98222d3a1dcb18db9761cc8514d5eb3cb9e0f46cfcf23bfc5a\",\"dweb:/ipfs/QmXH9EKc2EDCR4TR4i9SvTcYiLwBL3F2A3muGkiUZtm9Ye\"]},\"multi-token-standard/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x0a904266aa9620d2f126588f1a964ec47bd8e777f3b2281a6e8f6897bc1d9fbd\",\"urls\":[\"bzz-raw://c4fcd436cda8c33574b2146bb9098f560095e4b2d63084563c176c2d402a9554\",\"dweb:/ipfs/QmW3Jo5Lt6LUf8pp6r7vE5kfpMpknJNoFEqTH9FbK7eFiU\"]},\"multi-token-standard/contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x4d8591c15383f02cdbfe4008a17917604ce858b48e650ce55c304c9216c0fd37\",\"urls\":[\"bzz-raw://c80b2de0fcc33dc8bd33ab517a26a12288ff23eb2edc82f4c59ee157877c0b82\",\"dweb:/ipfs/QmNmS4ZUAJpDpvaQ8uaQXNxNKKm37jWsojkaUYAkEL7e5V\"]}},\"version\":1}",
  "bytecode": "0x6080604052600160035534801561001557600080fd5b50600160008190527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0581905560056020527f1471eb6eb2c5e789fc3de43f8ce62938c7d1836ec861730447e2ada8fd81017b80546001600160a01b03191690911790556139ab806100876000396000f3fe6080604052600436106101135760003560e01c8063a22cb465116100a0578063e985e9c511610064578063e985e9c514610313578063f23a6e6114610333578063f242432a14610353578063f5d4c82014610373578063fa4e12d71461039357610113565b8063a22cb46514610266578063a3d4926e14610286578063bc197c81146102a6578063ce0b514b146102d3578063d9caed12146102f357610113565b80634e1273f4116100e75780634e1273f4146101c457806363f8071c146101f15780637358e9a5146102115780638340f5491461023e5780639040a9491461025157610113565b8062fdd58e1461012157806301ffc9a7146101575780632d0335ab146101845780632eb2c2d6146101a4575b61011f600133346103b3565b005b34801561012d57600080fd5b5061014161013c366004612460565b6105ac565b60405161014e91906137f5565b60405180910390f35b34801561016357600080fd5b5061017761017236600461250b565b6105d5565b60405161014e91906134a3565b34801561019057600080fd5b5061014161019f366004612022565b610608565b3480156101b057600080fd5b5061011f6101bf3660046120c8565b610623565b3480156101d057600080fd5b506101e46101df366004612490565b6106a2565b60405161014e919061346d565b3480156101fd57600080fd5b5061014161020c366004612022565b610784565b34801561021d57600080fd5b5061023161022c36600461260d565b6107bf565b60405161014e91906132fc565b61011f61024c366004612182565b6103b3565b34801561025d57600080fd5b506101416107f4565b34801561027257600080fd5b5061011f6102813660046123a1565b6107fa565b34801561029257600080fd5b5061011f6102a1366004612226565b610869565b3480156102b257600080fd5b506102c66102c13660046120c8565b6109b9565b60405161014e91906135b2565b3480156102df57600080fd5b5061011f6102ee366004612349565b610a52565b3480156102ff57600080fd5b5061011f61030e366004612182565b610b0d565b34801561031f57600080fd5b5061017761032e366004612098565b610b26565b34801561033f57600080fd5b506102c661034e3660046121cf565b610b54565b34801561035f57600080fd5b5061011f61036e3660046121cf565b610b9d565b34801561037f57600080fd5b5061011f61038e3660046122f2565b610c15565b34801561039f57600080fd5b506101776103ae3660046123d1565b610d1a565b6001600160a01b0382166103e25760405162461bcd60e51b81526004016103d990613605565b60405180910390fd5b60006001600160a01b0384166001146105685734156104135760405162461bcd60e51b81526004016103d990613665565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906104439033903090879060040161330a565b602060405180830381600087803b15801561045d57600080fd5b505af1158015610471573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061049591908101906124ed565b5061049e611100565b6104ba5760405162461bcd60e51b81526004016103d990613685565b6001600160a01b0384166000908152600460205260409020548061055e576003805460010190819055600081815260056020908152604080832080546001600160a01b0319166001600160a01b038b169081179091558352600490915290819020829055519092507ff977d54986414fc91816901629d1d788ad95448ab4198dcb9b6dc5ed2b930c1f90610551908790859061345f565b60405180910390a1610562565b8091505b5061058b565b3482146105875760405162461bcd60e51b81526004016103d9906135f5565b5060015b6105a683828460405180602001604052806000815250611134565b50505050565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b60006301ffc9a760e01b6001600160e01b0319831614806105cf5750506001600160e01b031916630271189760e51b1490565b6001600160a01b031660009081526002602052604090205490565b336001600160a01b038616148061063f575061063f8533610b26565b61065b5760405162461bcd60e51b81526004016103d990613745565b6001600160a01b0384166106815760405162461bcd60e51b81526004016103d9906136e5565b61068d858585856111d9565b61069b858585855a866113e3565b5050505050565b606081518351146106c55760405162461bcd60e51b81526004016103d990613715565b606083516040519080825280602002602001820160405280156106f2578160200160208202803883390190505b50905060005b845181101561077c5760008086838151811061071057fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085838151811061074657fe5b602002602001015181526020019081526020016000205482828151811061076957fe5b60209081029190910101526001016106f8565b509392505050565b6001600160a01b038116600090815260046020526040902054806107ba5760405162461bcd60e51b81526004016103d9906137c5565b919050565b6000818152600560205260409020546001600160a01b0316806107ba5760405162461bcd60e51b81526004016103d990613705565b60035490565b3360008181526001602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061085d9085906134a3565b60405180910390a35050565b6001600160a01b03851661088f5760405162461bcd60e51b81526004016103d990613765565b6060610899611d8f565b606061094c89857fa3d4926e8cf8fe8e020cd29f514c256bc2eec62aa2337e415f1a33a4828af5a060001b8c8c8c6040516020016108d7919061326a565b604051602081830303815290604052805190602001208c6040516020016108fe919061326a565b604051602081830303815290604052805190602001208c610920576000610923565b60015b604051602001610938969594939291906134cc565b6040516020818303038152906040526114b6565b905061095a898989896111d9565b84156109a0578080602001905161097491908101906125d8565b6020820151909450909250610991908a908a908a908a90866113e3565b61099b8983611620565b6109ae565b6109ae898989895a866113e3565b505050505050505050565b60003330146109da5760405162461bcd60e51b81526004016103d9906136d5565b60005b8451811015610a3d57610a028582815181106109f557fe5b60200260200101516107bf565b50610a353087878481518110610a1457fe5b6020026020010151878581518110610a2857fe5b602002602001015161182f565b6001016109dd565b5063bc197c8160e01b90505b95945050505050565b6001600160a01b038516610a785760405162461bcd60e51b81526004016103d990613695565b6060610a82611d8f565b6060610aba89857fce0b514b3931bdbe4d5d44e4f035afe7113767b7db71949271f6a62d9c60f558828c8c8c8c610920576000610923565b9050610ac8898989896119a2565b8415610aff5780806020019051610ae291908101906125d8565b6020820151909450909250610991908a908a908a908a9086611a8a565b6109ae898989895a86611a8a565b6000610b1884610784565b90506105a63384838561182f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6000333014610b755760405162461bcd60e51b81526004016103d990613625565b610b7e846107bf565b50610b8b3086868661182f565b5063f23a6e6160e01b95945050505050565b336001600160a01b0386161480610bb95750610bb98533610b26565b610bd55760405162461bcd60e51b81526004016103d990613635565b6001600160a01b038416610bfb5760405162461bcd60e51b81526004016103d9906135e5565b610c07858585856119a2565b61069b858585855a86611a8a565b6060610c7186837ff5d4c820494c8595de274c7ff619bead38aac4fbc3d143b5bf956aa4b84fa524828989610c4b576000610c4e565b60015b89610c5a576000610c5d565b60015b60405160200161093895949392919061351b565b6001600160a01b038781166000818152600160209081526040808320948b168084529490915290819020805460ff19168915151790555192935090917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610cda9088906134a3565b60405180910390a38215610d1257610cf0611d8f565b81806020019051610d0491908101906125a4565b9050610d108782611620565b505b505050505050565b600080825111610d3c5760405162461bcd60e51b81526004016103d990613755565b6001600160a01b038516610d625760405162461bcd60e51b81526004016103d990613735565b6000610d6d83611b5d565b60f81c905060058110610d925760405162461bcd60e51b81526004016103d990613675565b60008160ff166005811115610da357fe5b9050600080808080856005811115610db757fe5b1415610dd55760405162461bcd60e51b81526004016103d9906136a5565b6001856005811115610de357fe5b1415610eb9578751606114610e0a5760405162461bcd60e51b81526004016103d9906136c5565b610e1b88600063ffffffff611bab16565b9250610e2e88602063ffffffff611bab16565b915087604081518110610e3d57fe5b602001015160f81c60f81b60f81c935060018a85858560405160008152602001604052604051610e70949392919061357d565b6020604051602081039080840390855afa158015610e92573d6000803e3d6000fd5b5050604051601f1901516001600160a01b038d811691161497506110f89650505050505050565b6002856005811115610ec757fe5b1415610f7a578751606114610eee5760405162461bcd60e51b81526004016103d9906136c5565b610eff88600063ffffffff611bab16565b9250610f1288602063ffffffff611bab16565b915087604081518110610f2157fe5b602001015160f81c60f81b60f81c935060018a604051602001610f4491906132d1565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051610e70949392919061357d565b6003856005811115610f8857fe5b141561102d576040516320c13b0b60e01b81526001600160a01b038c16906320c13b0b90610fbc908c908c906004016135c0565b60206040518083038186803b158015610fd457600080fd5b505afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061100c9190810190612529565b6001600160e01b0319166320c13b0b60e01b1496506110f895505050505050565b600485600581111561103b57fe5b14156110e057604051630b135d3f60e11b81526001600160a01b038c1690631626ba7e9061106f908d908c9060040161355d565b60206040518083038186803b15801561108757600080fd5b505afa15801561109b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110bf9190810190612529565b6001600160e01b031916630b135d3f60e11b1496506110f895505050505050565b60405162461bcd60e51b81526004016103d990613675565b949350505050565b6000803d801561111757602081146111205761112c565b6001915061112c565b60206000803e60005191505b501515905090565b6001600160a01b038416600090815260208181526040808320868452909152902054611166908363ffffffff611bda16565b6001600160a01b03851660008181526020818152604080832088845290915280822093909355915190919033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62906111c29088908890613803565b60405180910390a46105a660008585855a86611a8a565b80518251146111fa5760405162461bcd60e51b81526004016103d990613655565b815160005b818110156113845761127583828151811061121657fe5b6020026020010151600080896001600160a01b03166001600160a01b03168152602001908152602001600020600087858151811061125057fe5b6020026020010151815260200190815260200160002054611bff90919063ffffffff16565b600080886001600160a01b03166001600160a01b0316815260200190815260200160002060008684815181106112a757fe5b602002602001015181526020019081526020016000208190555061132f8382815181106112d057fe5b6020026020010151600080886001600160a01b03166001600160a01b03168152602001908152602001600020600087858151811061130a57fe5b6020026020010151815260200190815260200160002054611bda90919063ffffffff16565b600080876001600160a01b03166001600160a01b03168152602001908152602001600020600086848151811061136157fe5b6020908102919091018101518252810191909152604001600020556001016111ff565b50836001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516113d492919061347e565b60405180910390a45050505050565b6113f5856001600160a01b0316611c27565b15610d12576000856001600160a01b031663bc197c8184338a8989886040518763ffffffff1660e01b8152600401611431959493929190613332565b602060405180830381600088803b15801561144b57600080fd5b5087f115801561145f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506114849190810190612529565b90506001600160e01b0319811663bc197c8160e01b14610d105760405162461bcd60e51b81526004016103d990613775565b606080838060200190516114cd9190810190612547565b6001600160a01b038716600090815260026020526040812054919450919250906114fe83604163ffffffff611bab16565b905081811080159061151257508160640181105b61152e5760405162461bcd60e51b81526004016103d9906137d5565b600061156a8683878051906020012060405160200161154f93929190613276565b60405160208183030381529060405280519060200120611c5e565b90506060868387604051602001611583939291906132a9565b60408051601f198184030181528282526001600160a01b038c166000818152600260205292909220600187019081905590935090917fb861b7bdbe611a846ab271b8d2810391bc8b5a968f390c322438ecab66bccf59916115e3916137f5565b60405180910390a26115f789838388610d1a565b6116135760405162461bcd60e51b81526004016103d9906136b5565b50505050505b9392505050565b600061162f8260600151611b5d565b60f81c9050600281106116545760405162461bcd60e51b81526004016103d9906137e5565b60008160ff16600281111561166557fe5b83516040850151919250600091829182916001600160a01b03161561168e578660400151611690565b335b925060008560028111156116a057fe5b141561176c5786606001518060200190516116be919081019061205e565b90945091506001600160a01b038416301415611702576116e0888484846119a2565b6116fd8884845a8560405180602001604052806000815250611a8a565b611767565b604051637921219560e11b81526001600160a01b0385169063f242432a90611734908b9087908790879060040161340f565b600060405180830381600087803b15801561174e57600080fd5b505af1158015611762573d6000803e3d6000fd5b505050505b611825565b86606001518060200190516117849190810190612040565b6040516323b872dd60e01b81529094506001600160a01b038516906323b872dd906117b7908b90879086906004016133f4565b602060405180830381600087803b1580156117d157600080fd5b505af11580156117e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061180991908101906124ed565b6118255760405162461bcd60e51b81526004016103d990613725565b5050505050505050565b61183a848383611cf7565b60018214611900576000828152600560205260409081902054905163a9059cbb60e01b81526001600160a01b0390911690819063a9059cbb9061188390879086906004016133d9565b602060405180830381600087803b15801561189d57600080fd5b505af11580156118b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118d591908101906124ed565b506118de611100565b6118fa5760405162461bcd60e51b81526004016103d990613795565b506105a6565b6001600160a01b0383166119265760405162461bcd60e51b81526004016103d9906136f5565b6000836001600160a01b03168260405161193f906132f1565b60006040518083038185875af1925050503d806000811461197c576040519150601f19603f3d011682016040523d82523d6000602084013e611981565b606091505b505090508061069b5760405162461bcd60e51b81526004016103d990613795565b6001600160a01b0384166000908152602081815260408083208584529091529020546119d4908263ffffffff611bff16565b6001600160a01b0380861660009081526020818152604080832087845282528083209490945591861681528082528281208582529091522054611a1d908263ffffffff611bda16565b6001600160a01b03808516600081815260208181526040808320888452909152908190209390935591519086169033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290611a7c9087908790613803565b60405180910390a450505050565b611a9c856001600160a01b0316611c27565b15610d12576000856001600160a01b031663f23a6e6184338a8989886040518763ffffffff1660e01b8152600401611ad8959493929190613392565b602060405180830381600088803b158015611af257600080fd5b5087f1158015611b06573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250611b2b9190810190612529565b90506001600160e01b0319811663f23a6e6160e01b14610d105760405162461bcd60e51b81526004016103d990613785565b600080825111611b7f5760405162461bcd60e51b81526004016103d990613615565b81600183510381518110611b8f57fe5b0160200151825160001901909252506001600160f81b03191690565b60008160200183511015611bd15760405162461bcd60e51b81526004016103d9906137a5565b50016020015190565b6000828201838110156116195760405162461bcd60e51b81526004016103d9906137b5565b600082821115611c215760405162461bcd60e51b81526004016103d990613645565b50900390565b6000813f801580159061161957507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470141592915050565b600060405180604001604052806002815260200161190160f01b8152507f035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d474960001b30604051602001611cb19291906134b1565b6040516020818303038152906040528051906020012083604051602001611cda93929190613276565b604051602081830303815290604052805190602001209050919050565b6001600160a01b038316600090815260208181526040808320858452909152902054611d29908263ffffffff611bff16565b6001600160a01b03841660008181526020818152604080832087845290915280822093909355915133907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290611d829087908790613803565b60405180910390a4505050565b6040518060800160405280600081526020016000815260200160006001600160a01b03168152602001606081525090565b80356105cf81613916565b80516105cf81613916565b600082601f830112611de757600080fd5b8135611dfa611df582613837565b613811565b91508181835260208401935060208101905083856020840282011115611e1f57600080fd5b60005b83811015611e4b5781611e358882611dc0565b8452506020928301929190910190600101611e22565b5050505092915050565b600082601f830112611e6657600080fd5b8135611e74611df582613837565b91508181835260208401935060208101905083856020840282011115611e9957600080fd5b60005b83811015611e4b5781611eaf8882611edb565b8452506020928301929190910190600101611e9c565b80356105cf8161392d565b80516105cf8161392d565b80356105cf81613936565b80356105cf8161393f565b80516105cf8161393f565b600082601f830112611f0d57600080fd5b8151611f1b611df582613857565b91508082526020830160208301858383011115611f3757600080fd5b611f428382846138e0565b50505092915050565b600082601f830112611f5c57600080fd5b8135611f6a611df582613857565b91508082526020830160208301858383011115611f8657600080fd5b611f428382846138d4565b600060808284031215611fa357600080fd5b611fad6080613811565b90506000611fbb8484612017565b8252506020611fcc84848301612017565b6020830152506040611fe084828501611dcb565b60408301525060608201516001600160401b03811115611fff57600080fd5b61200b84828501611efc565b60608301525092915050565b80516105cf81613936565b60006020828403121561203457600080fd5b60006110f88484611dc0565b60006020828403121561205257600080fd5b60006110f88484611dcb565b6000806040838503121561207157600080fd5b600061207d8585611dcb565b925050602061208e85828601612017565b9150509250929050565b600080604083850312156120ab57600080fd5b60006120b78585611dc0565b925050602061208e85828601611dc0565b600080600080600060a086880312156120e057600080fd5b60006120ec8888611dc0565b95505060206120fd88828901611dc0565b94505060408601356001600160401b0381111561211957600080fd5b61212588828901611e55565b93505060608601356001600160401b0381111561214157600080fd5b61214d88828901611e55565b92505060808601356001600160401b0381111561216957600080fd5b61217588828901611f4b565b9150509295509295909350565b60008060006060848603121561219757600080fd5b60006121a38686611dc0565b93505060206121b486828701611dc0565b92505060406121c586828701611edb565b9150509250925092565b600080600080600060a086880312156121e757600080fd5b60006121f38888611dc0565b955050602061220488828901611dc0565b945050604061221588828901611edb565b935050606061214d88828901611edb565b60008060008060008060c0878903121561223f57600080fd5b600061224b8989611dc0565b965050602061225c89828a01611dc0565b95505060408701356001600160401b0381111561227857600080fd5b61228489828a01611e55565b94505060608701356001600160401b038111156122a057600080fd5b6122ac89828a01611e55565b93505060806122bd89828a01611ec5565b92505060a08701356001600160401b038111156122d957600080fd5b6122e589828a01611f4b565b9150509295509295509295565b600080600080600060a0868803121561230a57600080fd5b60006123168888611dc0565b955050602061232788828901611dc0565b945050604061233888828901611ec5565b935050606061214d88828901611ec5565b60008060008060008060c0878903121561236257600080fd5b600061236e8989611dc0565b965050602061237f89828a01611dc0565b955050604061239089828a01611edb565b94505060606122ac89828a01611edb565b600080604083850312156123b457600080fd5b60006123c08585611dc0565b925050602061208e85828601611ec5565b600080600080608085870312156123e757600080fd5b60006123f38787611dc0565b945050602061240487828801611edb565b93505060408501356001600160401b0381111561242057600080fd5b61242c87828801611f4b565b92505060608501356001600160401b0381111561244857600080fd5b61245487828801611f4b565b91505092959194509250565b6000806040838503121561247357600080fd5b600061247f8585611dc0565b925050602061208e85828601611edb565b600080604083850312156124a357600080fd5b82356001600160401b038111156124b957600080fd5b6124c585828601611dd6565b92505060208301356001600160401b038111156124e157600080fd5b61208e85828601611e55565b6000602082840312156124ff57600080fd5b60006110f88484611ed0565b60006020828403121561251d57600080fd5b60006110f88484611ee6565b60006020828403121561253b57600080fd5b60006110f88484611ef1565b6000806040838503121561255a57600080fd5b82516001600160401b0381111561257057600080fd5b61257c85828601611efc565b92505060208301516001600160401b0381111561259857600080fd5b61208e85828601611efc565b6000602082840312156125b657600080fd5b81516001600160401b038111156125cc57600080fd5b6110f884828501611f91565b600080604083850312156125eb57600080fd5b82516001600160401b0381111561260157600080fd5b61257c85828601611f91565b60006020828403121561261f57600080fd5b60006110f88484611edb565b60006126378383612707565b505060200190565b612648816138c3565b82525050565b61264881613891565b600061266282613884565b61266c8185613888565b93506126778361387e565b8060005b838110156126a557815161268f888261262b565b975061269a8361387e565b92505060010161267b565b509495945050505050565b60006126bb82613884565b6126c581856107ba565b93506126d08361387e565b8060005b838110156126a55781516126e8888261262b565b97506126f38361387e565b9250506001016126d4565b6126488161389c565b612648816138a1565b61264861271c826138a1565b6138a1565b612648816138a4565b600061273582613884565b61273f8185613888565b935061274f8185602086016138e0565b6127588161390c565b9093019392505050565b600061276d82613884565b61277781856107ba565b93506127878185602086016138e0565b9290920192915050565b600061279e602b83613888565b7f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4981526a1117d49150d2541251539560aa1b602082015260400192915050565b60006127eb601c836107ba565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c0192915050565b6000612824602d83613888565b7f4d657461455243323057726170706572236465706f7369743a20494e434f525281526c4543545f4d53475f56414c554560981b602082015260400192915050565b6000612873602b83613888565b7f4d657461455243323057726170706572236465706f7369743a20494e56414c4981526a1117d49150d2541251539560aa1b602082015260400192915050565b60006128c0603783613888565b7f4c6962427974657323706f704c617374427974653a20475245415445525f544881527f414e5f5a45524f5f4c454e4754485f5245515549524544000000000000000000602082015260400192915050565b600061291f603c83613888565b7f4d657461455243323057726170706572236f6e4552433131353552656365697681527f65643a20494e56414c49445f455243313135355f524543454956454400000000602082015260400192915050565b600061297e602a83613888565b7f4552433131353523736166655472616e7366657246726f6d3a20494e56414c49815269222fa7a822a920aa27a960b11b602082015260400192915050565b60006129ca601783613888565b7f536166654d617468237375623a20554e444552464c4f57000000000000000000815260200192915050565b6000612a03603583613888565b7f45524331313535235f7361666542617463685472616e7366657246726f6d3a208152740929cac82989288be82a4a482b2a6be988a9c8ea89605b1b602082015260400192915050565b6000612a5a602c83613888565b7f4d657461455243323057726170706572236465706f7369743a204e4f4e5f4e5581526b4c4c5f4d53475f56414c554560a01b602082015260400192915050565b6000612aa8603a83613888565b60008051602061394983398151915281527f7572653a20554e535550504f525445445f5349474e4154555245000000000000602082015260400192915050565b6000612af5602983613888565b7f4d657461455243323057726170706572236465706f7369743a205452414e5346815268115497d1905253115160ba1b602082015260400192915050565b6000612b40603383613888565b7f455243313135354d657461236d657461536166655472616e7366657246726f6d8152720e881253959053125117d49150d25412515395606a1b602082015260400192915050565b6000612b95603683613888565b6000805160206139498339815191528152757572653a20494c4c4547414c5f5349474e415455524560501b602082015260400192915050565b6000612bdb603383613888565b7f455243313135354d657461235f7369676e617475726556616c69646174696f6e8152723a20494e56414c49445f5349474e415455524560681b602082015260400192915050565b6000612c30603783613888565b60008051602061394983398151915281527f7572653a204c454e4754485f39375f5245515549524544000000000000000000602082015260400192915050565b6000612c7d604183613888565b7f4d657461455243323057726170706572236f6e4552433131353542617463685281527f656365697665643a20494e56414c49445f455243313135355f524543454956456020820152601160fa1b604082015260600192915050565b6000612ce6603083613888565b7f45524331313535237361666542617463685472616e7366657246726f6d3a204981526f13959053125117d49150d2541251539560821b602082015260400192915050565b6000612d38602c83613888565b7f4d6574614552433230577261707065722377697468647261773a20494e56414c81526b125117d49150d2541251539560a21b602082015260400192915050565b6000612d86603183613888565b7f4d657461455243323057726170706572236765744964416464726573733a2055815270272922a3a4a9aa22a922a22faa27a5a2a760791b602082015260400192915050565b6000612dd9602c83613888565b7f455243313135352362616c616e63654f6642617463683a20494e56414c49445f81526b082a4a482b2be988a9c8ea8960a31b602082015260400192915050565b6000612e27603283613888565b7f455243313135354d657461235f7472616e736665724761734665653a204552438152710c8c17d514905394d1915497d1905253115160721b602082015260400192915050565b6000612e7b603383613888565b6000805160206139498339815191528152723ab9329d1024a72b20a624a22fa9a4a3a722a960691b602082015260400192915050565b6000612ebe602f83613888565b7f45524331313535237361666542617463685472616e7366657246726f6d3a204981526e272b20a624a22fa7a822a920aa27a960891b602082015260400192915050565b6000612f0f604383613888565b60008051602061394983398151915281527f7572653a204c454e4754485f475245415445525f5448414e5f305f524551554960208201526214915160ea1b604082015260600192915050565b6000612f68603883613888565b7f455243313135354d657461236d6574615361666542617463685472616e73666581527f7246726f6d3a20494e56414c49445f524543495049454e540000000000000000602082015260400192915050565b60006105cf600083613888565b60006105cf6000836107ba565b6000612fe1603f83613888565b7f45524331313535235f63616c6c6f6e455243313135354261746368526563656981527f7665643a20494e56414c49445f4f4e5f524543454956455f4d45535341474500602082015260400192915050565b6000613040603a83613888565b7f45524331313535235f63616c6c6f6e4552433131353552656365697665643a2081527f494e56414c49445f4f4e5f524543454956455f4d455353414745000000000000602082015260400192915050565b600061309f602a83613888565b7f4d6574614552433230577261707065722377697468647261773a205452414e5381526911915497d1905253115160b21b602082015260400192915050565b60006130eb603c83613888565b7f4c696242797465732372656164427974657333323a20475245415445525f4f5281527f5f455155414c5f544f5f33325f4c454e4754485f524551554952454400000000602082015260400192915050565b600061314a601683613888565b75536166654d617468236164643a204f564552464c4f5760501b815260200192915050565b600061317c602f83613888565b7f4d65746145524332305772617070657223676574546f6b656e49443a20554e5281526e22a3a4a9aa22a922a22faa27a5a2a760891b602082015260400192915050565b60006131cd602f83613888565b7f455243313135354d657461235f7369676e617475726556616c69646174696f6e81526e3a20494e56414c49445f4e4f4e434560881b602082015260400192915050565b600061321e602e83613888565b7f455243313135354d657461235f7472616e736665724761734665653a20554e5381526d2aa82827a92a22a22faa27a5a2a760911b602082015260400192915050565b612648816138bd565b600061161982846126b0565b60006132828286612762565b915061328e8285612710565b60208201915061329e8284612710565b506020019392505050565b60006132b58286612762565b91506132c18285612710565b602082019150610a498284612762565b60006132dc826127de565b91506132e88284612710565b50602001919050565b60006105cf82612fc7565b602081016105cf828461264e565b60608101613318828661263f565b613325602083018561263f565b6110f86040830184612707565b60a08101613340828861263f565b61334d602083018761264e565b818103604083015261335f8186612657565b905081810360608301526133738185612657565b90508181036080830152613387818461272a565b979650505050505050565b60a081016133a0828861263f565b6133ad602083018761264e565b6133ba6040830186612707565b6133c76060830185612707565b8181036080830152613387818461272a565b604081016133e7828561263f565b6116196020830184612707565b60608101613402828661264e565b613325602083018561264e565b60a0810161341d828761264e565b61342a602083018661264e565b6134376040830185612707565b6134446060830184612707565b818103608083015261345581612fba565b9695505050505050565b604081016133e7828561264e565b602080825281016116198184612657565b6040808252810161348f8185612657565b905081810360208301526110f88184612657565b602081016105cf82846126fe565b604081016134bf8285612707565b611619602083018461264e565b60c081016134da8289612707565b6134e7602083018861264e565b6134f4604083018761264e565b6135016060830186612707565b61350e6080830185612707565b61338760a0830184612707565b60a081016135298288612707565b613536602083018761264e565b613543604083018661264e565b6135506060830185612707565b6134556080830184612707565b6040810161356b8285612707565b81810360208301526110f8818461272a565b6080810161358b8287612707565b6135986020830186613261565b6135a56040830185612707565b610a496060830184612707565b602081016105cf8284612721565b604080825281016135d1818561272a565b905081810360208301526110f8818461272a565b602080825281016105cf81612791565b602080825281016105cf81612817565b602080825281016105cf81612866565b602080825281016105cf816128b3565b602080825281016105cf81612912565b602080825281016105cf81612971565b602080825281016105cf816129bd565b602080825281016105cf816129f6565b602080825281016105cf81612a4d565b602080825281016105cf81612a9b565b602080825281016105cf81612ae8565b602080825281016105cf81612b33565b602080825281016105cf81612b88565b602080825281016105cf81612bce565b602080825281016105cf81612c23565b602080825281016105cf81612c70565b602080825281016105cf81612cd9565b602080825281016105cf81612d2b565b602080825281016105cf81612d79565b602080825281016105cf81612dcc565b602080825281016105cf81612e1a565b602080825281016105cf81612e6e565b602080825281016105cf81612eb1565b602080825281016105cf81612f02565b602080825281016105cf81612f5b565b602080825281016105cf81612fd4565b602080825281016105cf81613033565b602080825281016105cf81613092565b602080825281016105cf816130de565b602080825281016105cf8161313d565b602080825281016105cf8161316f565b602080825281016105cf816131c0565b602080825281016105cf81613211565b602081016105cf8284612707565b604081016133e78285612707565b6040518181016001600160401b038111828210171561382f57600080fd5b604052919050565b60006001600160401b0382111561384d57600080fd5b5060209081020190565b60006001600160401b0382111561386d57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b60006105cf826138b1565b151590565b90565b6001600160e01b03191690565b6001600160a01b031690565b60ff1690565b60006105cf8260006105cf82613891565b82818337506000910152565b60005b838110156138fb5781810151838201526020016138e3565b838111156105a65750506000910152565b601f01601f191690565b61391f81613891565b811461392a57600080fd5b50565b61391f8161389c565b61391f816138a1565b61391f816138a456fe5369676e617475726556616c696461746f7223697356616c69645369676e6174a365627a7a72315820cbb87e4546c553702b30a0496fab2576e31ffbbbb691ba9ea26f49c0836458856c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x6080604052600436106101135760003560e01c8063a22cb465116100a0578063e985e9c511610064578063e985e9c514610313578063f23a6e6114610333578063f242432a14610353578063f5d4c82014610373578063fa4e12d71461039357610113565b8063a22cb46514610266578063a3d4926e14610286578063bc197c81146102a6578063ce0b514b146102d3578063d9caed12146102f357610113565b80634e1273f4116100e75780634e1273f4146101c457806363f8071c146101f15780637358e9a5146102115780638340f5491461023e5780639040a9491461025157610113565b8062fdd58e1461012157806301ffc9a7146101575780632d0335ab146101845780632eb2c2d6146101a4575b61011f600133346103b3565b005b34801561012d57600080fd5b5061014161013c366004612460565b6105ac565b60405161014e91906137f5565b60405180910390f35b34801561016357600080fd5b5061017761017236600461250b565b6105d5565b60405161014e91906134a3565b34801561019057600080fd5b5061014161019f366004612022565b610608565b3480156101b057600080fd5b5061011f6101bf3660046120c8565b610623565b3480156101d057600080fd5b506101e46101df366004612490565b6106a2565b60405161014e919061346d565b3480156101fd57600080fd5b5061014161020c366004612022565b610784565b34801561021d57600080fd5b5061023161022c36600461260d565b6107bf565b60405161014e91906132fc565b61011f61024c366004612182565b6103b3565b34801561025d57600080fd5b506101416107f4565b34801561027257600080fd5b5061011f6102813660046123a1565b6107fa565b34801561029257600080fd5b5061011f6102a1366004612226565b610869565b3480156102b257600080fd5b506102c66102c13660046120c8565b6109b9565b60405161014e91906135b2565b3480156102df57600080fd5b5061011f6102ee366004612349565b610a52565b3480156102ff57600080fd5b5061011f61030e366004612182565b610b0d565b34801561031f57600080fd5b5061017761032e366004612098565b610b26565b34801561033f57600080fd5b506102c661034e3660046121cf565b610b54565b34801561035f57600080fd5b5061011f61036e3660046121cf565b610b9d565b34801561037f57600080fd5b5061011f61038e3660046122f2565b610c15565b34801561039f57600080fd5b506101776103ae3660046123d1565b610d1a565b6001600160a01b0382166103e25760405162461bcd60e51b81526004016103d990613605565b60405180910390fd5b60006001600160a01b0384166001146105685734156104135760405162461bcd60e51b81526004016103d990613665565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906104439033903090879060040161330a565b602060405180830381600087803b15801561045d57600080fd5b505af1158015610471573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061049591908101906124ed565b5061049e611100565b6104ba5760405162461bcd60e51b81526004016103d990613685565b6001600160a01b0384166000908152600460205260409020548061055e576003805460010190819055600081815260056020908152604080832080546001600160a01b0319166001600160a01b038b169081179091558352600490915290819020829055519092507ff977d54986414fc91816901629d1d788ad95448ab4198dcb9b6dc5ed2b930c1f90610551908790859061345f565b60405180910390a1610562565b8091505b5061058b565b3482146105875760405162461bcd60e51b81526004016103d9906135f5565b5060015b6105a683828460405180602001604052806000815250611134565b50505050565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b60006301ffc9a760e01b6001600160e01b0319831614806105cf5750506001600160e01b031916630271189760e51b1490565b6001600160a01b031660009081526002602052604090205490565b336001600160a01b038616148061063f575061063f8533610b26565b61065b5760405162461bcd60e51b81526004016103d990613745565b6001600160a01b0384166106815760405162461bcd60e51b81526004016103d9906136e5565b61068d858585856111d9565b61069b858585855a866113e3565b5050505050565b606081518351146106c55760405162461bcd60e51b81526004016103d990613715565b606083516040519080825280602002602001820160405280156106f2578160200160208202803883390190505b50905060005b845181101561077c5760008086838151811061071057fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600085838151811061074657fe5b602002602001015181526020019081526020016000205482828151811061076957fe5b60209081029190910101526001016106f8565b509392505050565b6001600160a01b038116600090815260046020526040902054806107ba5760405162461bcd60e51b81526004016103d9906137c5565b919050565b6000818152600560205260409020546001600160a01b0316806107ba5760405162461bcd60e51b81526004016103d990613705565b60035490565b3360008181526001602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061085d9085906134a3565b60405180910390a35050565b6001600160a01b03851661088f5760405162461bcd60e51b81526004016103d990613765565b6060610899611d8f565b606061094c89857fa3d4926e8cf8fe8e020cd29f514c256bc2eec62aa2337e415f1a33a4828af5a060001b8c8c8c6040516020016108d7919061326a565b604051602081830303815290604052805190602001208c6040516020016108fe919061326a565b604051602081830303815290604052805190602001208c610920576000610923565b60015b604051602001610938969594939291906134cc565b6040516020818303038152906040526114b6565b905061095a898989896111d9565b84156109a0578080602001905161097491908101906125d8565b6020820151909450909250610991908a908a908a908a90866113e3565b61099b8983611620565b6109ae565b6109ae898989895a866113e3565b505050505050505050565b60003330146109da5760405162461bcd60e51b81526004016103d9906136d5565b60005b8451811015610a3d57610a028582815181106109f557fe5b60200260200101516107bf565b50610a353087878481518110610a1457fe5b6020026020010151878581518110610a2857fe5b602002602001015161182f565b6001016109dd565b5063bc197c8160e01b90505b95945050505050565b6001600160a01b038516610a785760405162461bcd60e51b81526004016103d990613695565b6060610a82611d8f565b6060610aba89857fce0b514b3931bdbe4d5d44e4f035afe7113767b7db71949271f6a62d9c60f558828c8c8c8c610920576000610923565b9050610ac8898989896119a2565b8415610aff5780806020019051610ae291908101906125d8565b6020820151909450909250610991908a908a908a908a9086611a8a565b6109ae898989895a86611a8a565b6000610b1884610784565b90506105a63384838561182f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6000333014610b755760405162461bcd60e51b81526004016103d990613625565b610b7e846107bf565b50610b8b3086868661182f565b5063f23a6e6160e01b95945050505050565b336001600160a01b0386161480610bb95750610bb98533610b26565b610bd55760405162461bcd60e51b81526004016103d990613635565b6001600160a01b038416610bfb5760405162461bcd60e51b81526004016103d9906135e5565b610c07858585856119a2565b61069b858585855a86611a8a565b6060610c7186837ff5d4c820494c8595de274c7ff619bead38aac4fbc3d143b5bf956aa4b84fa524828989610c4b576000610c4e565b60015b89610c5a576000610c5d565b60015b60405160200161093895949392919061351b565b6001600160a01b038781166000818152600160209081526040808320948b168084529490915290819020805460ff19168915151790555192935090917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610cda9088906134a3565b60405180910390a38215610d1257610cf0611d8f565b81806020019051610d0491908101906125a4565b9050610d108782611620565b505b505050505050565b600080825111610d3c5760405162461bcd60e51b81526004016103d990613755565b6001600160a01b038516610d625760405162461bcd60e51b81526004016103d990613735565b6000610d6d83611b5d565b60f81c905060058110610d925760405162461bcd60e51b81526004016103d990613675565b60008160ff166005811115610da357fe5b9050600080808080856005811115610db757fe5b1415610dd55760405162461bcd60e51b81526004016103d9906136a5565b6001856005811115610de357fe5b1415610eb9578751606114610e0a5760405162461bcd60e51b81526004016103d9906136c5565b610e1b88600063ffffffff611bab16565b9250610e2e88602063ffffffff611bab16565b915087604081518110610e3d57fe5b602001015160f81c60f81b60f81c935060018a85858560405160008152602001604052604051610e70949392919061357d565b6020604051602081039080840390855afa158015610e92573d6000803e3d6000fd5b5050604051601f1901516001600160a01b038d811691161497506110f89650505050505050565b6002856005811115610ec757fe5b1415610f7a578751606114610eee5760405162461bcd60e51b81526004016103d9906136c5565b610eff88600063ffffffff611bab16565b9250610f1288602063ffffffff611bab16565b915087604081518110610f2157fe5b602001015160f81c60f81b60f81c935060018a604051602001610f4491906132d1565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051610e70949392919061357d565b6003856005811115610f8857fe5b141561102d576040516320c13b0b60e01b81526001600160a01b038c16906320c13b0b90610fbc908c908c906004016135c0565b60206040518083038186803b158015610fd457600080fd5b505afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061100c9190810190612529565b6001600160e01b0319166320c13b0b60e01b1496506110f895505050505050565b600485600581111561103b57fe5b14156110e057604051630b135d3f60e11b81526001600160a01b038c1690631626ba7e9061106f908d908c9060040161355d565b60206040518083038186803b15801561108757600080fd5b505afa15801561109b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110bf9190810190612529565b6001600160e01b031916630b135d3f60e11b1496506110f895505050505050565b60405162461bcd60e51b81526004016103d990613675565b949350505050565b6000803d801561111757602081146111205761112c565b6001915061112c565b60206000803e60005191505b501515905090565b6001600160a01b038416600090815260208181526040808320868452909152902054611166908363ffffffff611bda16565b6001600160a01b03851660008181526020818152604080832088845290915280822093909355915190919033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62906111c29088908890613803565b60405180910390a46105a660008585855a86611a8a565b80518251146111fa5760405162461bcd60e51b81526004016103d990613655565b815160005b818110156113845761127583828151811061121657fe5b6020026020010151600080896001600160a01b03166001600160a01b03168152602001908152602001600020600087858151811061125057fe5b6020026020010151815260200190815260200160002054611bff90919063ffffffff16565b600080886001600160a01b03166001600160a01b0316815260200190815260200160002060008684815181106112a757fe5b602002602001015181526020019081526020016000208190555061132f8382815181106112d057fe5b6020026020010151600080886001600160a01b03166001600160a01b03168152602001908152602001600020600087858151811061130a57fe5b6020026020010151815260200190815260200160002054611bda90919063ffffffff16565b600080876001600160a01b03166001600160a01b03168152602001908152602001600020600086848151811061136157fe5b6020908102919091018101518252810191909152604001600020556001016111ff565b50836001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516113d492919061347e565b60405180910390a45050505050565b6113f5856001600160a01b0316611c27565b15610d12576000856001600160a01b031663bc197c8184338a8989886040518763ffffffff1660e01b8152600401611431959493929190613332565b602060405180830381600088803b15801561144b57600080fd5b5087f115801561145f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506114849190810190612529565b90506001600160e01b0319811663bc197c8160e01b14610d105760405162461bcd60e51b81526004016103d990613775565b606080838060200190516114cd9190810190612547565b6001600160a01b038716600090815260026020526040812054919450919250906114fe83604163ffffffff611bab16565b905081811080159061151257508160640181105b61152e5760405162461bcd60e51b81526004016103d9906137d5565b600061156a8683878051906020012060405160200161154f93929190613276565b60405160208183030381529060405280519060200120611c5e565b90506060868387604051602001611583939291906132a9565b60408051601f198184030181528282526001600160a01b038c166000818152600260205292909220600187019081905590935090917fb861b7bdbe611a846ab271b8d2810391bc8b5a968f390c322438ecab66bccf59916115e3916137f5565b60405180910390a26115f789838388610d1a565b6116135760405162461bcd60e51b81526004016103d9906136b5565b50505050505b9392505050565b600061162f8260600151611b5d565b60f81c9050600281106116545760405162461bcd60e51b81526004016103d9906137e5565b60008160ff16600281111561166557fe5b83516040850151919250600091829182916001600160a01b03161561168e578660400151611690565b335b925060008560028111156116a057fe5b141561176c5786606001518060200190516116be919081019061205e565b90945091506001600160a01b038416301415611702576116e0888484846119a2565b6116fd8884845a8560405180602001604052806000815250611a8a565b611767565b604051637921219560e11b81526001600160a01b0385169063f242432a90611734908b9087908790879060040161340f565b600060405180830381600087803b15801561174e57600080fd5b505af1158015611762573d6000803e3d6000fd5b505050505b611825565b86606001518060200190516117849190810190612040565b6040516323b872dd60e01b81529094506001600160a01b038516906323b872dd906117b7908b90879086906004016133f4565b602060405180830381600087803b1580156117d157600080fd5b505af11580156117e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061180991908101906124ed565b6118255760405162461bcd60e51b81526004016103d990613725565b5050505050505050565b61183a848383611cf7565b60018214611900576000828152600560205260409081902054905163a9059cbb60e01b81526001600160a01b0390911690819063a9059cbb9061188390879086906004016133d9565b602060405180830381600087803b15801561189d57600080fd5b505af11580156118b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118d591908101906124ed565b506118de611100565b6118fa5760405162461bcd60e51b81526004016103d990613795565b506105a6565b6001600160a01b0383166119265760405162461bcd60e51b81526004016103d9906136f5565b6000836001600160a01b03168260405161193f906132f1565b60006040518083038185875af1925050503d806000811461197c576040519150601f19603f3d011682016040523d82523d6000602084013e611981565b606091505b505090508061069b5760405162461bcd60e51b81526004016103d990613795565b6001600160a01b0384166000908152602081815260408083208584529091529020546119d4908263ffffffff611bff16565b6001600160a01b0380861660009081526020818152604080832087845282528083209490945591861681528082528281208582529091522054611a1d908263ffffffff611bda16565b6001600160a01b03808516600081815260208181526040808320888452909152908190209390935591519086169033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290611a7c9087908790613803565b60405180910390a450505050565b611a9c856001600160a01b0316611c27565b15610d12576000856001600160a01b031663f23a6e6184338a8989886040518763ffffffff1660e01b8152600401611ad8959493929190613392565b602060405180830381600088803b158015611af257600080fd5b5087f1158015611b06573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250611b2b9190810190612529565b90506001600160e01b0319811663f23a6e6160e01b14610d105760405162461bcd60e51b81526004016103d990613785565b600080825111611b7f5760405162461bcd60e51b81526004016103d990613615565b81600183510381518110611b8f57fe5b0160200151825160001901909252506001600160f81b03191690565b60008160200183511015611bd15760405162461bcd60e51b81526004016103d9906137a5565b50016020015190565b6000828201838110156116195760405162461bcd60e51b81526004016103d9906137b5565b600082821115611c215760405162461bcd60e51b81526004016103d990613645565b50900390565b6000813f801580159061161957507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470141592915050565b600060405180604001604052806002815260200161190160f01b8152507f035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d474960001b30604051602001611cb19291906134b1565b6040516020818303038152906040528051906020012083604051602001611cda93929190613276565b604051602081830303815290604052805190602001209050919050565b6001600160a01b038316600090815260208181526040808320858452909152902054611d29908263ffffffff611bff16565b6001600160a01b03841660008181526020818152604080832087845290915280822093909355915133907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290611d829087908790613803565b60405180910390a4505050565b6040518060800160405280600081526020016000815260200160006001600160a01b03168152602001606081525090565b80356105cf81613916565b80516105cf81613916565b600082601f830112611de757600080fd5b8135611dfa611df582613837565b613811565b91508181835260208401935060208101905083856020840282011115611e1f57600080fd5b60005b83811015611e4b5781611e358882611dc0565b8452506020928301929190910190600101611e22565b5050505092915050565b600082601f830112611e6657600080fd5b8135611e74611df582613837565b91508181835260208401935060208101905083856020840282011115611e9957600080fd5b60005b83811015611e4b5781611eaf8882611edb565b8452506020928301929190910190600101611e9c565b80356105cf8161392d565b80516105cf8161392d565b80356105cf81613936565b80356105cf8161393f565b80516105cf8161393f565b600082601f830112611f0d57600080fd5b8151611f1b611df582613857565b91508082526020830160208301858383011115611f3757600080fd5b611f428382846138e0565b50505092915050565b600082601f830112611f5c57600080fd5b8135611f6a611df582613857565b91508082526020830160208301858383011115611f8657600080fd5b611f428382846138d4565b600060808284031215611fa357600080fd5b611fad6080613811565b90506000611fbb8484612017565b8252506020611fcc84848301612017565b6020830152506040611fe084828501611dcb565b60408301525060608201516001600160401b03811115611fff57600080fd5b61200b84828501611efc565b60608301525092915050565b80516105cf81613936565b60006020828403121561203457600080fd5b60006110f88484611dc0565b60006020828403121561205257600080fd5b60006110f88484611dcb565b6000806040838503121561207157600080fd5b600061207d8585611dcb565b925050602061208e85828601612017565b9150509250929050565b600080604083850312156120ab57600080fd5b60006120b78585611dc0565b925050602061208e85828601611dc0565b600080600080600060a086880312156120e057600080fd5b60006120ec8888611dc0565b95505060206120fd88828901611dc0565b94505060408601356001600160401b0381111561211957600080fd5b61212588828901611e55565b93505060608601356001600160401b0381111561214157600080fd5b61214d88828901611e55565b92505060808601356001600160401b0381111561216957600080fd5b61217588828901611f4b565b9150509295509295909350565b60008060006060848603121561219757600080fd5b60006121a38686611dc0565b93505060206121b486828701611dc0565b92505060406121c586828701611edb565b9150509250925092565b600080600080600060a086880312156121e757600080fd5b60006121f38888611dc0565b955050602061220488828901611dc0565b945050604061221588828901611edb565b935050606061214d88828901611edb565b60008060008060008060c0878903121561223f57600080fd5b600061224b8989611dc0565b965050602061225c89828a01611dc0565b95505060408701356001600160401b0381111561227857600080fd5b61228489828a01611e55565b94505060608701356001600160401b038111156122a057600080fd5b6122ac89828a01611e55565b93505060806122bd89828a01611ec5565b92505060a08701356001600160401b038111156122d957600080fd5b6122e589828a01611f4b565b9150509295509295509295565b600080600080600060a0868803121561230a57600080fd5b60006123168888611dc0565b955050602061232788828901611dc0565b945050604061233888828901611ec5565b935050606061214d88828901611ec5565b60008060008060008060c0878903121561236257600080fd5b600061236e8989611dc0565b965050602061237f89828a01611dc0565b955050604061239089828a01611edb565b94505060606122ac89828a01611edb565b600080604083850312156123b457600080fd5b60006123c08585611dc0565b925050602061208e85828601611ec5565b600080600080608085870312156123e757600080fd5b60006123f38787611dc0565b945050602061240487828801611edb565b93505060408501356001600160401b0381111561242057600080fd5b61242c87828801611f4b565b92505060608501356001600160401b0381111561244857600080fd5b61245487828801611f4b565b91505092959194509250565b6000806040838503121561247357600080fd5b600061247f8585611dc0565b925050602061208e85828601611edb565b600080604083850312156124a357600080fd5b82356001600160401b038111156124b957600080fd5b6124c585828601611dd6565b92505060208301356001600160401b038111156124e157600080fd5b61208e85828601611e55565b6000602082840312156124ff57600080fd5b60006110f88484611ed0565b60006020828403121561251d57600080fd5b60006110f88484611ee6565b60006020828403121561253b57600080fd5b60006110f88484611ef1565b6000806040838503121561255a57600080fd5b82516001600160401b0381111561257057600080fd5b61257c85828601611efc565b92505060208301516001600160401b0381111561259857600080fd5b61208e85828601611efc565b6000602082840312156125b657600080fd5b81516001600160401b038111156125cc57600080fd5b6110f884828501611f91565b600080604083850312156125eb57600080fd5b82516001600160401b0381111561260157600080fd5b61257c85828601611f91565b60006020828403121561261f57600080fd5b60006110f88484611edb565b60006126378383612707565b505060200190565b612648816138c3565b82525050565b61264881613891565b600061266282613884565b61266c8185613888565b93506126778361387e565b8060005b838110156126a557815161268f888261262b565b975061269a8361387e565b92505060010161267b565b509495945050505050565b60006126bb82613884565b6126c581856107ba565b93506126d08361387e565b8060005b838110156126a55781516126e8888261262b565b97506126f38361387e565b9250506001016126d4565b6126488161389c565b612648816138a1565b61264861271c826138a1565b6138a1565b612648816138a4565b600061273582613884565b61273f8185613888565b935061274f8185602086016138e0565b6127588161390c565b9093019392505050565b600061276d82613884565b61277781856107ba565b93506127878185602086016138e0565b9290920192915050565b600061279e602b83613888565b7f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4981526a1117d49150d2541251539560aa1b602082015260400192915050565b60006127eb601c836107ba565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c0192915050565b6000612824602d83613888565b7f4d657461455243323057726170706572236465706f7369743a20494e434f525281526c4543545f4d53475f56414c554560981b602082015260400192915050565b6000612873602b83613888565b7f4d657461455243323057726170706572236465706f7369743a20494e56414c4981526a1117d49150d2541251539560aa1b602082015260400192915050565b60006128c0603783613888565b7f4c6962427974657323706f704c617374427974653a20475245415445525f544881527f414e5f5a45524f5f4c454e4754485f5245515549524544000000000000000000602082015260400192915050565b600061291f603c83613888565b7f4d657461455243323057726170706572236f6e4552433131353552656365697681527f65643a20494e56414c49445f455243313135355f524543454956454400000000602082015260400192915050565b600061297e602a83613888565b7f4552433131353523736166655472616e7366657246726f6d3a20494e56414c49815269222fa7a822a920aa27a960b11b602082015260400192915050565b60006129ca601783613888565b7f536166654d617468237375623a20554e444552464c4f57000000000000000000815260200192915050565b6000612a03603583613888565b7f45524331313535235f7361666542617463685472616e7366657246726f6d3a208152740929cac82989288be82a4a482b2a6be988a9c8ea89605b1b602082015260400192915050565b6000612a5a602c83613888565b7f4d657461455243323057726170706572236465706f7369743a204e4f4e5f4e5581526b4c4c5f4d53475f56414c554560a01b602082015260400192915050565b6000612aa8603a83613888565b60008051602061394983398151915281527f7572653a20554e535550504f525445445f5349474e4154555245000000000000602082015260400192915050565b6000612af5602983613888565b7f4d657461455243323057726170706572236465706f7369743a205452414e5346815268115497d1905253115160ba1b602082015260400192915050565b6000612b40603383613888565b7f455243313135354d657461236d657461536166655472616e7366657246726f6d8152720e881253959053125117d49150d25412515395606a1b602082015260400192915050565b6000612b95603683613888565b6000805160206139498339815191528152757572653a20494c4c4547414c5f5349474e415455524560501b602082015260400192915050565b6000612bdb603383613888565b7f455243313135354d657461235f7369676e617475726556616c69646174696f6e8152723a20494e56414c49445f5349474e415455524560681b602082015260400192915050565b6000612c30603783613888565b60008051602061394983398151915281527f7572653a204c454e4754485f39375f5245515549524544000000000000000000602082015260400192915050565b6000612c7d604183613888565b7f4d657461455243323057726170706572236f6e4552433131353542617463685281527f656365697665643a20494e56414c49445f455243313135355f524543454956456020820152601160fa1b604082015260600192915050565b6000612ce6603083613888565b7f45524331313535237361666542617463685472616e7366657246726f6d3a204981526f13959053125117d49150d2541251539560821b602082015260400192915050565b6000612d38602c83613888565b7f4d6574614552433230577261707065722377697468647261773a20494e56414c81526b125117d49150d2541251539560a21b602082015260400192915050565b6000612d86603183613888565b7f4d657461455243323057726170706572236765744964416464726573733a2055815270272922a3a4a9aa22a922a22faa27a5a2a760791b602082015260400192915050565b6000612dd9602c83613888565b7f455243313135352362616c616e63654f6642617463683a20494e56414c49445f81526b082a4a482b2be988a9c8ea8960a31b602082015260400192915050565b6000612e27603283613888565b7f455243313135354d657461235f7472616e736665724761734665653a204552438152710c8c17d514905394d1915497d1905253115160721b602082015260400192915050565b6000612e7b603383613888565b6000805160206139498339815191528152723ab9329d1024a72b20a624a22fa9a4a3a722a960691b602082015260400192915050565b6000612ebe602f83613888565b7f45524331313535237361666542617463685472616e7366657246726f6d3a204981526e272b20a624a22fa7a822a920aa27a960891b602082015260400192915050565b6000612f0f604383613888565b60008051602061394983398151915281527f7572653a204c454e4754485f475245415445525f5448414e5f305f524551554960208201526214915160ea1b604082015260600192915050565b6000612f68603883613888565b7f455243313135354d657461236d6574615361666542617463685472616e73666581527f7246726f6d3a20494e56414c49445f524543495049454e540000000000000000602082015260400192915050565b60006105cf600083613888565b60006105cf6000836107ba565b6000612fe1603f83613888565b7f45524331313535235f63616c6c6f6e455243313135354261746368526563656981527f7665643a20494e56414c49445f4f4e5f524543454956455f4d45535341474500602082015260400192915050565b6000613040603a83613888565b7f45524331313535235f63616c6c6f6e4552433131353552656365697665643a2081527f494e56414c49445f4f4e5f524543454956455f4d455353414745000000000000602082015260400192915050565b600061309f602a83613888565b7f4d6574614552433230577261707065722377697468647261773a205452414e5381526911915497d1905253115160b21b602082015260400192915050565b60006130eb603c83613888565b7f4c696242797465732372656164427974657333323a20475245415445525f4f5281527f5f455155414c5f544f5f33325f4c454e4754485f524551554952454400000000602082015260400192915050565b600061314a601683613888565b75536166654d617468236164643a204f564552464c4f5760501b815260200192915050565b600061317c602f83613888565b7f4d65746145524332305772617070657223676574546f6b656e49443a20554e5281526e22a3a4a9aa22a922a22faa27a5a2a760891b602082015260400192915050565b60006131cd602f83613888565b7f455243313135354d657461235f7369676e617475726556616c69646174696f6e81526e3a20494e56414c49445f4e4f4e434560881b602082015260400192915050565b600061321e602e83613888565b7f455243313135354d657461235f7472616e736665724761734665653a20554e5381526d2aa82827a92a22a22faa27a5a2a760911b602082015260400192915050565b612648816138bd565b600061161982846126b0565b60006132828286612762565b915061328e8285612710565b60208201915061329e8284612710565b506020019392505050565b60006132b58286612762565b91506132c18285612710565b602082019150610a498284612762565b60006132dc826127de565b91506132e88284612710565b50602001919050565b60006105cf82612fc7565b602081016105cf828461264e565b60608101613318828661263f565b613325602083018561263f565b6110f86040830184612707565b60a08101613340828861263f565b61334d602083018761264e565b818103604083015261335f8186612657565b905081810360608301526133738185612657565b90508181036080830152613387818461272a565b979650505050505050565b60a081016133a0828861263f565b6133ad602083018761264e565b6133ba6040830186612707565b6133c76060830185612707565b8181036080830152613387818461272a565b604081016133e7828561263f565b6116196020830184612707565b60608101613402828661264e565b613325602083018561264e565b60a0810161341d828761264e565b61342a602083018661264e565b6134376040830185612707565b6134446060830184612707565b818103608083015261345581612fba565b9695505050505050565b604081016133e7828561264e565b602080825281016116198184612657565b6040808252810161348f8185612657565b905081810360208301526110f88184612657565b602081016105cf82846126fe565b604081016134bf8285612707565b611619602083018461264e565b60c081016134da8289612707565b6134e7602083018861264e565b6134f4604083018761264e565b6135016060830186612707565b61350e6080830185612707565b61338760a0830184612707565b60a081016135298288612707565b613536602083018761264e565b613543604083018661264e565b6135506060830185612707565b6134556080830184612707565b6040810161356b8285612707565b81810360208301526110f8818461272a565b6080810161358b8287612707565b6135986020830186613261565b6135a56040830185612707565b610a496060830184612707565b602081016105cf8284612721565b604080825281016135d1818561272a565b905081810360208301526110f8818461272a565b602080825281016105cf81612791565b602080825281016105cf81612817565b602080825281016105cf81612866565b602080825281016105cf816128b3565b602080825281016105cf81612912565b602080825281016105cf81612971565b602080825281016105cf816129bd565b602080825281016105cf816129f6565b602080825281016105cf81612a4d565b602080825281016105cf81612a9b565b602080825281016105cf81612ae8565b602080825281016105cf81612b33565b602080825281016105cf81612b88565b602080825281016105cf81612bce565b602080825281016105cf81612c23565b602080825281016105cf81612c70565b602080825281016105cf81612cd9565b602080825281016105cf81612d2b565b602080825281016105cf81612d79565b602080825281016105cf81612dcc565b602080825281016105cf81612e1a565b602080825281016105cf81612e6e565b602080825281016105cf81612eb1565b602080825281016105cf81612f02565b602080825281016105cf81612f5b565b602080825281016105cf81612fd4565b602080825281016105cf81613033565b602080825281016105cf81613092565b602080825281016105cf816130de565b602080825281016105cf8161313d565b602080825281016105cf8161316f565b602080825281016105cf816131c0565b602080825281016105cf81613211565b602081016105cf8284612707565b604081016133e78285612707565b6040518181016001600160401b038111828210171561382f57600080fd5b604052919050565b60006001600160401b0382111561384d57600080fd5b5060209081020190565b60006001600160401b0382111561386d57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b60006105cf826138b1565b151590565b90565b6001600160e01b03191690565b6001600160a01b031690565b60ff1690565b60006105cf8260006105cf82613891565b82818337506000910152565b60005b838110156138fb5781810151838201526020016138e3565b838111156105a65750506000910152565b601f01601f191690565b61391f81613891565b811461392a57600080fd5b50565b61391f8161389c565b61391f816138a1565b61391f816138a456fe5369676e617475726556616c696461746f7223697356616c69645369676e6174a365627a7a72315820cbb87e4546c553702b30a0496fab2576e31ffbbbb691ba9ea26f49c0836458856c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "541:9969:20:-;;;646:1;619:28;;1658:104;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;748:3:20;1685:24;;;;;:33;;;1724:11;1685:24;1724:19;;:33;;-1:-1:-1;;;;;;1724:33:20;;;;;;541:9969;;;;;;",
  "deployedSourceMap": "541:9969:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2088:43;857:3;2109:10;2121:9;2088:7;:43::i;:::-;541:9969;7048:123:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7048:123:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10048:459:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10048:459:20;;;;;;;;:::i;:::-;;;;;;;;11309:110:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11309:110:28;;;;;;;;:::i;2273:513:27:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2273:513:27;;;;;;;;:::i;7451:486::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7451:486:27;;;;;;;;:::i;:::-;;;;;;;;7620:212:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7620:212:20;;;;;;;;:::i;8043:213::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8043:213:20;;;;;;;;:::i;:::-;;;;;;;;2550:1304;;;;;;;;;:::i;8331:79::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8331:79:20;;;:::i;6085:221:27:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6085:221:27;;;;;;;;:::i;4931:1707:28:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4931:1707:28;;;;;;;;:::i;6775:632:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6775:632:20;;;;;;;;:::i;:::-;;;;;;;;2593:1581:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2593:1581:28;;;;;;;;:::i;4279:174:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4279:174:20;;;;;;;;:::i;6557:151:27:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6557:151:27;;;;;;;;:::i;5860:489:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5860:489:20;;;;;;;;:::i;1343:547:27:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1343:547:27;;;;;;;;:::i;7512:950:28:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7512:950:28;;;;;;;;:::i;2040:3179:38:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2040:3179:38;;;;;;;;:::i;2550:1304:20:-;-1:-1:-1;;;;;2654:26:20;;2646:82;;;;-1:-1:-1;;;2646:82:20;;;;;;;;;;;;;;;;;2780:10;-1:-1:-1;;;;;2837:21:20;;857:3;2837:21;2833:953;;2911:9;:14;2903:71;;;;-1:-1:-1;;;2903:71:20;;;;;;;;;2982:62;;-1:-1:-1;;;2982:62:20;;-1:-1:-1;;;;;2982:27:20;;;;;:62;;3010:10;;3030:4;;3037:6;;2982:62;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2982:62:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2982:62:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2982:62:20;;;;;;;;;;3060:14;:12;:14::i;:::-;3052:68;;;;-1:-1:-1;;;3052:68:20;;;;;;;;;-1:-1:-1;;;;;3180:19:20;;3160:17;3180:19;;;:11;:19;;;;;;3253:14;3249:413;;3279:7;:12;;3290:1;3279:12;;;;;-1:-1:-1;3430:15:20;;;:11;:15;;;;;;;;:24;;-1:-1:-1;;;;;;3430:24:20;-1:-1:-1;;;;;3430:24:20;;;;;;;;3491:19;;:11;:19;;;;;;;:24;;;3584:29;3279:12;;-1:-1:-1;3584:29:20;;;;3430:24;;3279:12;;3584:29;;;;;;;;;;3249:413;;;3644:9;3639:14;;3249:413;2833:953;;;;3701:9;3691:6;:19;3683:77;;;;-1:-1:-1;;;3683:77:20;;;;;;;;;-1:-1:-1;748:3:20;2833:953;3816:33;3822:10;3834:2;3838:6;3816:33;;;;;;;;;;;;:5;:33::i;:::-;2550:1304;;;;:::o;7048:123:27:-;-1:-1:-1;;;;;7145:16:27;;7121:7;7145:16;;;;;;;;;;;:21;;;;;;;;;7048:123;;;;;:::o;10048:459:20:-;10118:4;-1:-1:-1;;;;;;;;;10138:25:20;;;;:136;;-1:-1:-1;;;;;;;;10249:25:20;-1:-1:-1;;;10249:25:20;;10048:459::o;11309:110:28:-;-1:-1:-1;;;;;11399:15:28;11369:13;11399:15;;;:6;:15;;;;;;;11309:110::o;2273:513:27:-;2450:10;-1:-1:-1;;;;;2450:19:27;;;;2449:60;;;2474:35;2491:5;2498:10;2474:16;:35::i;:::-;2441:120;;;;-1:-1:-1;;;2441:120:27;;;;;;;;;-1:-1:-1;;;;;2575:17:27;;2567:78;;;;-1:-1:-1;;;2567:78:27;;;;;;;;;2652:50;2675:5;2682:3;2687:4;2693:8;2652:22;:50::i;:::-;2708:73;2736:5;2743:3;2748:4;2754:8;2764:9;2775:5;2708:27;:73::i;:::-;2273:513;;;;;:::o;7451:486::-;7549:16;7601:4;:11;7583:7;:14;:29;7575:86;;;;-1:-1:-1;;;7575:86:27;;;;;;;;;7685:30;7732:7;:14;7718:29;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;7718:29:27;-1:-1:-1;7685:62:27;-1:-1:-1;7803:9:27;7798:108;7822:7;:14;7818:1;:18;7798:108;;;7870:8;:20;7879:7;7887:1;7879:10;;;;;;;;;;;;;;-1:-1:-1;;;;;7870:20:27;-1:-1:-1;;;;;7870:20:27;;;;;;;;;;;;:29;7891:4;7896:1;7891:7;;;;;;;;;;;;;;7870:29;;;;;;;;;;;;7851:13;7865:1;7851:16;;;;;;;;;;;;;;;;;:48;7838:3;;7798:108;;;-1:-1:-1;7919:13:27;7451:486;-1:-1:-1;;;7451:486:27:o;7620:212:20:-;-1:-1:-1;;;;;7710:19:20;;7677:15;7710:19;;;:11;:19;;;;;;7743:12;7735:72;;;;-1:-1:-1;;;7735:72:20;;;;;;;;;7620:212;;;:::o;8043:213::-;8099:13;8128:16;;;:11;:16;;;;;;-1:-1:-1;;;;;8128:16:20;8158:21;8150:83;;;;-1:-1:-1;;;8150:83:20;;;;;;;;8331:79;8398:7;;8331:79;:::o;6085:221:27:-;6208:10;6198:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;6198:32:27;;;;;;;;;;;:44;;-1:-1:-1;;6198:44:27;;;;;;;6253:48;;6198:32;;6208:10;6253:48;;;;6198:44;;6253:48;;;;;;;;;;6085:221;;:::o;4931:1707:28:-;-1:-1:-1;;;;;5132:17:28;;5124:86;;;;-1:-1:-1;;;5124:86:28;;;;;;;;;5237:25;5268:28;;:::i;:::-;5355:23;5381:342;5409:5;5422;8977:66;5455:22;;5487:5;5524:3;5588:4;5571:22;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5571:22:28;;;5561:33;;;;;;5631:8;5614:26;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5614:26:28;;;5604:37;;;;;;5651:9;:35;;5684:1;5651:35;;;5671:1;5651:35;5435:282;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5435:282:28;;;5381:20;:342::i;:::-;5355:368;;5753:50;5776:5;5783:3;5788:4;5794:8;5753:22;:50::i;:::-;5849:9;5845:789;;;5908:10;5897:43;;;;;;;;;;;;;;6410:27;;;;5868:72;;-1:-1:-1;5868:72:28;;-1:-1:-1;6354:96:28;;6382:5;;6389:3;;6394:4;;6400:8;;6439:10;6354:27;:96::i;:::-;6493:34;6509:5;6516:10;6493:15;:34::i;:::-;5845:789;;;6549:78;6577:5;6584:3;6589:4;6595:8;6605:9;6616:10;6549:27;:78::i;:::-;4931:1707;;;;;;;;;:::o;6775:632:20:-;6921:6;6995:10;7017:4;6995:27;6987:105;;;;-1:-1:-1;;;6987:105:20;;;;;;;;;7132:9;7126:235;7151:4;:11;7147:1;:15;7126:235;;;7213:21;7226:4;7231:1;7226:7;;;;;;;;;;;;;;7213:12;:21::i;:::-;;7302:52;7320:4;7327:5;7334:4;7339:1;7334:7;;;;;;;;;;;;;;7343;7351:1;7343:10;;;;;;;;;;;;;;7302:9;:52::i;:::-;7164:3;;7126:235;;;-1:-1:-1;;;;7374:28:20;-1:-1:-1;6775:632:20;;;;;;;;:::o;2593:1581:28:-;-1:-1:-1;;;;;2769:17:28;;2761:81;;;;-1:-1:-1;;;2761:81:28;;;;;;;;;2869:25;2900:28;;:::i;:::-;2987:23;3013:276;3041:5;3054;8748:66;3041:5;3150:3;3187;3200:7;3217:9;:35;;3250:1;3217:35;;3013:276;2987:302;;3318:43;3336:5;3343:3;3348;3353:7;3318:17;:43::i;:::-;3406:9;3402:768;;;3465:10;3454:43;;;;;;;;;;;;;;3960:27;;;;3425:72;;-1:-1:-1;3425:72:28;;-1:-1:-1;3911:89:28;;3934:5;;3941:3;;3946;;3951:7;;3989:10;3911:22;:89::i;3402:768::-;4092:71;4115:5;4122:3;4127;4132:7;4141:9;4152:10;4092:22;:71::i;4279:174:20:-;4363:15;4381:18;4392:6;4381:10;:18::i;:::-;4363:36;;4405:43;4415:10;4427:3;4432:7;4441:6;4405:9;:43::i;6557:151:27:-;-1:-1:-1;;;;;6675:17:27;;;6643:15;6675:17;;;:9;:17;;;;;;;;:28;;;;;;;;;;;;;;;6557:151::o;5860:489:20:-;5981:6;6055:10;6077:4;6055:27;6047:100;;;;-1:-1:-1;;;6047:100:20;;;;;;;;;6153:17;6166:3;6153:12;:17::i;:::-;;6264:44;6282:4;6289:5;6296:3;6301:6;6264:9;:44::i;:::-;-1:-1:-1;;;;5860:489:20;;;;;;;:::o;1343:547:27:-;1475:10;-1:-1:-1;;;;;1475:19:27;;;;1474:60;;;1499:35;1516:5;1523:10;1499:16;:35::i;:::-;1466:115;;;;-1:-1:-1;;;1466:115:27;;;;;;;;;-1:-1:-1;;;;;1595:17:27;;1587:72;;;;-1:-1:-1;;;1587:72:27;;;;;;;;;1770:43;1788:5;1795:3;1800;1805:7;1770:17;:43::i;:::-;1819:66;1842:5;1849:3;1854;1859:7;1868:9;1879:5;1819:22;:66::i;7512:950:28:-;7722:23;7748:380;7776:6;7790:5;9187:66;7776:6;7922:9;7989;:35;;8022:1;7989:35;;;8009:1;7989:35;8056:9;:35;;8089:1;8056:35;;;8076:1;8056:35;7803:319;;;;;;;;;;;;;7748:380;-1:-1:-1;;;;;8165:17:28;;;;;;;:9;:17;;;;;;;;:28;;;;;;;;;;;;;;:40;;-1:-1:-1;;8165:40:28;;;;;;;8235:44;7722:406;;-1:-1:-1;8165:28:28;;8235:44;;;;8165:40;;8235:44;;;;;;;;;;8322:9;8318:140;;;8341:28;;:::i;:::-;8383:10;8372:36;;;;;;;;;;;;;;8341:67;;8416:35;8432:6;8440:10;8416:15;:35::i;:::-;8318:140;;7512:950;;;;;;:::o;2040:3179:38:-;2197:12;2248:1;2234:4;:11;:15;2219:113;;;;-1:-1:-1;;;2219:113:38;;;;;;;;;-1:-1:-1;;;;;2354:30:38;;2339:112;;;;-1:-1:-1;;;2339:112:38;;;;;;;;;2508:22;2539:18;:4;:16;:18::i;:::-;2533:25;;;-1:-1:-1;2642:29:38;2617:55;;2602:144;;;;-1:-1:-1;;;2602:144:38;;;;;;;;;2783:27;2827:16;2813:31;;;;;;;;;;2783:61;-1:-1:-1;2896:7:38;;;;;3265:13;:38;;;;;;;;;3261:1597;;;3313:64;;-1:-1:-1;;;3313:64:38;;;;;;;;3261:1597;3443:20;3426:13;:37;;;;;;;;;3422:1436;;;3490:4;:11;3505:2;3490:17;3473:109;;;;-1:-1:-1;;;3473:109:38;;;;;;;;;3594:19;:4;3611:1;3594:19;:16;:19;:::i;:::-;3590:23;-1:-1:-1;3625:20:38;:4;3642:2;3625:20;:16;:20;:::i;:::-;3621:24;;3663:4;3668:2;3663:8;;;;;;;;;;;;;;;;3657:15;;3653:19;;3692:25;3702:5;3709:1;3712;3715;3692:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3692:25:38;;-1:-1:-1;;3692:25:38;;-1:-1:-1;;;;;3735:27:38;;;;;;;-1:-1:-1;3770:14:38;;-1:-1:-1;;;;;;;3770:14:38;3422:1436;3887:21;3870:13;:38;;;;;;;;;3866:992;;;3935:4;:11;3950:2;3935:17;3918:109;;;;-1:-1:-1;;;3918:109:38;;;;;;;;;4039:19;:4;4056:1;4039:19;:16;:19;:::i;:::-;4035:23;-1:-1:-1;4070:20:38;:4;4087:2;4070:20;:16;:20;:::i;:::-;4066:24;;4108:4;4113:2;4108:8;;;;;;;;;;;;;;;;4102:15;;4098:19;;4137:130;4219:5;4166:59;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4166:59:38;;;4156:70;;;;;;4236:1;4247;4258;4137:130;;;;;;;;;;;;;;;;;;;3866:992;4437:25;4420:13;:42;;;;;;;;;4416:442;;;4504:60;;-1:-1:-1;;;4504:60:38;;-1:-1:-1;;;;;4504:47:38;;;;;:60;;4552:5;;4559:4;;4504:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4504:60:38;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4504:60:38;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4504:60:38;;;;;;;;;-1:-1:-1;;;;;;4482:82:38;-1:-1:-1;;;4482:82:38;;-1:-1:-1;4572:14:38;;-1:-1:-1;;;;;;4572:14:38;4416:442;4692:27;4675:13;:44;;;;;;;;;4671:187;;;4769:60;;-1:-1:-1;;;4769:60:38;;-1:-1:-1;;;;;4769:47:38;;;;;:60;;4817:5;;4824:4;;4769:60;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4769:60:38;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4769:60:38;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4769:60:38;;;;;;;;;-1:-1:-1;;;;;;4739:90:38;-1:-1:-1;;;4739:90:38;;-1:-1:-1;4837:14:38;;-1:-1:-1;;;;;;4837:14:38;4671:187;5146:68;;-1:-1:-1;;;5146:68:38;;;;;;;;2040:3179;;;;;;;:::o;8856:710:20:-;8910:4;;9105:14;9170:43;;;;9272:4;9267:182;;;;9098:428;;9170:43;9204:1;9189:16;;9170:43;;9267:182;9356:4;9351:3;9346;9331:30;9437:3;9431:10;9416:25;;9098:428;-1:-1:-1;9545:16:20;;;-1:-1:-1;8856:710:20;:::o;649:401:30:-;-1:-1:-1;;;;;788:13:30;;:8;:13;;;;;;;;;;;:18;;;;;;;;;:31;;811:7;788:31;:22;:31;:::i;:::-;-1:-1:-1;;;;;767:13:30;;:8;:13;;;;;;;;;;;:18;;;;;;;;;:52;;;;849:59;;767:13;;:8;864:10;;849:59;;;;781:3;;900:7;;849:59;;;;;;;;;;972:73;1003:3;1009;1014;1019:7;1028:9;1039:5;972:22;:73::i;4403:670:27:-;4557:8;:15;4542:4;:11;:30;4534:96;;;;-1:-1:-1;;;4534:96:27;;;;;;;;;4694:11;;4674:17;4743:243;4767:9;4763:1;:13;4743:243;;;4866:41;4895:8;4904:1;4895:11;;;;;;;;;;;;;;4866:8;:15;4875:5;-1:-1:-1;;;;;4866:15:27;-1:-1:-1;;;;;4866:15:27;;;;;;;;;;;;:24;4882:4;4887:1;4882:7;;;;;;;;;;;;;;4866:24;;;;;;;;;;;;:28;;:41;;;;:::i;:::-;4839:8;:15;4848:5;-1:-1:-1;;;;;4839:15:27;-1:-1:-1;;;;;4839:15:27;;;;;;;;;;;;:24;4855:4;4860:1;4855:7;;;;;;;;;;;;;;4839:24;;;;;;;;;;;:68;;;;4940:39;4967:8;4976:1;4967:11;;;;;;;;;;;;;;4940:8;:13;4949:3;-1:-1:-1;;;;;4940:13:27;-1:-1:-1;;;;;4940:13:27;;;;;;;;;;;;:22;4954:4;4959:1;4954:7;;;;;;;;;;;;;;4940:22;;;;;;;;;;;;:26;;:39;;;;:::i;:::-;4915:8;:13;4924:3;-1:-1:-1;;;;;4915:13:27;-1:-1:-1;;;;;4915:13:27;;;;;;;;;;;;:22;4929:4;4934:1;4929:7;;;;;;;;;;;;;;;;;;;4915:22;;;;;;;;;;-1:-1:-1;4915:22:27;:64;4778:3;;4743:243;;;;5048:3;-1:-1:-1;;;;;5015:53:27;5041:5;-1:-1:-1;;;;;5015:53:27;5029:10;-1:-1:-1;;;;;5015:53:27;;5053:4;5059:8;5015:53;;;;;;;;;;;;;;;;4403:670;;;;;:::o;5186:502::-;5407:16;:3;-1:-1:-1;;;;;5407:14:27;;:16::i;:::-;5403:281;;;5433:13;5471:3;-1:-1:-1;;;;;5449:49:27;;5503:9;5514:10;5526:5;5533:4;5539:8;5549:5;5449:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5449:106:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5449:106:27;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5449:106:27;;;;;;;;;5433:122;-1:-1:-1;;;;;;;5571:38:27;;-1:-1:-1;;;5571:38:27;5563:114;;;;-1:-1:-1;;;5563:114:27;;;;;;;;9922:1243:28;10053:23;10086:16;10178:8;10167:36;;;;;;;;;;;;;;-1:-1:-1;;;;;10287:15:28;;10264:20;10287:15;;;:6;:15;;;;;;10147:56;;-1:-1:-1;10147:56:28;;-1:-1:-1;10287:15:28;10372:19;10147:56;10388:2;10372:19;:15;:19;:::i;:::-;10364:28;-1:-1:-1;10488:21:28;;;;;;10487:57;;;10524:12;10539:3;10524:18;10515:5;:28;10487:57;10472:135;;;;-1:-1:-1;;;10472:135:28;;;;;;;;;10647:12;10662:89;10707:11;10720:5;10737:10;10727:21;;;;;;10690:59;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10690:59:28;;;10680:70;;;;;;10662:17;:89::i;:::-;10647:104;;10806:21;10847:11;10860:5;10867:10;10830:48;;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;10830:48:28;;;-1:-1:-1;;;;;10914:15:28;;;;;;:6;49:4:-1;10914:15:28;;;;;10940:1;10932:9;;10914:27;;;;10830:48;;-1:-1:-1;10914:15:28;;10952:31;;;;;;;;;;;;;;11035:46;11052:7;11061:4;11067:8;11077:3;11035:16;:46::i;:::-;11027:110;;;;-1:-1:-1;;;11027:110:28;;;;;;;;;-1:-1:-1;;;;;9922:1243:28;;;;;;:::o;11861:1695::-;11989:21;12019:29;:2;:15;;;:27;:29::i;:::-;12013:36;;;-1:-1:-1;12130:19:28;12106:44;;12091:121;;;;-1:-1:-1;;;12091:121:28;;;;;;;;;12270:25;12311:15;12298:29;;;;;;;;;;12441:9;;12558:15;;;;12270:57;;-1:-1:-1;12354:20:28;;;;;;-1:-1:-1;;;;;12558:29:28;;:60;;12603:2;:15;;;12558:60;;;12590:10;12558:60;12543:75;-1:-1:-1;12673:20:28;12657:12;:36;;;;;;;;;12653:899;;;12740:2;:15;;;12729:47;;;;;;;;;;;;;;12703:73;;-1:-1:-1;12703:73:28;-1:-1:-1;;;;;;12837:29:28;;12861:4;12837:29;12833:458;;;12878:52;12896:5;12903:12;12917:7;12926:3;12878:17;:52::i;:::-;13054:72;13077:5;13084:12;13098:7;13107:9;13118:3;13054:72;;;;;;;;;;;;:22;:72::i;:::-;12833:458;;;13204:78;;-1:-1:-1;;;13204:78:28;;-1:-1:-1;;;;;13204:39:28;;;;;:78;;13244:5;;13251:12;;13265:7;;13274:3;;13204:78;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13204:78:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13204:78:28;;;;12833:458;12653:899;;;13364:2;:15;;;13353:38;;;;;;;;;;;;;;13416:59;;-1:-1:-1;;;13416:59:28;;13338:53;;-1:-1:-1;;;;;;13416:33:28;;;;;:59;;13450:5;;13457:12;;13471:3;;13416:59;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13416:59:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13416:59:28;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13416:59:28;;;;;;;;;13399:146;;;;-1:-1:-1;;;13399:146:28;;;;;;;;;11861:1695;;;;;;;;:::o;4836:647:20:-;4987:30;4993:5;5000:8;5010:6;4987:5;:30::i;:::-;748:3;5066:8;:18;5062:415;;5094:13;5110:21;;;:11;:21;;;;;;;;5139:35;;-1:-1:-1;;;5139:35:20;;-1:-1:-1;;;;;5110:21:20;;;;;;5139:22;;:35;;5162:3;;5167:6;;5139:35;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5139:35:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5139:35:20;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5139:35:20;;;;;;;;;;5190:14;:12;:14::i;:::-;5182:69;;;;-1:-1:-1;;;5182:69:20;;;;;;;;;5062:415;;;;-1:-1:-1;;;;;5281:17:20;;5273:74;;;;-1:-1:-1;;;5273:74:20;;;;;;;;;5356:12;5374:3;-1:-1:-1;;;;;5374:8:20;5389:6;5374:26;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5355:45:20;;;5416:7;5408:62;;;;-1:-1:-1;;;5408:62:20;;;;;;;;3176:367:27;-1:-1:-1;;;;;3328:15:27;;:8;:15;;;;;;;;;;;:20;;;;;;;;;:33;;3353:7;3328:33;:24;:33;:::i;:::-;-1:-1:-1;;;;;3305:15:27;;;:8;:15;;;;;;;;;;;:20;;;;;;;;:56;;;;3407:13;;;;;;;;;;;:18;;;;;;;;:31;;3430:7;3407:31;:22;:31;:::i;:::-;-1:-1:-1;;;;;3386:13:27;;;:8;:13;;;;;;;;;;;:18;;;;;;;;;;:52;;;;3486;;;;;;3501:10;;3486:52;;;;3400:3;;3530:7;;3486:52;;;;;;;;;;3176:367;;;;:::o;3651:455::-;3843:16;:3;-1:-1:-1;;;;;3843:14:27;;:16::i;:::-;3839:263;;;3869:13;3907:3;-1:-1:-1;;;;;3885:44:27;;3934:9;3945:10;3957:5;3964:3;3969:7;3978:5;3885:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3885:99:27;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3885:99:27;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3885:99:27;;;;;;;;;3869:115;-1:-1:-1;;;;;;;4000:32:27;;-1:-1:-1;;;4000:32:27;3992:103;;;;-1:-1:-1;;;3992:103:27;;;;;;;;1028:396:35;1100:13;1149:1;1138;:8;:12;1123:98;;;;-1:-1:-1;;;1123:98:35;;;;;;;;;1261:1;1274;1263;:8;:12;1261:15;;;;;;;;;;;;1359:8;;-1:-1:-1;;1355:16:35;1378:17;;;-1:-1:-1;;;;;;;1261:15:35;;1028:396::o;1780:436::-;1879:14;1930:5;1938:2;1930:10;1918:1;:8;:22;;1903:113;;;;-1:-1:-1;;;1903:113:35;;;;;;;;;-1:-1:-1;2173:13:35;2089:2;2173:13;2167:20;;1780:436::o;1421:158:37:-;1479:7;1506:5;;;1525:6;;;;1517:41;;;;-1:-1:-1;;;1517:41:37;;;;;;;;1188:158;1246:7;1274:1;1269;:6;;1261:42;;;;-1:-1:-1;;;1261:42:37;;;;;;;;;-1:-1:-1;1321:5:37;;;1188:158::o;543:398:34:-;604:4;856:21;;892:15;;;;;:43;;-1:-1:-1;208:66:34;911:24;;;884:52;-1:-1:-1;;543:398:34:o;1346:336:36:-;1434:14;1508:13;;;;;;;;;;;;;-1:-1:-1;;;1508:13:36;;;885:66;1576:25;;1623:4;1552:88;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1552:88:36;;;1531:119;;;;;;1660:10;1482:194;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1482:194:36;;;1465:212;;;;;;1458:219;;1346:336;;;:::o;2389:257:30:-;-1:-1:-1;;;;;2517:15:30;;:8;:15;;;;;;;;;;;:20;;;;;;;;;:33;;2542:7;2517:33;:24;:33;:::i;:::-;-1:-1:-1;;;;;2494:15:30;;:8;:15;;;;;;;;;;;:20;;;;;;;;;:56;;;;2580:61;;2595:10;;2580:61;;;;2510:3;;2633:7;;2580:61;;;;;;;;;;2389:257;;;:::o;541:9969:20:-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;541:9969:20;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;611:707;;728:3;721:4;713:6;709:17;705:27;695:2;;746:1;743;736:12;695:2;783:6;770:20;805:80;820:64;877:6;820:64;;;805:80;;;796:89;;902:5;927:6;920:5;913:21;957:4;949:6;945:17;935:27;;979:4;974:3;970:14;963:21;;1032:6;1079:3;1071:4;1063:6;1059:17;1054:3;1050:27;1047:36;1044:2;;;1096:1;1093;1086:12;1044:2;1121:1;1106:206;1131:6;1128:1;1125:13;1106:206;;;1189:3;1211:37;1244:3;1232:10;1211:37;;;1199:50;;-1:-1;1272:4;1263:14;;;;1291;;;;;1153:1;1146:9;1106:206;;;1110:14;688:630;;;;;;;;1344:707;;1461:3;1454:4;1446:6;1442:17;1438:27;1428:2;;1479:1;1476;1469:12;1428:2;1516:6;1503:20;1538:80;1553:64;1610:6;1553:64;;1538:80;1529:89;;1635:5;1660:6;1653:5;1646:21;1690:4;1682:6;1678:17;1668:27;;1712:4;1707:3;1703:14;1696:21;;1765:6;1812:3;1804:4;1796:6;1792:17;1787:3;1783:27;1780:36;1777:2;;;1829:1;1826;1819:12;1777:2;1854:1;1839:206;1864:6;1861:1;1858:13;1839:206;;;1922:3;1944:37;1977:3;1965:10;1944:37;;;1932:50;;-1:-1;2005:4;1996:14;;;;2024;;;;;1886:1;1879:9;1839:206;;2059:124;2123:20;;2148:30;2123:20;2148:30;;2190:128;2265:13;;2283:30;2265:13;2283:30;;2325:130;2392:20;;2417:33;2392:20;2417:33;;2462:128;2528:20;;2553:32;2528:20;2553:32;;2597:132;2674:13;;2692:32;2674:13;2692:32;;2737:434;;2845:3;2838:4;2830:6;2826:17;2822:27;2812:2;;2863:1;2860;2853:12;2812:2;2893:6;2887:13;2915:60;2930:44;2967:6;2930:44;;2915:60;2906:69;;2995:6;2988:5;2981:21;3031:4;3023:6;3019:17;3064:4;3057:5;3053:16;3099:3;3090:6;3085:3;3081:16;3078:25;3075:2;;;3116:1;3113;3106:12;3075:2;3126:39;3158:6;3153:3;3148;3126:39;;;2805:366;;;;;;;;3180:440;;3281:3;3274:4;3266:6;3262:17;3258:27;3248:2;;3299:1;3296;3289:12;3248:2;3336:6;3323:20;3358:64;3373:48;3414:6;3373:48;;3358:64;3349:73;;3442:6;3435:5;3428:21;3478:4;3470:6;3466:17;3511:4;3504:5;3500:16;3546:3;3537:6;3532:3;3528:16;3525:25;3522:2;;;3563:1;3560;3553:12;3522:2;3573:41;3607:6;3602:3;3597;3573:41;;3664:923;;3788:4;3776:9;3771:3;3767:19;3763:30;3760:2;;;3806:1;3803;3796:12;3760:2;3824:20;3839:4;3824:20;;;3815:29;-1:-1;3896:1;3928:60;3984:3;3964:9;3928:60;;;3903:86;;-1:-1;4062:2;4095:60;4151:3;4127:22;;;4095:60;;;4088:4;4081:5;4077:16;4070:86;4010:157;4225:2;4258:60;4314:3;4305:6;4294:9;4290:22;4258:60;;;4251:4;4244:5;4240:16;4233:86;4177:153;4409:2;4398:9;4394:18;4388:25;-1:-1;;;;;4425:6;4422:30;4419:2;;;4465:1;4462;4455:12;4419:2;4500:65;4561:3;4552:6;4541:9;4537:22;4500:65;;;4493:4;4486:5;4482:16;4475:91;4340:237;3754:833;;;;;4731:134;4809:13;;4827:33;4809:13;4827:33;;4872:241;;4976:2;4964:9;4955:7;4951:23;4947:32;4944:2;;;4992:1;4989;4982:12;4944:2;5027:1;5044:53;5089:7;5069:9;5044:53;;5120:279;;5243:2;5231:9;5222:7;5218:23;5214:32;5211:2;;;5259:1;5256;5249:12;5211:2;5294:1;5311:72;5375:7;5355:9;5311:72;;5406:415;;;5546:2;5534:9;5525:7;5521:23;5517:32;5514:2;;;5562:1;5559;5552:12;5514:2;5597:1;5614:72;5678:7;5658:9;5614:72;;;5604:82;;5576:116;5723:2;5741:64;5797:7;5788:6;5777:9;5773:22;5741:64;;;5731:74;;5702:109;5508:313;;;;;;5828:366;;;5949:2;5937:9;5928:7;5924:23;5920:32;5917:2;;;5965:1;5962;5955:12;5917:2;6000:1;6017:53;6062:7;6042:9;6017:53;;;6007:63;;5979:97;6107:2;6125:53;6170:7;6161:6;6150:9;6146:22;6125:53;;6201:1135;;;;;;6440:3;6428:9;6419:7;6415:23;6411:33;6408:2;;;6457:1;6454;6447:12;6408:2;6492:1;6509:53;6554:7;6534:9;6509:53;;;6499:63;;6471:97;6599:2;6617:61;6670:7;6661:6;6650:9;6646:22;6617:61;;;6607:71;;6578:106;6743:2;6732:9;6728:18;6715:32;-1:-1;;;;;6759:6;6756:30;6753:2;;;6799:1;6796;6789:12;6753:2;6819:78;6889:7;6880:6;6869:9;6865:22;6819:78;;;6809:88;;6694:209;6962:2;6951:9;6947:18;6934:32;-1:-1;;;;;6978:6;6975:30;6972:2;;;7018:1;7015;7008:12;6972:2;7038:78;7108:7;7099:6;7088:9;7084:22;7038:78;;;7028:88;;6913:209;7181:3;7170:9;7166:19;7153:33;-1:-1;;;;;7198:6;7195:30;7192:2;;;7238:1;7235;7228:12;7192:2;7258:62;7312:7;7303:6;7292:9;7288:22;7258:62;;;7248:72;;7132:194;6402:934;;;;;;;;;7343:507;;;;7489:2;7477:9;7468:7;7464:23;7460:32;7457:2;;;7505:1;7502;7495:12;7457:2;7540:1;7557:53;7602:7;7582:9;7557:53;;;7547:63;;7519:97;7647:2;7665:61;7718:7;7709:6;7698:9;7694:22;7665:61;;;7655:71;;7626:106;7763:2;7781:53;7826:7;7817:6;7806:9;7802:22;7781:53;;;7771:63;;7742:98;7451:399;;;;;;7857:863;;;;;;8046:3;8034:9;8025:7;8021:23;8017:33;8014:2;;;8063:1;8060;8053:12;8014:2;8098:1;8115:53;8160:7;8140:9;8115:53;;;8105:63;;8077:97;8205:2;8223:61;8276:7;8267:6;8256:9;8252:22;8223:61;;;8213:71;;8184:106;8321:2;8339:53;8384:7;8375:6;8364:9;8360:22;8339:53;;;8329:63;;8300:98;8429:2;8447:53;8492:7;8483:6;8472:9;8468:22;8447:53;;8727:1239;;;;;;;8972:3;8960:9;8951:7;8947:23;8943:33;8940:2;;;8989:1;8986;8979:12;8940:2;9024:1;9041:53;9086:7;9066:9;9041:53;;;9031:63;;9003:97;9131:2;9149:53;9194:7;9185:6;9174:9;9170:22;9149:53;;;9139:63;;9110:98;9267:2;9256:9;9252:18;9239:32;-1:-1;;;;;9283:6;9280:30;9277:2;;;9323:1;9320;9313:12;9277:2;9343:78;9413:7;9404:6;9393:9;9389:22;9343:78;;;9333:88;;9218:209;9486:2;9475:9;9471:18;9458:32;-1:-1;;;;;9502:6;9499:30;9496:2;;;9542:1;9539;9532:12;9496:2;9562:78;9632:7;9623:6;9612:9;9608:22;9562:78;;;9552:88;;9437:209;9677:3;9696:50;9738:7;9729:6;9718:9;9714:22;9696:50;;;9686:60;;9656:96;9811:3;9800:9;9796:19;9783:33;-1:-1;;;;;9828:6;9825:30;9822:2;;;9868:1;9865;9858:12;9822:2;9888:62;9942:7;9933:6;9922:9;9918:22;9888:62;;;9878:72;;9762:194;8934:1032;;;;;;;;;11099:835;;;;;;11274:3;11262:9;11253:7;11249:23;11245:33;11242:2;;;11291:1;11288;11281:12;11242:2;11326:1;11343:53;11388:7;11368:9;11343:53;;;11333:63;;11305:97;11433:2;11451:53;11496:7;11487:6;11476:9;11472:22;11451:53;;;11441:63;;11412:98;11541:2;11559:50;11601:7;11592:6;11581:9;11577:22;11559:50;;;11549:60;;11520:95;11646:2;11664:50;11706:7;11697:6;11686:9;11682:22;11664:50;;12439:967;;;;;;;12634:3;12622:9;12613:7;12609:23;12605:33;12602:2;;;12651:1;12648;12641:12;12602:2;12686:1;12703:53;12748:7;12728:9;12703:53;;;12693:63;;12665:97;12793:2;12811:53;12856:7;12847:6;12836:9;12832:22;12811:53;;;12801:63;;12772:98;12901:2;12919:53;12964:7;12955:6;12944:9;12940:22;12919:53;;;12909:63;;12880:98;13009:2;13027:53;13072:7;13063:6;13052:9;13048:22;13027:53;;14267:360;;;14385:2;14373:9;14364:7;14360:23;14356:32;14353:2;;;14401:1;14398;14391:12;14353:2;14436:1;14453:53;14498:7;14478:9;14453:53;;;14443:63;;14415:97;14543:2;14561:50;14603:7;14594:6;14583:9;14579:22;14561:50;;14634:825;;;;;14807:3;14795:9;14786:7;14782:23;14778:33;14775:2;;;14824:1;14821;14814:12;14775:2;14859:1;14876:53;14921:7;14901:9;14876:53;;;14866:63;;14838:97;14966:2;14984:53;15029:7;15020:6;15009:9;15005:22;14984:53;;;14974:63;;14945:98;15102:2;15091:9;15087:18;15074:32;-1:-1;;;;;15118:6;15115:30;15112:2;;;15158:1;15155;15148:12;15112:2;15178:62;15232:7;15223:6;15212:9;15208:22;15178:62;;;15168:72;;15053:193;15305:2;15294:9;15290:18;15277:32;-1:-1;;;;;15321:6;15318:30;15315:2;;;15361:1;15358;15351:12;15315:2;15381:62;15435:7;15426:6;15415:9;15411:22;15381:62;;;15371:72;;15256:193;14769:690;;;;;;;;15466:366;;;15587:2;15575:9;15566:7;15562:23;15558:32;15555:2;;;15603:1;15600;15593:12;15555:2;15638:1;15655:53;15700:7;15680:9;15655:53;;;15645:63;;15617:97;15745:2;15763:53;15808:7;15799:6;15788:9;15784:22;15763:53;;15839:638;;;16010:2;15998:9;15989:7;15985:23;15981:32;15978:2;;;16026:1;16023;16016:12;15978:2;16061:31;;-1:-1;;;;;16101:30;;16098:2;;;16144:1;16141;16134:12;16098:2;16164:78;16234:7;16225:6;16214:9;16210:22;16164:78;;;16154:88;;16040:208;16307:2;16296:9;16292:18;16279:32;-1:-1;;;;;16323:6;16320:30;16317:2;;;16363:1;16360;16353:12;16317:2;16383:78;16453:7;16444:6;16433:9;16429:22;16383:78;;16484:257;;16596:2;16584:9;16575:7;16571:23;16567:32;16564:2;;;16612:1;16609;16602:12;16564:2;16647:1;16664:61;16717:7;16697:9;16664:61;;16748:239;;16851:2;16839:9;16830:7;16826:23;16822:32;16819:2;;;16867:1;16864;16857:12;16819:2;16902:1;16919:52;16963:7;16943:9;16919:52;;16994:261;;17108:2;17096:9;17087:7;17083:23;17079:32;17076:2;;;17124:1;17121;17114:12;17076:2;17159:1;17176:63;17231:7;17211:9;17176:63;;17262:577;;;17404:2;17392:9;17383:7;17379:23;17375:32;17372:2;;;17420:1;17417;17410:12;17372:2;17455:24;;-1:-1;;;;;17488:30;;17485:2;;;17531:1;17528;17521:12;17485:2;17551:69;17612:7;17603:6;17592:9;17588:22;17551:69;;;17541:79;;17434:192;17678:2;17667:9;17663:18;17657:25;-1:-1;;;;;17694:6;17691:30;17688:2;;;17734:1;17731;17724:12;17688:2;17754:69;17815:7;17806:6;17795:9;17791:22;17754:69;;17846:390;;17985:2;17973:9;17964:7;17960:23;17956:32;17953:2;;;18001:1;17998;17991:12;17953:2;18036:24;;-1:-1;;;;;18069:30;;18066:2;;;18112:1;18109;18102:12;18066:2;18132:88;18212:7;18203:6;18192:9;18188:22;18132:88;;18243:615;;;18404:2;18392:9;18383:7;18379:23;18375:32;18372:2;;;18420:1;18417;18410:12;18372:2;18455:24;;-1:-1;;;;;18488:30;;18485:2;;;18531:1;18528;18521:12;18485:2;18551:88;18631:7;18622:6;18611:9;18607:22;18551:88;;18865:241;;18969:2;18957:9;18948:7;18944:23;18940:32;18937:2;;;18985:1;18982;18975:12;18937:2;19020:1;19037:53;19082:7;19062:9;19037:53;;19114:173;;19201:46;19243:3;19235:6;19201:46;;;-1:-1;;19276:4;19267:14;;19194:93;19493:142;19584:45;19623:5;19584:45;;;19579:3;19572:58;19566:69;;;19642:113;19725:24;19743:5;19725:24;;19793:690;;19938:54;19986:5;19938:54;;;20005:86;20084:6;20079:3;20005:86;;;19998:93;;20112:56;20162:5;20112:56;;;20188:7;20216:1;20201:260;20226:6;20223:1;20220:13;20201:260;;;20293:6;20287:13;20314:63;20373:3;20358:13;20314:63;;;20307:70;;20394:60;20447:6;20394:60;;;20384:70;-1:-1;;20248:1;20241:9;20201:260;;;-1:-1;20474:3;;19917:566;-1:-1;;;;;19917:566;20522:734;;20685:54;20733:5;20685:54;;;20752:104;20849:6;20844:3;20752:104;;;20745:111;;20877:56;20927:5;20877:56;;;20953:7;20981:1;20966:268;20991:6;20988:1;20985:13;20966:268;;;21058:6;21052:13;21079:71;21146:3;21131:13;21079:71;;;21072:78;;21167:60;21220:6;21167:60;;;21157:70;-1:-1;;21013:1;21006:9;20966:268;;21264:104;21341:21;21356:5;21341:21;;21375:113;21458:24;21476:5;21458:24;;21495:152;21596:45;21616:24;21634:5;21616:24;;;21596:45;;21654:110;21735:23;21752:5;21735:23;;21771:343;;21881:38;21913:5;21881:38;;;21931:70;21994:6;21989:3;21931:70;;;21924:77;;22006:52;22051:6;22046:3;22039:4;22032:5;22028:16;22006:52;;;22079:29;22101:6;22079:29;;;22070:39;;;;21861:253;-1:-1;;;21861:253;22121:356;;22249:38;22281:5;22249:38;;;22299:88;22380:6;22375:3;22299:88;;;22292:95;;22392:52;22437:6;22432:3;22425:4;22418:5;22414:16;22392:52;;;22456:16;;;;;22229:248;-1:-1;;22229:248;22844:380;;23004:67;23068:2;23063:3;23004:67;;;23104:34;23084:55;;-1:-1;;;23168:2;23159:12;;23152:35;23215:2;23206:12;;22990:234;-1:-1;;22990:234;23233:400;;23411:85;23493:2;23488:3;23411:85;;;23529:66;23509:87;;23624:2;23615:12;;23397:236;-1:-1;;23397:236;23642:382;;23802:67;23866:2;23861:3;23802:67;;;23902:34;23882:55;;-1:-1;;;23966:2;23957:12;;23950:37;24015:2;24006:12;;23788:236;-1:-1;;23788:236;24033:380;;24193:67;24257:2;24252:3;24193:67;;;24293:34;24273:55;;-1:-1;;;24357:2;24348:12;;24341:35;24404:2;24395:12;;24179:234;-1:-1;;24179:234;24422:392;;24582:67;24646:2;24641:3;24582:67;;;24682:34;24662:55;;24751:25;24746:2;24737:12;;24730:47;24805:2;24796:12;;24568:246;-1:-1;;24568:246;24823:397;;24983:67;25047:2;25042:3;24983:67;;;25083:34;25063:55;;25152:30;25147:2;25138:12;;25131:52;25211:2;25202:12;;24969:251;-1:-1;;24969:251;25229:379;;25389:67;25453:2;25448:3;25389:67;;;25489:34;25469:55;;-1:-1;;;25553:2;25544:12;;25537:34;25599:2;25590:12;;25375:233;-1:-1;;25375:233;25617:323;;25777:67;25841:2;25836:3;25777:67;;;25877:25;25857:46;;25931:2;25922:12;;25763:177;-1:-1;;25763:177;25949:390;;26109:67;26173:2;26168:3;26109:67;;;26209:34;26189:55;;-1:-1;;;26273:2;26264:12;;26257:45;26330:2;26321:12;;26095:244;-1:-1;;26095:244;26348:381;;26508:67;26572:2;26567:3;26508:67;;;26608:34;26588:55;;-1:-1;;;26672:2;26663:12;;26656:36;26720:2;26711:12;;26494:235;-1:-1;;26494:235;26738:395;;26898:67;26962:2;26957:3;26898:67;;;-1:-1;;;;;;;;;;;26978:55;;27067:28;27062:2;27053:12;;27046:50;27124:2;27115:12;;26884:249;-1:-1;;26884:249;27142:378;;27302:67;27366:2;27361:3;27302:67;;;27402:34;27382:55;;-1:-1;;;27466:2;27457:12;;27450:33;27511:2;27502:12;;27288:232;-1:-1;;27288:232;27529:388;;27689:67;27753:2;27748:3;27689:67;;;27789:34;27769:55;;-1:-1;;;27853:2;27844:12;;27837:43;27908:2;27899:12;;27675:242;-1:-1;;27675:242;27926:391;;28086:67;28150:2;28145:3;28086:67;;;-1:-1;;;;;;;;;;;28166:55;;-1:-1;;;28250:2;28241:12;;28234:46;28308:2;28299:12;;28072:245;-1:-1;;28072:245;28326:388;;28486:67;28550:2;28545:3;28486:67;;;28586:34;28566:55;;-1:-1;;;28650:2;28641:12;;28634:43;28705:2;28696:12;;28472:242;-1:-1;;28472:242;28723:392;;28883:67;28947:2;28942:3;28883:67;;;-1:-1;;;;;;;;;;;28963:55;;29052:25;29047:2;29038:12;;29031:47;29106:2;29097:12;;28869:246;-1:-1;;28869:246;29124:439;;29284:67;29348:2;29343:3;29284:67;;;29384:34;29364:55;;29453:34;29448:2;29439:12;;29432:56;-1:-1;;;29517:2;29508:12;;29501:25;29554:2;29545:12;;29270:293;-1:-1;;29270:293;29572:385;;29732:67;29796:2;29791:3;29732:67;;;29832:34;29812:55;;-1:-1;;;29896:2;29887:12;;29880:40;29948:2;29939:12;;29718:239;-1:-1;;29718:239;29966:381;;30126:67;30190:2;30185:3;30126:67;;;30226:34;30206:55;;-1:-1;;;30290:2;30281:12;;30274:36;30338:2;30329:12;;30112:235;-1:-1;;30112:235;30356:386;;30516:67;30580:2;30575:3;30516:67;;;30616:34;30596:55;;-1:-1;;;30680:2;30671:12;;30664:41;30733:2;30724:12;;30502:240;-1:-1;;30502:240;30751:381;;30911:67;30975:2;30970:3;30911:67;;;31011:34;30991:55;;-1:-1;;;31075:2;31066:12;;31059:36;31123:2;31114:12;;30897:235;-1:-1;;30897:235;31141:387;;31301:67;31365:2;31360:3;31301:67;;;31401:34;31381:55;;-1:-1;;;31465:2;31456:12;;31449:42;31519:2;31510:12;;31287:241;-1:-1;;31287:241;31537:388;;31697:67;31761:2;31756:3;31697:67;;;-1:-1;;;;;;;;;;;31777:55;;-1:-1;;;31861:2;31852:12;;31845:43;31916:2;31907:12;;31683:242;-1:-1;;31683:242;31934:384;;32094:67;32158:2;32153:3;32094:67;;;32194:34;32174:55;;-1:-1;;;32258:2;32249:12;;32242:39;32309:2;32300:12;;32080:238;-1:-1;;32080:238;32327:441;;32487:67;32551:2;32546:3;32487:67;;;-1:-1;;;;;;;;;;;32567:55;;32656:34;32651:2;32642:12;;32635:56;-1:-1;;;32720:2;32711:12;;32704:27;32759:2;32750:12;;32473:295;-1:-1;;32473:295;32777:393;;32937:67;33001:2;32996:3;32937:67;;;33037:34;33017:55;;33106:26;33101:2;33092:12;;33085:48;33161:2;33152:12;;32923:247;-1:-1;;32923:247;33179:260;;33338:65;33401:1;33396:3;33338:65;;33448:296;;33625:83;33706:1;33701:3;33625:83;;33753:400;;33913:67;33977:2;33972:3;33913:67;;;34013:34;33993:55;;34082:33;34077:2;34068:12;;34061:55;34144:2;34135:12;;33899:254;-1:-1;;33899:254;34162:395;;34322:67;34386:2;34381:3;34322:67;;;34422:34;34402:55;;34491:28;34486:2;34477:12;;34470:50;34548:2;34539:12;;34308:249;-1:-1;;34308:249;34566:379;;34726:67;34790:2;34785:3;34726:67;;;34826:34;34806:55;;-1:-1;;;34890:2;34881:12;;34874:34;34936:2;34927:12;;34712:233;-1:-1;;34712:233;34954:397;;35114:67;35178:2;35173:3;35114:67;;;35214:34;35194:55;;35283:30;35278:2;35269:12;;35262:52;35342:2;35333:12;;35100:251;-1:-1;;35100:251;35360:322;;35520:67;35584:2;35579:3;35520:67;;;-1:-1;;;35600:45;;35673:2;35664:12;;35506:176;-1:-1;;35506:176;35691:384;;35851:67;35915:2;35910:3;35851:67;;;35951:34;35931:55;;-1:-1;;;36015:2;36006:12;;35999:39;36066:2;36057:12;;35837:238;-1:-1;;35837:238;36084:384;;36244:67;36308:2;36303:3;36244:67;;;36344:34;36324:55;;-1:-1;;;36408:2;36399:12;;36392:39;36459:2;36450:12;;36230:238;-1:-1;;36230:238;36477:383;;36637:67;36701:2;36696:3;36637:67;;;36737:34;36717:55;;-1:-1;;;36801:2;36792:12;;36785:38;36851:2;36842:12;;36623:237;-1:-1;;36623:237;37375:107;37454:22;37470:5;37454:22;;37489:326;;37665:125;37786:3;37777:6;37665:125;;37822:540;;38022:93;38111:3;38102:6;38022:93;;;38015:100;;38126:75;38197:3;38188:6;38126:75;;;38223:2;38218:3;38214:12;38207:19;;38237:75;38308:3;38299:6;38237:75;;;-1:-1;38334:2;38325:12;;38003:359;-1:-1;;;38003:359;38369:558;;38587:93;38676:3;38667:6;38587:93;;;38580:100;;38691:75;38762:3;38753:6;38691:75;;;38788:2;38783:3;38779:12;38772:19;;38809:93;38898:3;38889:6;38809:93;;39477:511;;39704:148;39848:3;39704:148;;;39697:155;;39863:75;39934:3;39925:6;39863:75;;;-1:-1;39960:2;39951:12;;39685:303;-1:-1;39685:303;39995:370;;40193:147;40336:3;40193:147;;40372:213;40490:2;40475:18;;40504:71;40479:9;40548:6;40504:71;;40592:467;40782:2;40767:18;;40796:79;40771:9;40848:6;40796:79;;;40886:80;40962:2;40951:9;40947:18;40938:6;40886:80;;;40977:72;41045:2;41034:9;41030:18;41021:6;40977:72;;41066:1055;41422:3;41407:19;;41437:79;41411:9;41489:6;41437:79;;;41527:72;41595:2;41584:9;41580:18;41571:6;41527:72;;;41647:9;41641:4;41637:20;41632:2;41621:9;41617:18;41610:48;41672:108;41775:4;41766:6;41672:108;;;41664:116;;41828:9;41822:4;41818:20;41813:2;41802:9;41798:18;41791:48;41853:108;41956:4;41947:6;41853:108;;;41845:116;;42010:9;42004:4;42000:20;41994:3;41983:9;41979:19;41972:49;42035:76;42106:4;42097:6;42035:76;;;42027:84;41393:728;-1:-1;;;;;;;41393:728;42128:759;42384:3;42369:19;;42399:79;42373:9;42451:6;42399:79;;;42489:72;42557:2;42546:9;42542:18;42533:6;42489:72;;;42572;42640:2;42629:9;42625:18;42616:6;42572:72;;;42655;42723:2;42712:9;42708:18;42699:6;42655:72;;;42776:9;42770:4;42766:20;42760:3;42749:9;42745:19;42738:49;42801:76;42872:4;42863:6;42801:76;;42894:340;43048:2;43033:18;;43062:79;43037:9;43114:6;43062:79;;;43152:72;43220:2;43209:9;43205:18;43196:6;43152:72;;43241:435;43415:2;43400:18;;43429:71;43404:9;43473:6;43429:71;;;43511:72;43579:2;43568:9;43564:18;43555:6;43511:72;;43683:851;43985:3;43970:19;;44000:71;43974:9;44044:6;44000:71;;;44082:72;44150:2;44139:9;44135:18;44126:6;44082:72;;;44165;44233:2;44222:9;44218:18;44209:6;44165:72;;;44248;44316:2;44305:9;44301:18;44292:6;44248:72;;;44369:9;44363:4;44359:20;44353:3;44342:9;44338:19;44331:49;44394:130;44519:4;44394:130;;;44386:138;43956:578;-1:-1;;;;;;43956:578;44541:324;44687:2;44672:18;;44701:71;44676:9;44745:6;44701:71;;44872:361;45040:2;45054:47;;;45025:18;;45115:108;45025:18;45209:6;45115:108;;45240:620;45486:2;45500:47;;;45471:18;;45561:108;45471:18;45655:6;45561:108;;;45553:116;;45717:9;45711:4;45707:20;45702:2;45691:9;45687:18;45680:48;45742:108;45845:4;45836:6;45742:108;;45867:201;45979:2;45964:18;;45993:65;45968:9;46031:6;45993:65;;46075:324;46221:2;46206:18;;46235:71;46210:9;46279:6;46235:71;;;46317:72;46385:2;46374:9;46370:18;46361:6;46317:72;;46406:771;46664:3;46649:19;;46679:71;46653:9;46723:6;46679:71;;;46761:72;46829:2;46818:9;46814:18;46805:6;46761:72;;;46844;46912:2;46901:9;46897:18;46888:6;46844:72;;;46927;46995:2;46984:9;46980:18;46971:6;46927:72;;;47010:73;47078:3;47067:9;47063:19;47054:6;47010:73;;;47094;47162:3;47151:9;47147:19;47138:6;47094:73;;47184:659;47414:3;47399:19;;47429:71;47403:9;47473:6;47429:71;;;47511:72;47579:2;47568:9;47564:18;47555:6;47511:72;;;47594;47662:2;47651:9;47647:18;47638:6;47594:72;;;47677;47745:2;47734:9;47730:18;47721:6;47677:72;;;47760:73;47828:3;47817:9;47813:19;47804:6;47760:73;;48628:408;48792:2;48777:18;;48806:71;48781:9;48850:6;48806:71;;;48925:9;48919:4;48915:20;48910:2;48899:9;48895:18;48888:48;48950:76;49021:4;49012:6;48950:76;;49043:539;49241:3;49226:19;;49256:71;49230:9;49300:6;49256:71;;;49338:68;49402:2;49391:9;49387:18;49378:6;49338:68;;;49417:72;49485:2;49474:9;49470:18;49461:6;49417:72;;;49500;49568:2;49557:9;49553:18;49544:6;49500:72;;49589:209;49705:2;49690:18;;49719:69;49694:9;49761:6;49719:69;;49805:492;49987:2;50001:47;;;49972:18;;50062:76;49972:18;50124:6;50062:76;;;50054:84;;50186:9;50180:4;50176:20;50171:2;50160:9;50156:18;50149:48;50211:76;50282:4;50273:6;50211:76;;50304:407;50495:2;50509:47;;;50480:18;;50570:131;50480:18;50570:131;;50718:407;50909:2;50923:47;;;50894:18;;50984:131;50894:18;50984:131;;51132:407;51323:2;51337:47;;;51308:18;;51398:131;51308:18;51398:131;;51546:407;51737:2;51751:47;;;51722:18;;51812:131;51722:18;51812:131;;51960:407;52151:2;52165:47;;;52136:18;;52226:131;52136:18;52226:131;;52374:407;52565:2;52579:47;;;52550:18;;52640:131;52550:18;52640:131;;52788:407;52979:2;52993:47;;;52964:18;;53054:131;52964:18;53054:131;;53202:407;53393:2;53407:47;;;53378:18;;53468:131;53378:18;53468:131;;53616:407;53807:2;53821:47;;;53792:18;;53882:131;53792:18;53882:131;;54030:407;54221:2;54235:47;;;54206:18;;54296:131;54206:18;54296:131;;54444:407;54635:2;54649:47;;;54620:18;;54710:131;54620:18;54710:131;;54858:407;55049:2;55063:47;;;55034:18;;55124:131;55034:18;55124:131;;55272:407;55463:2;55477:47;;;55448:18;;55538:131;55448:18;55538:131;;55686:407;55877:2;55891:47;;;55862:18;;55952:131;55862:18;55952:131;;56100:407;56291:2;56305:47;;;56276:18;;56366:131;56276:18;56366:131;;56514:407;56705:2;56719:47;;;56690:18;;56780:131;56690:18;56780:131;;56928:407;57119:2;57133:47;;;57104:18;;57194:131;57104:18;57194:131;;57342:407;57533:2;57547:47;;;57518:18;;57608:131;57518:18;57608:131;;57756:407;57947:2;57961:47;;;57932:18;;58022:131;57932:18;58022:131;;58170:407;58361:2;58375:47;;;58346:18;;58436:131;58346:18;58436:131;;58584:407;58775:2;58789:47;;;58760:18;;58850:131;58760:18;58850:131;;58998:407;59189:2;59203:47;;;59174:18;;59264:131;59174:18;59264:131;;59412:407;59603:2;59617:47;;;59588:18;;59678:131;59588:18;59678:131;;59826:407;60017:2;60031:47;;;60002:18;;60092:131;60002:18;60092:131;;60240:407;60431:2;60445:47;;;60416:18;;60506:131;60416:18;60506:131;;60654:407;60845:2;60859:47;;;60830:18;;60920:131;60830:18;60920:131;;61068:407;61259:2;61273:47;;;61244:18;;61334:131;61244:18;61334:131;;61482:407;61673:2;61687:47;;;61658:18;;61748:131;61658:18;61748:131;;61896:407;62087:2;62101:47;;;62072:18;;62162:131;62072:18;62162:131;;62310:407;62501:2;62515:47;;;62486:18;;62576:131;62486:18;62576:131;;62724:407;62915:2;62929:47;;;62900:18;;62990:131;62900:18;62990:131;;63138:407;63329:2;63343:47;;;63314:18;;63404:131;63314:18;63404:131;;63552:407;63743:2;63757:47;;;63728:18;;63818:131;63728:18;63818:131;;63966:213;64084:2;64069:18;;64098:71;64073:9;64142:6;64098:71;;64186:324;64332:2;64317:18;;64346:71;64321:9;64390:6;64346:71;;64517:256;64579:2;64573:9;64605:17;;;-1:-1;;;;;64665:34;;64701:22;;;64662:62;64659:2;;;64737:1;64734;64727:12;64659:2;64753;64746:22;64557:216;;-1:-1;64557:216;64780:304;;-1:-1;;;;;64931:6;64928:30;64925:2;;;64971:1;64968;64961:12;64925:2;-1:-1;65006:4;64994:17;;;65059:15;;64862:222;65402:317;;-1:-1;;;;;65533:6;65530:30;65527:2;;;65573:1;65570;65563:12;65527:2;-1:-1;65704:4;65640;65617:17;;;;-1:-1;;65613:33;65694:15;;65464:255;66054:151;66178:4;66169:14;;66126:79;66212:137;66315:12;;66286:63;66725:178;66843:19;;;66892:4;66883:14;;66836:67;67730:91;;67792:24;67810:5;67792:24;;67934:85;68000:13;67993:21;;67976:43;68026:72;68088:5;68071:27;68105:144;-1:-1;;;;;;68166:78;;68149:100;68256:121;-1:-1;;;;;68318:54;;68301:76;68463:81;68534:4;68523:16;;68506:38;68551:129;;68638:37;68669:5;68687:121;68766:37;68797:5;68766:37;;68931:145;69012:6;69007:3;69002;68989:30;-1:-1;69068:1;69050:16;;69043:27;68982:94;69085:268;69150:1;69157:101;69171:6;69168:1;69165:13;69157:101;;;69238:11;;;69232:18;69219:11;;;69212:39;69193:2;69186:10;69157:101;;;69273:6;69270:1;69267:13;69264:2;;;-1:-1;;69338:1;69320:16;;69313:27;69134:219;69523:97;69611:2;69591:14;-1:-1;;69587:28;;69571:49;69628:117;69697:24;69715:5;69697:24;;;69690:5;69687:35;69677:2;;69736:1;69733;69726:12;69677:2;69671:74;;69892:111;69958:21;69973:5;69958:21;;70010:117;70079:24;70097:5;70079:24;;70134:115;70202:23;70219:5;70202:23;",
  "source": "pragma solidity ^0.5.16;\npragma experimental ABIEncoderV2;\n\nimport \"multi-token-standard/contracts/interfaces/IERC20.sol\";\nimport \"multi-token-standard/contracts/tokens/ERC1155/ERC1155Meta.sol\";\nimport \"multi-token-standard/contracts/tokens/ERC1155/ERC1155MintBurn.sol\";\n\n\n/**\n * @notice Allows users to wrap any amount of any ERC-20 token with a 1:1 ratio\n *   of corresponding ERC-1155 tokens with native metaTransaction methods. Each\n *   ERC-20 is assigned an ERC-1155 id for more efficient CALLDATA usage when\n *   doing transfers.\n */\ncontract MetaERC20Wrapper is ERC1155Meta, ERC1155MintBurn {\n\n  // Variables\n  uint256 internal nTokens = 1;                         // Number of ERC-20 tokens registered\n  uint256 constant internal ETH_ID = 0x1;               // ID fo tokens representing Ether is 1\n  address constant internal ETH_ADDRESS = address(0x1); // Address for tokens representing Ether is 0x00...01\n  mapping (address => uint256) internal addressToID;    // Maps the ERC-20 addresses to their metaERC20 id\n  mapping (uint256 => address) internal IDtoAddress;    // Maps the metaERC20 ids to their ERC-20 address\n\n  // onReceive function signatures\n  bytes4 constant internal ERC1155_RECEIVED_VALUE = 0xf23a6e61;\n  bytes4 constant internal ERC1155_BATCH_RECEIVED_VALUE = 0xbc197c81;\n\n  /***********************************|\n  |               Events              |\n  |__________________________________*/\n\n  event TokenRegistration(address token_address, uint256 token_id);\n\n\n  /***********************************|\n  |            Constructor            |\n  |__________________________________*/\n\n  // Register ETH as ID #1 and address 0x1\n  constructor() public {\n    addressToID[ETH_ADDRESS] = ETH_ID;\n    IDtoAddress[ETH_ID] = ETH_ADDRESS;\n  }\n\n\n  /***********************************|\n  |         Deposit Functions         |\n  |__________________________________*/\n\n  /**\n   * Fallback function\n   * @dev Deposit ETH in this contract to receive wrapped ETH\n   * No parameters provided\n   */\n  function() external payable {\n    // Deposit ETH sent with transaction\n    deposit(ETH_ADDRESS, msg.sender, msg.value);\n  }\n\n  /**\n   * @dev Deposit ERC20 tokens or ETH in this contract to receive wrapped ERC20s\n   * @param _token     The addess of the token to deposit in this contract\n   * @param _recipient Address that will receive the ERC-1155 tokens\n   * @param _value     The amount of token to deposit in this contract\n   * Note: Users must first approve this contract addres on the contract of the ERC20 to be deposited\n   */\n  function deposit(address _token, address _recipient, uint256 _value)\n    public payable\n  {\n    require(_recipient != address(0x0), \"MetaERC20Wrapper#deposit: INVALID_RECIPIENT\");\n\n    // Internal ID of ERC-20 token deposited\n    uint256 id;\n\n    // Deposit ERC-20 tokens or ETH\n    if (_token != ETH_ADDRESS) {\n\n      // Check if transfer passes\n      require(msg.value == 0, \"MetaERC20Wrapper#deposit: NON_NULL_MSG_VALUE\");\n      IERC20(_token).transferFrom(msg.sender, address(this), _value);\n      require(checkSuccess(), \"MetaERC20Wrapper#deposit: TRANSFER_FAILED\");\n\n      // Load address token ID\n      uint256 addressId = addressToID[_token];\n\n      // Register ID if not already done\n      if (addressId == 0) {\n        nTokens += 1;             // Increment number of tokens registered\n        id = nTokens;             // id of token is the current # of tokens\n        IDtoAddress[id] = _token; // Map id to token address\n        addressToID[_token] = id; // Register token\n\n        // Emit registration event\n        emit TokenRegistration(_token, id);\n\n      } else {\n        id = addressId;\n      }\n\n    } else {\n      require(_value == msg.value, \"MetaERC20Wrapper#deposit: INCORRECT_MSG_VALUE\");\n      id = ETH_ID;\n    }\n\n    // Mint meta tokens\n    _mint(_recipient, id, _value, \"\");\n  }\n\n\n  /***********************************|\n  |         Withdraw Functions        |\n  |__________________________________*/\n\n  /**\n   * @dev Withdraw wrapped ERC20 tokens in this contract to receive the original ERC20s or ETH\n   * @param _token The addess of the token to withdrww from this contract\n   * @param _to The address where the withdrawn tokens will go to\n   * @param _value The amount of tokens to withdraw\n   */\n  function withdraw(address _token, address payable _to, uint256 _value) public {\n    uint256 tokenID = getTokenID(_token);\n    _withdraw(msg.sender, _to, tokenID, _value);\n  }\n\n  /**\n   * @dev Withdraw wrapped ERC20 tokens in this contract to receive the original ERC20s or ETH\n   * @param _from    Address of users sending the Meta tokens\n   * @param _to      The address where the withdrawn tokens will go to\n   * @param _tokenID The token ID of the ERC-20 token to withdraw from this contract\n   * @param _value   The amount of tokens to withdraw\n   */\n  function _withdraw(\n    address _from,\n    address payable _to,\n    uint256 _tokenID,\n    uint256 _value)\n    internal\n  {\n    // Burn meta tokens\n    _burn(_from, _tokenID, _value);\n\n     // Withdraw ERC-20 tokens or ETH\n    if (_tokenID != ETH_ID) {\n      address token = IDtoAddress[_tokenID];\n      IERC20(token).transfer(_to, _value);\n      require(checkSuccess(), \"MetaERC20Wrapper#withdraw: TRANSFER_FAILED\");\n\n    } else {\n      require(_to != address(0), \"MetaERC20Wrapper#withdraw: INVALID_RECIPIENT\");\n      (bool success, ) = _to.call.value(_value)(\"\");\n      require(success, \"MetaERC20Wrapper#withdraw: TRANSFER_FAILED\");\n    }\n\n\n  }\n  /**\n   * @notice Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart\n   * @param _from      The address which previously owned the token\n   * @param _id        The id of the token being transferred\n   * @param _value     The amount of tokens being transferred\n   * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n   */\n  function onERC1155Received(address, address payable _from, uint256 _id, uint256 _value, bytes memory)\n    public returns(bytes4)\n  {\n    // Only ERC-1155 from this contract are valid\n    require(msg.sender == address(this), \"MetaERC20Wrapper#onERC1155Received: INVALID_ERC1155_RECEIVED\");\n    getIdAddress(_id); // Checks if id is registered\n\n    // Tokens are received, hence need to burn them here\n    _withdraw(address(this), _from, _id, _value);\n\n    return ERC1155_RECEIVED_VALUE;\n  }\n\n  /**\n   * @notice Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart\n   * @param _from      The address which previously owned the token\n   * @param _ids       An array containing ids of each token being transferred\n   * @param _values    An array containing amounts of each token being transferred\n   * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n   */\n  function onERC1155BatchReceived(address, address payable _from, uint256[] memory _ids, uint256[] memory _values, bytes memory)\n    public returns(bytes4)\n  {\n    // Only ERC-1155 from this contract are valid\n    require(msg.sender == address(this), \"MetaERC20Wrapper#onERC1155BatchReceived: INVALID_ERC1155_RECEIVED\");\n\n    // Withdraw all tokens\n    for ( uint256 i = 0; i < _ids.length; i++) {\n      // Checks if id is registered\n      getIdAddress(_ids[i]);\n\n      // Tokens are received, hence need to burn them here\n      _withdraw(address(this), _from, _ids[i], _values[i]);\n    }\n\n    return ERC1155_BATCH_RECEIVED_VALUE;\n  }\n\n  /**\n   * @notice Return the Meta-ERC20 token ID for the given ERC-20 token address\n   * @param _token ERC-20 token address to get the corresponding Meta-ERC20 token ID\n   * @return Meta-ERC20 token ID\n   */\n  function getTokenID(address _token) public view returns (uint256 tokenID) {\n    tokenID = addressToID[_token];\n    require(tokenID != 0, \"MetaERC20Wrapper#getTokenID: UNREGISTERED_TOKEN\");\n    return tokenID;\n  }\n\n  /**\n   * @notice Return the ERC-20 token address for the given Meta-ERC20 token ID\n   * @param _id Meta-ERC20 token ID to get the corresponding ERC-20 token address\n   * @return ERC-20 token address\n   */\n  function getIdAddress(uint256 _id) public view returns (address token) {\n    token = IDtoAddress[_id];\n    require(token != address(0x0), \"MetaERC20Wrapper#getIdAddress: UNREGISTERED_TOKEN\");\n    return token;\n  }\n\n  /**\n   * @notice Returns number of tokens currently registered\n   */\n  function getNTokens() external view returns (uint256) {\n    return nTokens;\n  }\n\n\n\n  /***********************************|\n  |          Helper Functions         |\n  |__________________________________*/\n\n  /**\n    * Checks the return value of the previous function up to 32 bytes. Returns true if the previous\n    * function returned 0 bytes or 32 bytes that are not all-zero.\n    * Code taken from: https://github.com/dydxprotocol/solo/blob/10baf8e4c3fb9db4d0919043d3e6fdd6ba834046/contracts/protocol/lib/Token.sol\n    */\n  function checkSuccess()\n    private pure\n    returns (bool)\n  {\n    uint256 returnValue = 0;\n\n    /* solium-disable-next-line security/no-inline-assembly */\n    assembly {\n      // check number of bytes returned from last function call\n      switch returndatasize\n\n      // no bytes returned: assume success\n      case 0x0 {\n        returnValue := 1\n      }\n\n      // 32 bytes returned: check if non-zero\n      case 0x20 {\n        // copy 32 bytes into scratch space\n        returndatacopy(0x0, 0x0, 0x20)\n\n        // load those bytes into returnValue\n        returnValue := mload(0x0)\n      }\n\n      // not sure what was returned: dont mark as success\n      default { }\n    }\n\n    return returnValue != 0;\n  }\n\n  /**\n   * @notice Indicates whether a contract implements the `ERC1155TokenReceiver` functions and so can accept ERC1155 token types.\n   * @param  interfaceID The ERC-165 interface ID that is queried for support.s\n   * @dev This function MUST return true if it implements the ERC1155TokenReceiver interface and ERC-165 interface.\n   *      This function MUST NOT consume more thsan 5,000 gas.\n   * @return Wheter ERC-165 or ERC1155TokenReceiver interfaces are supported.\n   */\n  function supportsInterface(bytes4 interfaceID) external view returns (bool) {\n    return  interfaceID == 0x01ffc9a7 || // ERC-165 support (i.e. `bytes4(keccak256('supportsInterface(bytes4)'))`).\n      interfaceID == 0x4e2312e0;         // ERC-1155 `ERC1155TokenReceiver` support (i.e. `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\")) ^ bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`).\n  }\n\n}",
  "sourcePath": "erc20-meta-token/contracts/wrapper/MetaERC20Wrapper.sol",
  "ast": {
    "absolutePath": "erc20-meta-token/contracts/wrapper/MetaERC20Wrapper.sol",
    "exportedSymbols": {
      "MetaERC20Wrapper": [
        5517
      ]
    },
    "id": 5518,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5053,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:20"
      },
      {
        "id": 5054,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:20"
      },
      {
        "absolutePath": "multi-token-standard/contracts/interfaces/IERC20.sol",
        "file": "multi-token-standard/contracts/interfaces/IERC20.sol",
        "id": 5055,
        "nodeType": "ImportDirective",
        "scope": 5518,
        "sourceUnit": 5768,
        "src": "60:62:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "multi-token-standard/contracts/tokens/ERC1155/ERC1155Meta.sol",
        "file": "multi-token-standard/contracts/tokens/ERC1155/ERC1155Meta.sol",
        "id": 5056,
        "nodeType": "ImportDirective",
        "scope": 5518,
        "sourceUnit": 6996,
        "src": "123:71:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "multi-token-standard/contracts/tokens/ERC1155/ERC1155MintBurn.sol",
        "file": "multi-token-standard/contracts/tokens/ERC1155/ERC1155MintBurn.sol",
        "id": 5057,
        "nodeType": "ImportDirective",
        "scope": 5518,
        "sourceUnit": 7410,
        "src": "195:75:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5058,
              "name": "ERC1155Meta",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6995,
              "src": "570:11:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Meta_$6995",
                "typeString": "contract ERC1155Meta"
              }
            },
            "id": 5059,
            "nodeType": "InheritanceSpecifier",
            "src": "570:11:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5060,
              "name": "ERC1155MintBurn",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7409,
              "src": "583:15:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155MintBurn_$7409",
                "typeString": "contract ERC1155MintBurn"
              }
            },
            "id": 5061,
            "nodeType": "InheritanceSpecifier",
            "src": "583:15:20"
          }
        ],
        "contractDependencies": [
          5625,
          5698,
          6397,
          6995,
          7409,
          9376,
          9766
        ],
        "contractKind": "contract",
        "documentation": "@notice Allows users to wrap any amount of any ERC-20 token with a 1:1 ratio\n  of corresponding ERC-1155 tokens with native metaTransaction methods. Each\n  ERC-20 is assigned an ERC-1155 id for more efficient CALLDATA usage when\n  doing transfers.",
        "fullyImplemented": true,
        "id": 5517,
        "linearizedBaseContracts": [
          5517,
          7409,
          6995,
          9766,
          9376,
          6397,
          5625,
          5698
        ],
        "name": "MetaERC20Wrapper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5064,
            "name": "nTokens",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "619:28:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5062,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "619:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 5063,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "646:1:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 5067,
            "name": "ETH_ID",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "713:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5065,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307831",
              "id": 5066,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "748:3:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "0x1"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 5072,
            "name": "ETH_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "809:52:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5068,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "809:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307831",
                  "id": 5070,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "857:3:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "0x1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 5069,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "849:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 5071,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "849:12:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5076,
            "name": "addressToID",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "919:49:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5075,
              "keyType": {
                "id": 5073,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "928:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "919:28:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5074,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "939:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5080,
            "name": "IDtoAddress",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "1026:49:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 5079,
              "keyType": {
                "id": 5077,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1035:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1026:28:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 5078,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1046:7:20",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 5083,
            "name": "ERC1155_RECEIVED_VALUE",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "1168:60:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 5081,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1168:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786632336136653631",
              "id": 5082,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1218:10:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4063915617_by_1",
                "typeString": "int_const 4063915617"
              },
              "value": "0xf23a6e61"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 5086,
            "name": "ERC1155_BATCH_RECEIVED_VALUE",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "1232:66:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 5084,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1232:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786263313937633831",
              "id": 5085,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1288:10:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3155786881_by_1",
                "typeString": "int_const 3155786881"
              },
              "value": "0xbc197c81"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "*********************************|\n|               Events              |\n|__________________________________",
            "id": 5092,
            "name": "TokenRegistration",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5088,
                  "indexed": false,
                  "name": "token_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 5092,
                  "src": "1448:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5090,
                  "indexed": false,
                  "name": "token_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 5092,
                  "src": "1471:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1447:41:20"
            },
            "src": "1424:65:20"
          },
          {
            "body": {
              "id": 5107,
              "nodeType": "Block",
              "src": "1679:83:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5095,
                        "name": "addressToID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5076,
                        "src": "1685:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5097,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5096,
                        "name": "ETH_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5072,
                        "src": "1697:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1685:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5098,
                      "name": "ETH_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5067,
                      "src": "1712:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1685:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5100,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:33:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5101,
                        "name": "IDtoAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5080,
                        "src": "1724:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 5103,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5102,
                        "name": "ETH_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5067,
                        "src": "1736:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1724:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5104,
                      "name": "ETH_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5072,
                      "src": "1746:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1724:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5106,
                  "nodeType": "ExpressionStatement",
                  "src": "1724:33:20"
                }
              ]
            },
            "documentation": "*********************************|\n|            Constructor            |\n|__________________________________",
            "id": 5108,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1669:2:20"
            },
            "returnParameters": {
              "id": 5094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1679:0:20"
            },
            "scope": 5517,
            "src": "1658:104:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5119,
              "nodeType": "Block",
              "src": "2041:95:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5112,
                        "name": "ETH_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5072,
                        "src": "2096:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11922,
                          "src": "2109:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2109:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5115,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11922,
                          "src": "2121:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2121:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5111,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5234,
                      "src": "2088:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5118,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:43:20"
                }
              ]
            },
            "documentation": "Fallback function\n@dev Deposit ETH in this contract to receive wrapped ETH\nNo parameters provided",
            "id": 5120,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2021:2:20"
            },
            "returnParameters": {
              "id": 5110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2041:0:20"
            },
            "scope": 5517,
            "src": "2013:123:20",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5233,
              "nodeType": "Block",
              "src": "2640:1214:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5130,
                          "name": "_recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5124,
                          "src": "2654:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 5132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2676:3:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2668:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2668:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2654:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d657461455243323057726170706572236465706f7369743a20494e56414c49445f524543495049454e54",
                        "id": 5135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2682:45:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19a3130b3f25d805cc5717b6ec577f621b2eda36caf4381b0de60002320d245d",
                          "typeString": "literal_string \"MetaERC20Wrapper#deposit: INVALID_RECIPIENT\""
                        },
                        "value": "MetaERC20Wrapper#deposit: INVALID_RECIPIENT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19a3130b3f25d805cc5717b6ec577f621b2eda36caf4381b0de60002320d245d",
                          "typeString": "literal_string \"MetaERC20Wrapper#deposit: INVALID_RECIPIENT\""
                        }
                      ],
                      "id": 5129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11925,
                        11926
                      ],
                      "referencedDeclaration": 11926,
                      "src": "2646:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2646:82:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5137,
                  "nodeType": "ExpressionStatement",
                  "src": "2646:82:20"
                },
                {
                  "assignments": [
                    5139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5139,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 5233,
                      "src": "2780:10:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5138,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2780:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5140,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2780:10:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5141,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5122,
                      "src": "2837:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 5142,
                      "name": "ETH_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5072,
                      "src": "2847:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2837:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5224,
                    "nodeType": "Block",
                    "src": "3675:111:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 5213,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5126,
                                "src": "3691:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5214,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11922,
                                  "src": "3701:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 5215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3701:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3691:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d657461455243323057726170706572236465706f7369743a20494e434f52524543545f4d53475f56414c5545",
                              "id": 5217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3712:47:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_18ab744e6275fc2611ea3f469ab0998d462afdc8fb55fa1f0baa2f290c1dd8e8",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: INCORRECT_MSG_VALUE\""
                              },
                              "value": "MetaERC20Wrapper#deposit: INCORRECT_MSG_VALUE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_18ab744e6275fc2611ea3f469ab0998d462afdc8fb55fa1f0baa2f290c1dd8e8",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: INCORRECT_MSG_VALUE\""
                              }
                            ],
                            "id": 5212,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "3683:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3683:77:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5219,
                        "nodeType": "ExpressionStatement",
                        "src": "3683:77:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 5220,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5139,
                            "src": "3768:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 5221,
                            "name": "ETH_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5067,
                            "src": "3773:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3768:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5223,
                        "nodeType": "ExpressionStatement",
                        "src": "3768:11:20"
                      }
                    ]
                  },
                  "id": 5225,
                  "nodeType": "IfStatement",
                  "src": "2833:953:20",
                  "trueBody": {
                    "id": 5211,
                    "nodeType": "Block",
                    "src": "2860:809:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5145,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11922,
                                  "src": "2911:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 5146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2911:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 5147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2924:1:20",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2911:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d657461455243323057726170706572236465706f7369743a204e4f4e5f4e554c4c5f4d53475f56414c5545",
                              "id": 5149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2927:46:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_52e2325dc5a388253b111b94bbca717f4138da2fa7211fcfb41ba013239fcc9e",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: NON_NULL_MSG_VALUE\""
                              },
                              "value": "MetaERC20Wrapper#deposit: NON_NULL_MSG_VALUE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_52e2325dc5a388253b111b94bbca717f4138da2fa7211fcfb41ba013239fcc9e",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: NON_NULL_MSG_VALUE\""
                              }
                            ],
                            "id": 5144,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "2903:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2903:71:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5151,
                        "nodeType": "ExpressionStatement",
                        "src": "2903:71:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5156,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11922,
                                "src": "3010:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3010:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5159,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11970,
                                  "src": "3030:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                    "typeString": "contract MetaERC20Wrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                    "typeString": "contract MetaERC20Wrapper"
                                  }
                                ],
                                "id": 5158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3022:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 5160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3022:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5161,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5126,
                              "src": "3037:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5153,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5122,
                                  "src": "2989:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5152,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5767,
                                "src": "2982:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$5767_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2982:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5767",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5729,
                            "src": "2982:27:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2982:62:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5163,
                        "nodeType": "ExpressionStatement",
                        "src": "2982:62:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5165,
                                "name": "checkSuccess",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5500,
                                "src": "3060:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
                                  "typeString": "function () pure returns (bool)"
                                }
                              },
                              "id": 5166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3060:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d657461455243323057726170706572236465706f7369743a205452414e534645525f4641494c4544",
                              "id": 5167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3076:43:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_60c012ac410bc331a9c5c1e4b0a28751cc566065127914b00b9ee80212c2c0ff",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: TRANSFER_FAILED\""
                              },
                              "value": "MetaERC20Wrapper#deposit: TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_60c012ac410bc331a9c5c1e4b0a28751cc566065127914b00b9ee80212c2c0ff",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: TRANSFER_FAILED\""
                              }
                            ],
                            "id": 5164,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "3052:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:68:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5169,
                        "nodeType": "ExpressionStatement",
                        "src": "3052:68:20"
                      },
                      {
                        "assignments": [
                          5171
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5171,
                            "name": "addressId",
                            "nodeType": "VariableDeclaration",
                            "scope": 5211,
                            "src": "3160:17:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5170,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3160:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5175,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 5172,
                            "name": "addressToID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5076,
                            "src": "3180:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5174,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 5173,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5122,
                            "src": "3192:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3180:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3160:39:20"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 5176,
                            "name": "addressId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5171,
                            "src": "3253:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3266:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3253:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 5209,
                          "nodeType": "Block",
                          "src": "3629:33:20",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 5205,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5139,
                                  "src": "3639:2:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 5206,
                                  "name": "addressId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5171,
                                  "src": "3644:9:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3639:14:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5208,
                              "nodeType": "ExpressionStatement",
                              "src": "3639:14:20"
                            }
                          ]
                        },
                        "id": 5210,
                        "nodeType": "IfStatement",
                        "src": "3249:413:20",
                        "trueBody": {
                          "id": 5204,
                          "nodeType": "Block",
                          "src": "3269:354:20",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 5179,
                                  "name": "nTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5064,
                                  "src": "3279:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 5180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3290:1:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3279:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5182,
                              "nodeType": "ExpressionStatement",
                              "src": "3279:12:20"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 5183,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5139,
                                  "src": "3354:2:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 5184,
                                  "name": "nTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5064,
                                  "src": "3359:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3354:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5186,
                              "nodeType": "ExpressionStatement",
                              "src": "3354:12:20"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 5187,
                                    "name": "IDtoAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5080,
                                    "src": "3430:11:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 5189,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 5188,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5139,
                                    "src": "3442:2:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3430:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 5190,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5122,
                                  "src": "3448:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3430:24:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 5192,
                              "nodeType": "ExpressionStatement",
                              "src": "3430:24:20"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 5193,
                                    "name": "addressToID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5076,
                                    "src": "3491:11:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 5195,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 5194,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5122,
                                    "src": "3503:6:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3491:19:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 5196,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5139,
                                  "src": "3513:2:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3491:24:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5198,
                              "nodeType": "ExpressionStatement",
                              "src": "3491:24:20"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 5200,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5122,
                                    "src": "3602:6:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 5201,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5139,
                                    "src": "3610:2:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 5199,
                                  "name": "TokenRegistration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5092,
                                  "src": "3584:17:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 5202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3584:29:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5203,
                              "nodeType": "EmitStatement",
                              "src": "3579:34:20"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5227,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5124,
                        "src": "3822:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5228,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5139,
                        "src": "3834:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5229,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5126,
                        "src": "3838:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 5230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3846:2:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 5226,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7219,
                      "src": "3816:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 5231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3816:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5232,
                  "nodeType": "ExpressionStatement",
                  "src": "3816:33:20"
                }
              ]
            },
            "documentation": "@dev Deposit ERC20 tokens or ETH in this contract to receive wrapped ERC20s\n@param _token     The addess of the token to deposit in this contract\n@param _recipient Address that will receive the ERC-1155 tokens\n@param _value     The amount of token to deposit in this contract\nNote: Users must first approve this contract addres on the contract of the ERC20 to be deposited",
            "id": 5234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5122,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5234,
                  "src": "2567:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2567:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5124,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5234,
                  "src": "2583:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2583:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5126,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5234,
                  "src": "2603:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2603:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2566:52:20"
            },
            "returnParameters": {
              "id": 5128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2640:0:20"
            },
            "scope": 5517,
            "src": "2550:1304:20",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5257,
              "nodeType": "Block",
              "src": "4357:96:20",
              "statements": [
                {
                  "assignments": [
                    5244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5244,
                      "name": "tokenID",
                      "nodeType": "VariableDeclaration",
                      "scope": 5257,
                      "src": "4363:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4363:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5248,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5246,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5236,
                        "src": "4392:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5245,
                      "name": "getTokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5452,
                      "src": "4381:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 5247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4381:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4363:36:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11922,
                          "src": "4415:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4415:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5252,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5238,
                        "src": "4427:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5253,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5244,
                        "src": "4432:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5254,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5240,
                        "src": "4441:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5249,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5326,
                      "src": "4405:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address payable,uint256,uint256)"
                      }
                    },
                    "id": 5255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4405:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5256,
                  "nodeType": "ExpressionStatement",
                  "src": "4405:43:20"
                }
              ]
            },
            "documentation": "@dev Withdraw wrapped ERC20 tokens in this contract to receive the original ERC20s or ETH\n@param _token The addess of the token to withdrww from this contract\n@param _to The address where the withdrawn tokens will go to\n@param _value The amount of tokens to withdraw",
            "id": 5258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5236,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5258,
                  "src": "4297:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4297:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5238,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5258,
                  "src": "4313:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5240,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5258,
                  "src": "4334:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4334:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4296:53:20"
            },
            "returnParameters": {
              "id": 5242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4357:0:20"
            },
            "scope": 5517,
            "src": "4279:174:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5325,
              "nodeType": "Block",
              "src": "4957:526:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5270,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "4993:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5271,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5264,
                        "src": "5000:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5272,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5266,
                        "src": "5010:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5269,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7339,
                      "src": "4987:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 5273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4987:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5274,
                  "nodeType": "ExpressionStatement",
                  "src": "4987:30:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5275,
                      "name": "_tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5264,
                      "src": "5066:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 5276,
                      "name": "ETH_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5067,
                      "src": "5078:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5066:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5323,
                    "nodeType": "Block",
                    "src": "5265:212:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "id": 5304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 5300,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5262,
                                "src": "5281:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 5302,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5296:1:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 5301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5288:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 5303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5288:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5281:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d6574614552433230577261707065722377697468647261773a20494e56414c49445f524543495049454e54",
                              "id": 5305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5300:46:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a3ff64274638dcdb2ba8a07eb1491f949b7ab0bfeb2b25cede5a4a3c65ef7065",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: INVALID_RECIPIENT\""
                              },
                              "value": "MetaERC20Wrapper#withdraw: INVALID_RECIPIENT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a3ff64274638dcdb2ba8a07eb1491f949b7ab0bfeb2b25cede5a4a3c65ef7065",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: INVALID_RECIPIENT\""
                              }
                            ],
                            "id": 5299,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "5273:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5273:74:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5307,
                        "nodeType": "ExpressionStatement",
                        "src": "5273:74:20"
                      },
                      {
                        "assignments": [
                          5309,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5309,
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 5323,
                            "src": "5356:12:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 5308,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5356:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 5317,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 5315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5397:2:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 5313,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5266,
                                "src": "5389:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5310,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5262,
                                  "src": "5374:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 5311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5374:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 5312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5374:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                              }
                            },
                            "id": 5314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5374:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 5316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5374:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5355:45:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5319,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5309,
                              "src": "5416:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d6574614552433230577261707065722377697468647261773a205452414e534645525f4641494c4544",
                              "id": 5320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5425:44:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d7528a6cd90ae2fb6c5a0652ba5ca5a48bc570d63bd727556bdfb948863fb826",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: TRANSFER_FAILED\""
                              },
                              "value": "MetaERC20Wrapper#withdraw: TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d7528a6cd90ae2fb6c5a0652ba5ca5a48bc570d63bd727556bdfb948863fb826",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: TRANSFER_FAILED\""
                              }
                            ],
                            "id": 5318,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "5408:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5408:62:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5322,
                        "nodeType": "ExpressionStatement",
                        "src": "5408:62:20"
                      }
                    ]
                  },
                  "id": 5324,
                  "nodeType": "IfStatement",
                  "src": "5062:415:20",
                  "trueBody": {
                    "id": 5298,
                    "nodeType": "Block",
                    "src": "5086:173:20",
                    "statements": [
                      {
                        "assignments": [
                          5279
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5279,
                            "name": "token",
                            "nodeType": "VariableDeclaration",
                            "scope": 5298,
                            "src": "5094:13:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 5278,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5094:7:20",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5283,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 5280,
                            "name": "IDtoAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5080,
                            "src": "5110:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 5282,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 5281,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5264,
                            "src": "5122:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5110:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5094:37:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5288,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5262,
                              "src": "5162:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5289,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5266,
                              "src": "5167:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5285,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5279,
                                  "src": "5146:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5284,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5767,
                                "src": "5139:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$5767_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5139:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5767",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5709,
                            "src": "5139:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5139:35:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5291,
                        "nodeType": "ExpressionStatement",
                        "src": "5139:35:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5293,
                                "name": "checkSuccess",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5500,
                                "src": "5190:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
                                  "typeString": "function () pure returns (bool)"
                                }
                              },
                              "id": 5294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5190:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d6574614552433230577261707065722377697468647261773a205452414e534645525f4641494c4544",
                              "id": 5295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5206:44:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d7528a6cd90ae2fb6c5a0652ba5ca5a48bc570d63bd727556bdfb948863fb826",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: TRANSFER_FAILED\""
                              },
                              "value": "MetaERC20Wrapper#withdraw: TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d7528a6cd90ae2fb6c5a0652ba5ca5a48bc570d63bd727556bdfb948863fb826",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: TRANSFER_FAILED\""
                              }
                            ],
                            "id": 5292,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "5182:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5182:69:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5297,
                        "nodeType": "ExpressionStatement",
                        "src": "5182:69:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Withdraw wrapped ERC20 tokens in this contract to receive the original ERC20s or ETH\n@param _from    Address of users sending the Meta tokens\n@param _to      The address where the withdrawn tokens will go to\n@param _tokenID The token ID of the ERC-20 token to withdraw from this contract\n@param _value   The amount of tokens to withdraw",
            "id": 5326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5260,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "4860:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4860:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5262,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "4879:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4879:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5264,
                  "name": "_tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "4904:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4904:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5266,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "4926:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4926:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4854:87:20"
            },
            "returnParameters": {
              "id": 5268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4957:0:20"
            },
            "scope": 5517,
            "src": "4836:647:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5366,
              "nodeType": "Block",
              "src": "5991:358:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 5347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5342,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11922,
                            "src": "6055:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6055:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5345,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11970,
                              "src": "6077:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                "typeString": "contract MetaERC20Wrapper"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                "typeString": "contract MetaERC20Wrapper"
                              }
                            ],
                            "id": 5344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6069:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6069:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6055:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d657461455243323057726170706572236f6e4552433131353552656365697665643a20494e56414c49445f455243313135355f5245434549564544",
                        "id": 5348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6084:62:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_298f8b1a7d09e54e9ad5dfd1b230710353cd7e0c23bec42e628b01c9bef64671",
                          "typeString": "literal_string \"MetaERC20Wrapper#onERC1155Received: INVALID_ERC1155_RECEIVED\""
                        },
                        "value": "MetaERC20Wrapper#onERC1155Received: INVALID_ERC1155_RECEIVED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_298f8b1a7d09e54e9ad5dfd1b230710353cd7e0c23bec42e628b01c9bef64671",
                          "typeString": "literal_string \"MetaERC20Wrapper#onERC1155Received: INVALID_ERC1155_RECEIVED\""
                        }
                      ],
                      "id": 5341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11925,
                        11926
                      ],
                      "referencedDeclaration": 11926,
                      "src": "6047:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6047:100:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5350,
                  "nodeType": "ExpressionStatement",
                  "src": "6047:100:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5352,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5332,
                        "src": "6166:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5351,
                      "name": "getIdAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5477,
                      "src": "6153:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 5353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6153:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5354,
                  "nodeType": "ExpressionStatement",
                  "src": "6153:17:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5357,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11970,
                            "src": "6282:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                              "typeString": "contract MetaERC20Wrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                              "typeString": "contract MetaERC20Wrapper"
                            }
                          ],
                          "id": 5356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6274:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6274:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5359,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5330,
                        "src": "6289:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5360,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5332,
                        "src": "6296:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5361,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5334,
                        "src": "6301:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5355,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5326,
                      "src": "6264:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address payable,uint256,uint256)"
                      }
                    },
                    "id": 5362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6264:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5363,
                  "nodeType": "ExpressionStatement",
                  "src": "6264:44:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5364,
                    "name": "ERC1155_RECEIVED_VALUE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5083,
                    "src": "6322:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 5340,
                  "id": 5365,
                  "nodeType": "Return",
                  "src": "6315:29:20"
                }
              ]
            },
            "documentation": "@notice Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart\n@param _from      The address which previously owned the token\n@param _id        The id of the token being transferred\n@param _value     The amount of tokens being transferred\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`",
            "id": 5367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC1155Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5328,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5887:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5887:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5330,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5896:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5896:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5332,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5919:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5919:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5334,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5932:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5932:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5336,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5948:12:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5335,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5948:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5886:75:20"
            },
            "returnParameters": {
              "id": 5340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5339,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5981:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5338,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5981:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5980:8:20"
            },
            "scope": 5517,
            "src": "5860:489:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5428,
              "nodeType": "Block",
              "src": "6931:476:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 5390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5385,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11922,
                            "src": "6995:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6995:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5388,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11970,
                              "src": "7017:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                "typeString": "contract MetaERC20Wrapper"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                "typeString": "contract MetaERC20Wrapper"
                              }
                            ],
                            "id": 5387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7009:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7009:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6995:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d657461455243323057726170706572236f6e45524331313535426174636852656365697665643a20494e56414c49445f455243313135355f5245434549564544",
                        "id": 5391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7024:67:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7fa389c177bc9787ac2c6dd7e77b288a431fbd01f0543daeaf9e12dd96ceb6",
                          "typeString": "literal_string \"MetaERC20Wrapper#onERC1155BatchReceived: INVALID_ERC1155_RECEIVED\""
                        },
                        "value": "MetaERC20Wrapper#onERC1155BatchReceived: INVALID_ERC1155_RECEIVED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7fa389c177bc9787ac2c6dd7e77b288a431fbd01f0543daeaf9e12dd96ceb6",
                          "typeString": "literal_string \"MetaERC20Wrapper#onERC1155BatchReceived: INVALID_ERC1155_RECEIVED\""
                        }
                      ],
                      "id": 5384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11925,
                        11926
                      ],
                      "referencedDeclaration": 11926,
                      "src": "6987:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6987:105:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5393,
                  "nodeType": "ExpressionStatement",
                  "src": "6987:105:20"
                },
                {
                  "body": {
                    "id": 5424,
                    "nodeType": "Block",
                    "src": "7169:192:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5406,
                                "name": "_ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5374,
                                "src": "7226:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 5408,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5407,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5395,
                                "src": "7231:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7226:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5405,
                            "name": "getIdAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5477,
                            "src": "7213:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 5409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7213:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5410,
                        "nodeType": "ExpressionStatement",
                        "src": "7213:21:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5413,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11970,
                                  "src": "7320:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                    "typeString": "contract MetaERC20Wrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                    "typeString": "contract MetaERC20Wrapper"
                                  }
                                ],
                                "id": 5412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7312:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 5414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7312:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5415,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5371,
                              "src": "7327:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5416,
                                "name": "_ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5374,
                                "src": "7334:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 5418,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5417,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5395,
                                "src": "7339:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7334:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5419,
                                "name": "_values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5377,
                                "src": "7343:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 5421,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5420,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5395,
                                "src": "7351:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7343:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5411,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5326,
                            "src": "7302:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address payable,uint256,uint256)"
                            }
                          },
                          "id": 5422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7302:52:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5423,
                        "nodeType": "ExpressionStatement",
                        "src": "7302:52:20"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5398,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5395,
                      "src": "7147:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5399,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5374,
                        "src": "7151:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 5400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7151:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7147:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5425,
                  "initializationExpression": {
                    "assignments": [
                      5395
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5395,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 5425,
                        "src": "7132:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7132:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 5397,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7144:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7132:13:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 5403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7164:3:20",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 5402,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5395,
                        "src": "7164:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5404,
                    "nodeType": "ExpressionStatement",
                    "src": "7164:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "7126:235:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5426,
                    "name": "ERC1155_BATCH_RECEIVED_VALUE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5086,
                    "src": "7374:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 5383,
                  "id": 5427,
                  "nodeType": "Return",
                  "src": "7367:35:20"
                }
              ]
            },
            "documentation": "@notice Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart\n@param _from      The address which previously owned the token\n@param _ids       An array containing ids of each token being transferred\n@param _values    An array containing amounts of each token being transferred\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`",
            "id": 5429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC1155BatchReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5369,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6807:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6807:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5371,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6816:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6816:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5374,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6839:21:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5372,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6839:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5373,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6839:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5377,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6862:24:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5375,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6862:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5376,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6862:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5379,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6888:12:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5378,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6888:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6806:95:20"
            },
            "returnParameters": {
              "id": 5383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5382,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6921:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5381,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6921:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6920:8:20"
            },
            "scope": 5517,
            "src": "6775:632:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5451,
              "nodeType": "Block",
              "src": "7694:138:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5436,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5434,
                      "src": "7700:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5437,
                        "name": "addressToID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5076,
                        "src": "7710:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5439,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5438,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5431,
                        "src": "7722:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7710:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7700:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5441,
                  "nodeType": "ExpressionStatement",
                  "src": "7700:29:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5443,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5434,
                          "src": "7743:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7754:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7743:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d65746145524332305772617070657223676574546f6b656e49443a20554e524547495354455245445f544f4b454e",
                        "id": 5446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7757:49:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ddbb34173b4d53b1858796a31b67c7ca88e7d9b7db4a44c73d3f1be7545c29",
                          "typeString": "literal_string \"MetaERC20Wrapper#getTokenID: UNREGISTERED_TOKEN\""
                        },
                        "value": "MetaERC20Wrapper#getTokenID: UNREGISTERED_TOKEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3ddbb34173b4d53b1858796a31b67c7ca88e7d9b7db4a44c73d3f1be7545c29",
                          "typeString": "literal_string \"MetaERC20Wrapper#getTokenID: UNREGISTERED_TOKEN\""
                        }
                      ],
                      "id": 5442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11925,
                        11926
                      ],
                      "referencedDeclaration": 11926,
                      "src": "7735:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7735:72:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5448,
                  "nodeType": "ExpressionStatement",
                  "src": "7735:72:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5449,
                    "name": "tokenID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5434,
                    "src": "7820:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5435,
                  "id": 5450,
                  "nodeType": "Return",
                  "src": "7813:14:20"
                }
              ]
            },
            "documentation": "@notice Return the Meta-ERC20 token ID for the given ERC-20 token address\n@param _token ERC-20 token address to get the corresponding Meta-ERC20 token ID\n@return Meta-ERC20 token ID",
            "id": 5452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenID",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5431,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5452,
                  "src": "7640:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7640:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7639:16:20"
            },
            "returnParameters": {
              "id": 5435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5434,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 5452,
                  "src": "7677:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7677:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7676:17:20"
            },
            "scope": 5517,
            "src": "7620:212:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5476,
              "nodeType": "Block",
              "src": "8114:142:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5459,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5457,
                      "src": "8120:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5460,
                        "name": "IDtoAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5080,
                        "src": "8128:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 5462,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5461,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5454,
                        "src": "8140:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8128:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8120:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5464,
                  "nodeType": "ExpressionStatement",
                  "src": "8120:24:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5466,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5457,
                          "src": "8158:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 5468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8175:3:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8167:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8167:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8158:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d657461455243323057726170706572236765744964416464726573733a20554e524547495354455245445f544f4b454e",
                        "id": 5471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8181:51:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a400c79cc9e4d63fe5f7c90f141f667cd9b84b276de2c465e0102adb91057b61",
                          "typeString": "literal_string \"MetaERC20Wrapper#getIdAddress: UNREGISTERED_TOKEN\""
                        },
                        "value": "MetaERC20Wrapper#getIdAddress: UNREGISTERED_TOKEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a400c79cc9e4d63fe5f7c90f141f667cd9b84b276de2c465e0102adb91057b61",
                          "typeString": "literal_string \"MetaERC20Wrapper#getIdAddress: UNREGISTERED_TOKEN\""
                        }
                      ],
                      "id": 5465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11925,
                        11926
                      ],
                      "referencedDeclaration": 11926,
                      "src": "8150:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8150:83:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5473,
                  "nodeType": "ExpressionStatement",
                  "src": "8150:83:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5474,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5457,
                    "src": "8246:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5458,
                  "id": 5475,
                  "nodeType": "Return",
                  "src": "8239:12:20"
                }
              ]
            },
            "documentation": "@notice Return the ERC-20 token address for the given Meta-ERC20 token ID\n@param _id Meta-ERC20 token ID to get the corresponding ERC-20 token address\n@return ERC-20 token address",
            "id": 5477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5454,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 5477,
                  "src": "8065:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8065:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8064:13:20"
            },
            "returnParameters": {
              "id": 5458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5457,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5477,
                  "src": "8099:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8099:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8098:15:20"
            },
            "scope": 5517,
            "src": "8043:213:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5484,
              "nodeType": "Block",
              "src": "8385:25:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5482,
                    "name": "nTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5064,
                    "src": "8398:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5481,
                  "id": 5483,
                  "nodeType": "Return",
                  "src": "8391:14:20"
                }
              ]
            },
            "documentation": "@notice Returns number of tokens currently registered",
            "id": 5485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8350:2:20"
            },
            "returnParameters": {
              "id": 5481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5480,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5485,
                  "src": "8376:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8376:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8375:9:20"
            },
            "scope": 5517,
            "src": "8331:79:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5499,
              "nodeType": "Block",
              "src": "8918:648:20",
              "statements": [
                {
                  "assignments": [
                    5491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5491,
                      "name": "returnValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 5499,
                      "src": "8924:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5490,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8924:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5493,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 5492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8946:1:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8924:23:20"
                },
                {
                  "externalReferences": [
                    {
                      "returnValue": {
                        "declaration": 5491,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9189:11:20",
                        "valueSize": 1
                      }
                    },
                    {
                      "returnValue": {
                        "declaration": 5491,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9416:11:20",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 5494,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    switch returndatasize()\n    case 0x0 { returnValue := 1 }\n    case 0x20 {\n        returndatacopy(0x0, 0x0, 0x20)\n        returnValue := mload(0x0)\n    }\n    default { }\n}",
                  "src": "9017:515:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5495,
                      "name": "returnValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5491,
                      "src": "9545:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9560:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9545:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5489,
                  "id": 5498,
                  "nodeType": "Return",
                  "src": "9538:23:20"
                }
              ]
            },
            "documentation": "Checks the return value of the previous function up to 32 bytes. Returns true if the previous\nfunction returned 0 bytes or 32 bytes that are not all-zero.\nCode taken from: https://github.com/dydxprotocol/solo/blob/10baf8e4c3fb9db4d0919043d3e6fdd6ba834046/contracts/protocol/lib/Token.sol",
            "id": 5500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkSuccess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8877:2:20"
            },
            "returnParameters": {
              "id": 5489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5488,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5500,
                  "src": "8910:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5487,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8910:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8909:6:20"
            },
            "scope": 5517,
            "src": "8856:710:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5515,
              "nodeType": "Block",
              "src": "10124:383:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5507,
                        "name": "interfaceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5502,
                        "src": "10138:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783031666663396137",
                        "id": 5508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10153:10:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "src": "10138:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5510,
                        "name": "interfaceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5502,
                        "src": "10249:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783465323331326530",
                        "id": 5511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10264:10:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1310921440_by_1",
                          "typeString": "int_const 1310921440"
                        },
                        "value": "0x4e2312e0"
                      },
                      "src": "10249:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10138:136:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5506,
                  "id": 5514,
                  "nodeType": "Return",
                  "src": "10130:144:20"
                }
              ]
            },
            "documentation": "@notice Indicates whether a contract implements the `ERC1155TokenReceiver` functions and so can accept ERC1155 token types.\n@param  interfaceID The ERC-165 interface ID that is queried for support.s\n@dev This function MUST return true if it implements the ERC1155TokenReceiver interface and ERC-165 interface.\n     This function MUST NOT consume more thsan 5,000 gas.\n@return Wheter ERC-165 or ERC1155TokenReceiver interfaces are supported.",
            "id": 5516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5502,
                  "name": "interfaceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 5516,
                  "src": "10075:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5501,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "10075:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10074:20:20"
            },
            "returnParameters": {
              "id": 5506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5505,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5516,
                  "src": "10118:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5504,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10118:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10117:6:20"
            },
            "scope": 5517,
            "src": "10048:459:20",
            "stateMutability": "view",
            "superFunction": 6396,
            "visibility": "external"
          }
        ],
        "scope": 5518,
        "src": "541:9969:20"
      }
    ],
    "src": "0:10510:20"
  },
  "legacyAST": {
    "absolutePath": "erc20-meta-token/contracts/wrapper/MetaERC20Wrapper.sol",
    "exportedSymbols": {
      "MetaERC20Wrapper": [
        5517
      ]
    },
    "id": 5518,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5053,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:20"
      },
      {
        "id": 5054,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:20"
      },
      {
        "absolutePath": "multi-token-standard/contracts/interfaces/IERC20.sol",
        "file": "multi-token-standard/contracts/interfaces/IERC20.sol",
        "id": 5055,
        "nodeType": "ImportDirective",
        "scope": 5518,
        "sourceUnit": 5768,
        "src": "60:62:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "multi-token-standard/contracts/tokens/ERC1155/ERC1155Meta.sol",
        "file": "multi-token-standard/contracts/tokens/ERC1155/ERC1155Meta.sol",
        "id": 5056,
        "nodeType": "ImportDirective",
        "scope": 5518,
        "sourceUnit": 6996,
        "src": "123:71:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "multi-token-standard/contracts/tokens/ERC1155/ERC1155MintBurn.sol",
        "file": "multi-token-standard/contracts/tokens/ERC1155/ERC1155MintBurn.sol",
        "id": 5057,
        "nodeType": "ImportDirective",
        "scope": 5518,
        "sourceUnit": 7410,
        "src": "195:75:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5058,
              "name": "ERC1155Meta",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6995,
              "src": "570:11:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155Meta_$6995",
                "typeString": "contract ERC1155Meta"
              }
            },
            "id": 5059,
            "nodeType": "InheritanceSpecifier",
            "src": "570:11:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5060,
              "name": "ERC1155MintBurn",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7409,
              "src": "583:15:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155MintBurn_$7409",
                "typeString": "contract ERC1155MintBurn"
              }
            },
            "id": 5061,
            "nodeType": "InheritanceSpecifier",
            "src": "583:15:20"
          }
        ],
        "contractDependencies": [
          5625,
          5698,
          6397,
          6995,
          7409,
          9376,
          9766
        ],
        "contractKind": "contract",
        "documentation": "@notice Allows users to wrap any amount of any ERC-20 token with a 1:1 ratio\n  of corresponding ERC-1155 tokens with native metaTransaction methods. Each\n  ERC-20 is assigned an ERC-1155 id for more efficient CALLDATA usage when\n  doing transfers.",
        "fullyImplemented": true,
        "id": 5517,
        "linearizedBaseContracts": [
          5517,
          7409,
          6995,
          9766,
          9376,
          6397,
          5625,
          5698
        ],
        "name": "MetaERC20Wrapper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5064,
            "name": "nTokens",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "619:28:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5062,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "619:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 5063,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "646:1:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 5067,
            "name": "ETH_ID",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "713:38:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5065,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307831",
              "id": 5066,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "748:3:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "0x1"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 5072,
            "name": "ETH_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "809:52:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5068,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "809:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307831",
                  "id": 5070,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "857:3:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "0x1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  }
                ],
                "id": 5069,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "849:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 5071,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "849:12:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5076,
            "name": "addressToID",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "919:49:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5075,
              "keyType": {
                "id": 5073,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "928:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "919:28:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5074,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "939:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5080,
            "name": "IDtoAddress",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "1026:49:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 5079,
              "keyType": {
                "id": 5077,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1035:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1026:28:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 5078,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1046:7:20",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 5083,
            "name": "ERC1155_RECEIVED_VALUE",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "1168:60:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 5081,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1168:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786632336136653631",
              "id": 5082,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1218:10:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4063915617_by_1",
                "typeString": "int_const 4063915617"
              },
              "value": "0xf23a6e61"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 5086,
            "name": "ERC1155_BATCH_RECEIVED_VALUE",
            "nodeType": "VariableDeclaration",
            "scope": 5517,
            "src": "1232:66:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 5084,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1232:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30786263313937633831",
              "id": 5085,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1288:10:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3155786881_by_1",
                "typeString": "int_const 3155786881"
              },
              "value": "0xbc197c81"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "*********************************|\n|               Events              |\n|__________________________________",
            "id": 5092,
            "name": "TokenRegistration",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5088,
                  "indexed": false,
                  "name": "token_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 5092,
                  "src": "1448:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5090,
                  "indexed": false,
                  "name": "token_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 5092,
                  "src": "1471:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1447:41:20"
            },
            "src": "1424:65:20"
          },
          {
            "body": {
              "id": 5107,
              "nodeType": "Block",
              "src": "1679:83:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5095,
                        "name": "addressToID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5076,
                        "src": "1685:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5097,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5096,
                        "name": "ETH_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5072,
                        "src": "1697:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1685:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5098,
                      "name": "ETH_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5067,
                      "src": "1712:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1685:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5100,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:33:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5101,
                        "name": "IDtoAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5080,
                        "src": "1724:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 5103,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5102,
                        "name": "ETH_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5067,
                        "src": "1736:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1724:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5104,
                      "name": "ETH_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5072,
                      "src": "1746:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1724:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5106,
                  "nodeType": "ExpressionStatement",
                  "src": "1724:33:20"
                }
              ]
            },
            "documentation": "*********************************|\n|            Constructor            |\n|__________________________________",
            "id": 5108,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1669:2:20"
            },
            "returnParameters": {
              "id": 5094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1679:0:20"
            },
            "scope": 5517,
            "src": "1658:104:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5119,
              "nodeType": "Block",
              "src": "2041:95:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5112,
                        "name": "ETH_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5072,
                        "src": "2096:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11922,
                          "src": "2109:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2109:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5115,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11922,
                          "src": "2121:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2121:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5111,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5234,
                      "src": "2088:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5118,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:43:20"
                }
              ]
            },
            "documentation": "Fallback function\n@dev Deposit ETH in this contract to receive wrapped ETH\nNo parameters provided",
            "id": 5120,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2021:2:20"
            },
            "returnParameters": {
              "id": 5110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2041:0:20"
            },
            "scope": 5517,
            "src": "2013:123:20",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5233,
              "nodeType": "Block",
              "src": "2640:1214:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5130,
                          "name": "_recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5124,
                          "src": "2654:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 5132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2676:3:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2668:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2668:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2654:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d657461455243323057726170706572236465706f7369743a20494e56414c49445f524543495049454e54",
                        "id": 5135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2682:45:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19a3130b3f25d805cc5717b6ec577f621b2eda36caf4381b0de60002320d245d",
                          "typeString": "literal_string \"MetaERC20Wrapper#deposit: INVALID_RECIPIENT\""
                        },
                        "value": "MetaERC20Wrapper#deposit: INVALID_RECIPIENT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19a3130b3f25d805cc5717b6ec577f621b2eda36caf4381b0de60002320d245d",
                          "typeString": "literal_string \"MetaERC20Wrapper#deposit: INVALID_RECIPIENT\""
                        }
                      ],
                      "id": 5129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11925,
                        11926
                      ],
                      "referencedDeclaration": 11926,
                      "src": "2646:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2646:82:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5137,
                  "nodeType": "ExpressionStatement",
                  "src": "2646:82:20"
                },
                {
                  "assignments": [
                    5139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5139,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 5233,
                      "src": "2780:10:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5138,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2780:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5140,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2780:10:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 5143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5141,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5122,
                      "src": "2837:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 5142,
                      "name": "ETH_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5072,
                      "src": "2847:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2837:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5224,
                    "nodeType": "Block",
                    "src": "3675:111:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 5213,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5126,
                                "src": "3691:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5214,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11922,
                                  "src": "3701:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 5215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3701:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3691:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d657461455243323057726170706572236465706f7369743a20494e434f52524543545f4d53475f56414c5545",
                              "id": 5217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3712:47:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_18ab744e6275fc2611ea3f469ab0998d462afdc8fb55fa1f0baa2f290c1dd8e8",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: INCORRECT_MSG_VALUE\""
                              },
                              "value": "MetaERC20Wrapper#deposit: INCORRECT_MSG_VALUE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_18ab744e6275fc2611ea3f469ab0998d462afdc8fb55fa1f0baa2f290c1dd8e8",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: INCORRECT_MSG_VALUE\""
                              }
                            ],
                            "id": 5212,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "3683:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3683:77:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5219,
                        "nodeType": "ExpressionStatement",
                        "src": "3683:77:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 5220,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5139,
                            "src": "3768:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 5221,
                            "name": "ETH_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5067,
                            "src": "3773:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3768:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5223,
                        "nodeType": "ExpressionStatement",
                        "src": "3768:11:20"
                      }
                    ]
                  },
                  "id": 5225,
                  "nodeType": "IfStatement",
                  "src": "2833:953:20",
                  "trueBody": {
                    "id": 5211,
                    "nodeType": "Block",
                    "src": "2860:809:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5145,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11922,
                                  "src": "2911:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 5146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2911:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 5147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2924:1:20",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2911:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d657461455243323057726170706572236465706f7369743a204e4f4e5f4e554c4c5f4d53475f56414c5545",
                              "id": 5149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2927:46:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_52e2325dc5a388253b111b94bbca717f4138da2fa7211fcfb41ba013239fcc9e",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: NON_NULL_MSG_VALUE\""
                              },
                              "value": "MetaERC20Wrapper#deposit: NON_NULL_MSG_VALUE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_52e2325dc5a388253b111b94bbca717f4138da2fa7211fcfb41ba013239fcc9e",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: NON_NULL_MSG_VALUE\""
                              }
                            ],
                            "id": 5144,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "2903:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2903:71:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5151,
                        "nodeType": "ExpressionStatement",
                        "src": "2903:71:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5156,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11922,
                                "src": "3010:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3010:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5159,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11970,
                                  "src": "3030:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                    "typeString": "contract MetaERC20Wrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                    "typeString": "contract MetaERC20Wrapper"
                                  }
                                ],
                                "id": 5158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3022:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 5160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3022:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5161,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5126,
                              "src": "3037:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5153,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5122,
                                  "src": "2989:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5152,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5767,
                                "src": "2982:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$5767_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2982:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5767",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5729,
                            "src": "2982:27:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2982:62:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5163,
                        "nodeType": "ExpressionStatement",
                        "src": "2982:62:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5165,
                                "name": "checkSuccess",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5500,
                                "src": "3060:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
                                  "typeString": "function () pure returns (bool)"
                                }
                              },
                              "id": 5166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3060:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d657461455243323057726170706572236465706f7369743a205452414e534645525f4641494c4544",
                              "id": 5167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3076:43:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_60c012ac410bc331a9c5c1e4b0a28751cc566065127914b00b9ee80212c2c0ff",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: TRANSFER_FAILED\""
                              },
                              "value": "MetaERC20Wrapper#deposit: TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_60c012ac410bc331a9c5c1e4b0a28751cc566065127914b00b9ee80212c2c0ff",
                                "typeString": "literal_string \"MetaERC20Wrapper#deposit: TRANSFER_FAILED\""
                              }
                            ],
                            "id": 5164,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "3052:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:68:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5169,
                        "nodeType": "ExpressionStatement",
                        "src": "3052:68:20"
                      },
                      {
                        "assignments": [
                          5171
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5171,
                            "name": "addressId",
                            "nodeType": "VariableDeclaration",
                            "scope": 5211,
                            "src": "3160:17:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5170,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3160:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5175,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 5172,
                            "name": "addressToID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5076,
                            "src": "3180:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5174,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 5173,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5122,
                            "src": "3192:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3180:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3160:39:20"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 5176,
                            "name": "addressId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5171,
                            "src": "3253:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3266:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3253:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 5209,
                          "nodeType": "Block",
                          "src": "3629:33:20",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 5205,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5139,
                                  "src": "3639:2:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 5206,
                                  "name": "addressId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5171,
                                  "src": "3644:9:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3639:14:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5208,
                              "nodeType": "ExpressionStatement",
                              "src": "3639:14:20"
                            }
                          ]
                        },
                        "id": 5210,
                        "nodeType": "IfStatement",
                        "src": "3249:413:20",
                        "trueBody": {
                          "id": 5204,
                          "nodeType": "Block",
                          "src": "3269:354:20",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 5179,
                                  "name": "nTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5064,
                                  "src": "3279:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 5180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3290:1:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3279:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5182,
                              "nodeType": "ExpressionStatement",
                              "src": "3279:12:20"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 5183,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5139,
                                  "src": "3354:2:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 5184,
                                  "name": "nTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5064,
                                  "src": "3359:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3354:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5186,
                              "nodeType": "ExpressionStatement",
                              "src": "3354:12:20"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 5187,
                                    "name": "IDtoAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5080,
                                    "src": "3430:11:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 5189,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 5188,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5139,
                                    "src": "3442:2:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3430:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 5190,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5122,
                                  "src": "3448:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3430:24:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 5192,
                              "nodeType": "ExpressionStatement",
                              "src": "3430:24:20"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 5193,
                                    "name": "addressToID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5076,
                                    "src": "3491:11:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 5195,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 5194,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5122,
                                    "src": "3503:6:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3491:19:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 5196,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5139,
                                  "src": "3513:2:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3491:24:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5198,
                              "nodeType": "ExpressionStatement",
                              "src": "3491:24:20"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 5200,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5122,
                                    "src": "3602:6:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 5201,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5139,
                                    "src": "3610:2:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 5199,
                                  "name": "TokenRegistration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5092,
                                  "src": "3584:17:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 5202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3584:29:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5203,
                              "nodeType": "EmitStatement",
                              "src": "3579:34:20"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5227,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5124,
                        "src": "3822:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5228,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5139,
                        "src": "3834:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5229,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5126,
                        "src": "3838:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 5230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3846:2:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 5226,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7219,
                      "src": "3816:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 5231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3816:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5232,
                  "nodeType": "ExpressionStatement",
                  "src": "3816:33:20"
                }
              ]
            },
            "documentation": "@dev Deposit ERC20 tokens or ETH in this contract to receive wrapped ERC20s\n@param _token     The addess of the token to deposit in this contract\n@param _recipient Address that will receive the ERC-1155 tokens\n@param _value     The amount of token to deposit in this contract\nNote: Users must first approve this contract addres on the contract of the ERC20 to be deposited",
            "id": 5234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5122,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5234,
                  "src": "2567:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2567:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5124,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 5234,
                  "src": "2583:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2583:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5126,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5234,
                  "src": "2603:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2603:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2566:52:20"
            },
            "returnParameters": {
              "id": 5128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2640:0:20"
            },
            "scope": 5517,
            "src": "2550:1304:20",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5257,
              "nodeType": "Block",
              "src": "4357:96:20",
              "statements": [
                {
                  "assignments": [
                    5244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5244,
                      "name": "tokenID",
                      "nodeType": "VariableDeclaration",
                      "scope": 5257,
                      "src": "4363:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4363:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5248,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5246,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5236,
                        "src": "4392:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5245,
                      "name": "getTokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5452,
                      "src": "4381:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 5247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4381:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4363:36:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11922,
                          "src": "4415:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4415:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5252,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5238,
                        "src": "4427:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5253,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5244,
                        "src": "4432:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5254,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5240,
                        "src": "4441:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5249,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5326,
                      "src": "4405:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address payable,uint256,uint256)"
                      }
                    },
                    "id": 5255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4405:43:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5256,
                  "nodeType": "ExpressionStatement",
                  "src": "4405:43:20"
                }
              ]
            },
            "documentation": "@dev Withdraw wrapped ERC20 tokens in this contract to receive the original ERC20s or ETH\n@param _token The addess of the token to withdrww from this contract\n@param _to The address where the withdrawn tokens will go to\n@param _value The amount of tokens to withdraw",
            "id": 5258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5236,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5258,
                  "src": "4297:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4297:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5238,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5258,
                  "src": "4313:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5240,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5258,
                  "src": "4334:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4334:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4296:53:20"
            },
            "returnParameters": {
              "id": 5242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4357:0:20"
            },
            "scope": 5517,
            "src": "4279:174:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5325,
              "nodeType": "Block",
              "src": "4957:526:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5270,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5260,
                        "src": "4993:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5271,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5264,
                        "src": "5000:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5272,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5266,
                        "src": "5010:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5269,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7339,
                      "src": "4987:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 5273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4987:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5274,
                  "nodeType": "ExpressionStatement",
                  "src": "4987:30:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5275,
                      "name": "_tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5264,
                      "src": "5066:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 5276,
                      "name": "ETH_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5067,
                      "src": "5078:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5066:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5323,
                    "nodeType": "Block",
                    "src": "5265:212:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "id": 5304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 5300,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5262,
                                "src": "5281:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 5302,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5296:1:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 5301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5288:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 5303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5288:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5281:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d6574614552433230577261707065722377697468647261773a20494e56414c49445f524543495049454e54",
                              "id": 5305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5300:46:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a3ff64274638dcdb2ba8a07eb1491f949b7ab0bfeb2b25cede5a4a3c65ef7065",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: INVALID_RECIPIENT\""
                              },
                              "value": "MetaERC20Wrapper#withdraw: INVALID_RECIPIENT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a3ff64274638dcdb2ba8a07eb1491f949b7ab0bfeb2b25cede5a4a3c65ef7065",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: INVALID_RECIPIENT\""
                              }
                            ],
                            "id": 5299,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "5273:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5273:74:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5307,
                        "nodeType": "ExpressionStatement",
                        "src": "5273:74:20"
                      },
                      {
                        "assignments": [
                          5309,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5309,
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 5323,
                            "src": "5356:12:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 5308,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5356:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 5317,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 5315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5397:2:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 5313,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5266,
                                "src": "5389:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5310,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5262,
                                  "src": "5374:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 5311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5374:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 5312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5374:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                              }
                            },
                            "id": 5314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5374:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 5316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5374:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5355:45:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5319,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5309,
                              "src": "5416:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d6574614552433230577261707065722377697468647261773a205452414e534645525f4641494c4544",
                              "id": 5320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5425:44:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d7528a6cd90ae2fb6c5a0652ba5ca5a48bc570d63bd727556bdfb948863fb826",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: TRANSFER_FAILED\""
                              },
                              "value": "MetaERC20Wrapper#withdraw: TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d7528a6cd90ae2fb6c5a0652ba5ca5a48bc570d63bd727556bdfb948863fb826",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: TRANSFER_FAILED\""
                              }
                            ],
                            "id": 5318,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "5408:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5408:62:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5322,
                        "nodeType": "ExpressionStatement",
                        "src": "5408:62:20"
                      }
                    ]
                  },
                  "id": 5324,
                  "nodeType": "IfStatement",
                  "src": "5062:415:20",
                  "trueBody": {
                    "id": 5298,
                    "nodeType": "Block",
                    "src": "5086:173:20",
                    "statements": [
                      {
                        "assignments": [
                          5279
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5279,
                            "name": "token",
                            "nodeType": "VariableDeclaration",
                            "scope": 5298,
                            "src": "5094:13:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 5278,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5094:7:20",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5283,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 5280,
                            "name": "IDtoAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5080,
                            "src": "5110:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 5282,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 5281,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5264,
                            "src": "5122:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5110:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5094:37:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5288,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5262,
                              "src": "5162:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5289,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5266,
                              "src": "5167:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5285,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5279,
                                  "src": "5146:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5284,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5767,
                                "src": "5139:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$5767_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5139:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5767",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5709,
                            "src": "5139:22:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5139:35:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5291,
                        "nodeType": "ExpressionStatement",
                        "src": "5139:35:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5293,
                                "name": "checkSuccess",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5500,
                                "src": "5190:12:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
                                  "typeString": "function () pure returns (bool)"
                                }
                              },
                              "id": 5294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5190:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4d6574614552433230577261707065722377697468647261773a205452414e534645525f4641494c4544",
                              "id": 5295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5206:44:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d7528a6cd90ae2fb6c5a0652ba5ca5a48bc570d63bd727556bdfb948863fb826",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: TRANSFER_FAILED\""
                              },
                              "value": "MetaERC20Wrapper#withdraw: TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d7528a6cd90ae2fb6c5a0652ba5ca5a48bc570d63bd727556bdfb948863fb826",
                                "typeString": "literal_string \"MetaERC20Wrapper#withdraw: TRANSFER_FAILED\""
                              }
                            ],
                            "id": 5292,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              11925,
                              11926
                            ],
                            "referencedDeclaration": 11926,
                            "src": "5182:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5182:69:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5297,
                        "nodeType": "ExpressionStatement",
                        "src": "5182:69:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Withdraw wrapped ERC20 tokens in this contract to receive the original ERC20s or ETH\n@param _from    Address of users sending the Meta tokens\n@param _to      The address where the withdrawn tokens will go to\n@param _tokenID The token ID of the ERC-20 token to withdraw from this contract\n@param _value   The amount of tokens to withdraw",
            "id": 5326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5260,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "4860:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4860:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5262,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "4879:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4879:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5264,
                  "name": "_tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "4904:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4904:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5266,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5326,
                  "src": "4926:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4926:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4854:87:20"
            },
            "returnParameters": {
              "id": 5268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4957:0:20"
            },
            "scope": 5517,
            "src": "4836:647:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5366,
              "nodeType": "Block",
              "src": "5991:358:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 5347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5342,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11922,
                            "src": "6055:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6055:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5345,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11970,
                              "src": "6077:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                "typeString": "contract MetaERC20Wrapper"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                "typeString": "contract MetaERC20Wrapper"
                              }
                            ],
                            "id": 5344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6069:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6069:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6055:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d657461455243323057726170706572236f6e4552433131353552656365697665643a20494e56414c49445f455243313135355f5245434549564544",
                        "id": 5348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6084:62:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_298f8b1a7d09e54e9ad5dfd1b230710353cd7e0c23bec42e628b01c9bef64671",
                          "typeString": "literal_string \"MetaERC20Wrapper#onERC1155Received: INVALID_ERC1155_RECEIVED\""
                        },
                        "value": "MetaERC20Wrapper#onERC1155Received: INVALID_ERC1155_RECEIVED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_298f8b1a7d09e54e9ad5dfd1b230710353cd7e0c23bec42e628b01c9bef64671",
                          "typeString": "literal_string \"MetaERC20Wrapper#onERC1155Received: INVALID_ERC1155_RECEIVED\""
                        }
                      ],
                      "id": 5341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11925,
                        11926
                      ],
                      "referencedDeclaration": 11926,
                      "src": "6047:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6047:100:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5350,
                  "nodeType": "ExpressionStatement",
                  "src": "6047:100:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5352,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5332,
                        "src": "6166:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5351,
                      "name": "getIdAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5477,
                      "src": "6153:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 5353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6153:17:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5354,
                  "nodeType": "ExpressionStatement",
                  "src": "6153:17:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5357,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11970,
                            "src": "6282:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                              "typeString": "contract MetaERC20Wrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                              "typeString": "contract MetaERC20Wrapper"
                            }
                          ],
                          "id": 5356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6274:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6274:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5359,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5330,
                        "src": "6289:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5360,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5332,
                        "src": "6296:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5361,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5334,
                        "src": "6301:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5355,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5326,
                      "src": "6264:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address payable,uint256,uint256)"
                      }
                    },
                    "id": 5362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6264:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5363,
                  "nodeType": "ExpressionStatement",
                  "src": "6264:44:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5364,
                    "name": "ERC1155_RECEIVED_VALUE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5083,
                    "src": "6322:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 5340,
                  "id": 5365,
                  "nodeType": "Return",
                  "src": "6315:29:20"
                }
              ]
            },
            "documentation": "@notice Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart\n@param _from      The address which previously owned the token\n@param _id        The id of the token being transferred\n@param _value     The amount of tokens being transferred\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`",
            "id": 5367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC1155Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5328,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5887:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5887:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5330,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5896:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5896:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5332,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5919:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5919:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5334,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5932:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5932:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5336,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5948:12:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5335,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5948:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5886:75:20"
            },
            "returnParameters": {
              "id": 5340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5339,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "5981:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5338,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5981:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5980:8:20"
            },
            "scope": 5517,
            "src": "5860:489:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5428,
              "nodeType": "Block",
              "src": "6931:476:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 5390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5385,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11922,
                            "src": "6995:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6995:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5388,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11970,
                              "src": "7017:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                "typeString": "contract MetaERC20Wrapper"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                "typeString": "contract MetaERC20Wrapper"
                              }
                            ],
                            "id": 5387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7009:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7009:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6995:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d657461455243323057726170706572236f6e45524331313535426174636852656365697665643a20494e56414c49445f455243313135355f5245434549564544",
                        "id": 5391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7024:67:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f7fa389c177bc9787ac2c6dd7e77b288a431fbd01f0543daeaf9e12dd96ceb6",
                          "typeString": "literal_string \"MetaERC20Wrapper#onERC1155BatchReceived: INVALID_ERC1155_RECEIVED\""
                        },
                        "value": "MetaERC20Wrapper#onERC1155BatchReceived: INVALID_ERC1155_RECEIVED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f7fa389c177bc9787ac2c6dd7e77b288a431fbd01f0543daeaf9e12dd96ceb6",
                          "typeString": "literal_string \"MetaERC20Wrapper#onERC1155BatchReceived: INVALID_ERC1155_RECEIVED\""
                        }
                      ],
                      "id": 5384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11925,
                        11926
                      ],
                      "referencedDeclaration": 11926,
                      "src": "6987:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6987:105:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5393,
                  "nodeType": "ExpressionStatement",
                  "src": "6987:105:20"
                },
                {
                  "body": {
                    "id": 5424,
                    "nodeType": "Block",
                    "src": "7169:192:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5406,
                                "name": "_ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5374,
                                "src": "7226:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 5408,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5407,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5395,
                                "src": "7231:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7226:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5405,
                            "name": "getIdAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5477,
                            "src": "7213:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 5409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7213:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5410,
                        "nodeType": "ExpressionStatement",
                        "src": "7213:21:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5413,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11970,
                                  "src": "7320:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                    "typeString": "contract MetaERC20Wrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MetaERC20Wrapper_$5517",
                                    "typeString": "contract MetaERC20Wrapper"
                                  }
                                ],
                                "id": 5412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7312:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 5414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7312:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5415,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5371,
                              "src": "7327:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5416,
                                "name": "_ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5374,
                                "src": "7334:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 5418,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5417,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5395,
                                "src": "7339:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7334:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5419,
                                "name": "_values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5377,
                                "src": "7343:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 5421,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5420,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5395,
                                "src": "7351:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7343:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5411,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5326,
                            "src": "7302:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address payable,uint256,uint256)"
                            }
                          },
                          "id": 5422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7302:52:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5423,
                        "nodeType": "ExpressionStatement",
                        "src": "7302:52:20"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5398,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5395,
                      "src": "7147:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5399,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5374,
                        "src": "7151:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 5400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7151:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7147:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5425,
                  "initializationExpression": {
                    "assignments": [
                      5395
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5395,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 5425,
                        "src": "7132:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7132:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 5397,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7144:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7132:13:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 5403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7164:3:20",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 5402,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5395,
                        "src": "7164:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5404,
                    "nodeType": "ExpressionStatement",
                    "src": "7164:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "7126:235:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5426,
                    "name": "ERC1155_BATCH_RECEIVED_VALUE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5086,
                    "src": "7374:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 5383,
                  "id": 5427,
                  "nodeType": "Return",
                  "src": "7367:35:20"
                }
              ]
            },
            "documentation": "@notice Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart\n@param _from      The address which previously owned the token\n@param _ids       An array containing ids of each token being transferred\n@param _values    An array containing amounts of each token being transferred\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`",
            "id": 5429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC1155BatchReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5369,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6807:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6807:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5371,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6816:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6816:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5374,
                  "name": "_ids",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6839:21:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5372,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6839:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5373,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6839:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5377,
                  "name": "_values",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6862:24:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5375,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6862:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5376,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "6862:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5379,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6888:12:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5378,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6888:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6806:95:20"
            },
            "returnParameters": {
              "id": 5383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5382,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5429,
                  "src": "6921:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5381,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6921:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6920:8:20"
            },
            "scope": 5517,
            "src": "6775:632:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5451,
              "nodeType": "Block",
              "src": "7694:138:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5436,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5434,
                      "src": "7700:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5437,
                        "name": "addressToID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5076,
                        "src": "7710:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5439,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5438,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5431,
                        "src": "7722:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7710:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7700:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5441,
                  "nodeType": "ExpressionStatement",
                  "src": "7700:29:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5443,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5434,
                          "src": "7743:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7754:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7743:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d65746145524332305772617070657223676574546f6b656e49443a20554e524547495354455245445f544f4b454e",
                        "id": 5446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7757:49:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ddbb34173b4d53b1858796a31b67c7ca88e7d9b7db4a44c73d3f1be7545c29",
                          "typeString": "literal_string \"MetaERC20Wrapper#getTokenID: UNREGISTERED_TOKEN\""
                        },
                        "value": "MetaERC20Wrapper#getTokenID: UNREGISTERED_TOKEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3ddbb34173b4d53b1858796a31b67c7ca88e7d9b7db4a44c73d3f1be7545c29",
                          "typeString": "literal_string \"MetaERC20Wrapper#getTokenID: UNREGISTERED_TOKEN\""
                        }
                      ],
                      "id": 5442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11925,
                        11926
                      ],
                      "referencedDeclaration": 11926,
                      "src": "7735:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7735:72:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5448,
                  "nodeType": "ExpressionStatement",
                  "src": "7735:72:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5449,
                    "name": "tokenID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5434,
                    "src": "7820:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5435,
                  "id": 5450,
                  "nodeType": "Return",
                  "src": "7813:14:20"
                }
              ]
            },
            "documentation": "@notice Return the Meta-ERC20 token ID for the given ERC-20 token address\n@param _token ERC-20 token address to get the corresponding Meta-ERC20 token ID\n@return Meta-ERC20 token ID",
            "id": 5452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenID",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5431,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5452,
                  "src": "7640:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7640:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7639:16:20"
            },
            "returnParameters": {
              "id": 5435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5434,
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 5452,
                  "src": "7677:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7677:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7676:17:20"
            },
            "scope": 5517,
            "src": "7620:212:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5476,
              "nodeType": "Block",
              "src": "8114:142:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5459,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5457,
                      "src": "8120:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5460,
                        "name": "IDtoAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5080,
                        "src": "8128:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 5462,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5461,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5454,
                        "src": "8140:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8128:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8120:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5464,
                  "nodeType": "ExpressionStatement",
                  "src": "8120:24:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5466,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5457,
                          "src": "8158:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 5468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8175:3:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8167:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 5469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8167:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8158:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d657461455243323057726170706572236765744964416464726573733a20554e524547495354455245445f544f4b454e",
                        "id": 5471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8181:51:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a400c79cc9e4d63fe5f7c90f141f667cd9b84b276de2c465e0102adb91057b61",
                          "typeString": "literal_string \"MetaERC20Wrapper#getIdAddress: UNREGISTERED_TOKEN\""
                        },
                        "value": "MetaERC20Wrapper#getIdAddress: UNREGISTERED_TOKEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a400c79cc9e4d63fe5f7c90f141f667cd9b84b276de2c465e0102adb91057b61",
                          "typeString": "literal_string \"MetaERC20Wrapper#getIdAddress: UNREGISTERED_TOKEN\""
                        }
                      ],
                      "id": 5465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11925,
                        11926
                      ],
                      "referencedDeclaration": 11926,
                      "src": "8150:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8150:83:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5473,
                  "nodeType": "ExpressionStatement",
                  "src": "8150:83:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5474,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5457,
                    "src": "8246:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5458,
                  "id": 5475,
                  "nodeType": "Return",
                  "src": "8239:12:20"
                }
              ]
            },
            "documentation": "@notice Return the ERC-20 token address for the given Meta-ERC20 token ID\n@param _id Meta-ERC20 token ID to get the corresponding ERC-20 token address\n@return ERC-20 token address",
            "id": 5477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5454,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 5477,
                  "src": "8065:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8065:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8064:13:20"
            },
            "returnParameters": {
              "id": 5458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5457,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 5477,
                  "src": "8099:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8099:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8098:15:20"
            },
            "scope": 5517,
            "src": "8043:213:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5484,
              "nodeType": "Block",
              "src": "8385:25:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5482,
                    "name": "nTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5064,
                    "src": "8398:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5481,
                  "id": 5483,
                  "nodeType": "Return",
                  "src": "8391:14:20"
                }
              ]
            },
            "documentation": "@notice Returns number of tokens currently registered",
            "id": 5485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8350:2:20"
            },
            "returnParameters": {
              "id": 5481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5480,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5485,
                  "src": "8376:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8376:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8375:9:20"
            },
            "scope": 5517,
            "src": "8331:79:20",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5499,
              "nodeType": "Block",
              "src": "8918:648:20",
              "statements": [
                {
                  "assignments": [
                    5491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5491,
                      "name": "returnValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 5499,
                      "src": "8924:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5490,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8924:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5493,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 5492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8946:1:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8924:23:20"
                },
                {
                  "externalReferences": [
                    {
                      "returnValue": {
                        "declaration": 5491,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9189:11:20",
                        "valueSize": 1
                      }
                    },
                    {
                      "returnValue": {
                        "declaration": 5491,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "9416:11:20",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 5494,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    switch returndatasize()\n    case 0x0 { returnValue := 1 }\n    case 0x20 {\n        returndatacopy(0x0, 0x0, 0x20)\n        returnValue := mload(0x0)\n    }\n    default { }\n}",
                  "src": "9017:515:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5495,
                      "name": "returnValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5491,
                      "src": "9545:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9560:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9545:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5489,
                  "id": 5498,
                  "nodeType": "Return",
                  "src": "9538:23:20"
                }
              ]
            },
            "documentation": "Checks the return value of the previous function up to 32 bytes. Returns true if the previous\nfunction returned 0 bytes or 32 bytes that are not all-zero.\nCode taken from: https://github.com/dydxprotocol/solo/blob/10baf8e4c3fb9db4d0919043d3e6fdd6ba834046/contracts/protocol/lib/Token.sol",
            "id": 5500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkSuccess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8877:2:20"
            },
            "returnParameters": {
              "id": 5489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5488,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5500,
                  "src": "8910:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5487,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8910:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8909:6:20"
            },
            "scope": 5517,
            "src": "8856:710:20",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5515,
              "nodeType": "Block",
              "src": "10124:383:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5507,
                        "name": "interfaceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5502,
                        "src": "10138:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783031666663396137",
                        "id": 5508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10153:10:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "src": "10138:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 5512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5510,
                        "name": "interfaceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5502,
                        "src": "10249:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783465323331326530",
                        "id": 5511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10264:10:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1310921440_by_1",
                          "typeString": "int_const 1310921440"
                        },
                        "value": "0x4e2312e0"
                      },
                      "src": "10249:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10138:136:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5506,
                  "id": 5514,
                  "nodeType": "Return",
                  "src": "10130:144:20"
                }
              ]
            },
            "documentation": "@notice Indicates whether a contract implements the `ERC1155TokenReceiver` functions and so can accept ERC1155 token types.\n@param  interfaceID The ERC-165 interface ID that is queried for support.s\n@dev This function MUST return true if it implements the ERC1155TokenReceiver interface and ERC-165 interface.\n     This function MUST NOT consume more thsan 5,000 gas.\n@return Wheter ERC-165 or ERC1155TokenReceiver interfaces are supported.",
            "id": 5516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5502,
                  "name": "interfaceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 5516,
                  "src": "10075:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5501,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "10075:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10074:20:20"
            },
            "returnParameters": {
              "id": 5506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5505,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5516,
                  "src": "10118:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5504,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10118:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10117:6:20"
            },
            "scope": 5517,
            "src": "10048:459:20",
            "stateMutability": "view",
            "superFunction": 6396,
            "visibility": "external"
          }
        ],
        "scope": 5518,
        "src": "541:9969:20"
      }
    ],
    "src": "0:10510:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-06-26T16:37:43.014Z",
  "devdoc": {
    "methods": {
      "balanceOf(address,uint256)": {
        "params": {
          "_id": "ID of the Token",
          "_owner": "The address of the token holder"
        },
        "return": "The _owner's balance of the Token type requested"
      },
      "balanceOfBatch(address[],uint256[])": {
        "params": {
          "_ids": "ID of the Tokens",
          "_owners": "The addresses of the token holders"
        },
        "return": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
      },
      "deposit(address,address,uint256)": {
        "details": "Deposit ERC20 tokens or ETH in this contract to receive wrapped ERC20s",
        "params": {
          "_recipient": "Address that will receive the ERC-1155 tokens",
          "_token": "The addess of the token to deposit in this contract",
          "_value": "The amount of token to deposit in this contract Note: Users must first approve this contract addres on the contract of the ERC20 to be deposited"
        }
      },
      "getIdAddress(uint256)": {
        "params": {
          "_id": "Meta-ERC20 token ID to get the corresponding ERC-20 token address"
        },
        "return": "ERC-20 token address"
      },
      "getNonce(address)": {
        "params": {
          "_signer": "Address to query signature nonce for"
        }
      },
      "getTokenID(address)": {
        "params": {
          "_token": "ERC-20 token address to get the corresponding Meta-ERC20 token ID"
        },
        "return": "Meta-ERC20 token ID"
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "_operator": "Address of authorized operator",
          "_owner": "The owner of the Tokens"
        },
        "return": "True if the operator is approved, false if not"
      },
      "isValidSignature(address,bytes32,bytes,bytes)": {
        "details": "Verifies that a hash has been signed by the given signer.",
        "params": {
          "_data": "Full EIP-712 data structure that was hashed and signed",
          "_hash": "Hash of the EIP-712 encoded data",
          "_sig": "Proof that the hash has been signed by signer.     For non wallet signatures, _sig is expected to be an array tightly encoded as     (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType)",
          "_signerAddress": "Address that should have signed the given hash."
        },
        "return": "True if the address recovered from the provided signature matches the input signer address."
      },
      "metaSafeBatchTransferFrom(address,address,uint256[],uint256[],bool,bytes)": {
        "params": {
          "_amounts": "Transfer amounts per token type",
          "_data": "Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (  (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),  (GasReceipt g, ?bytes transferData) )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array",
          "_from": "Source addresses",
          "_ids": "IDs of each token type",
          "_isGasFee": "Whether gas is reimbursed to executor or not",
          "_to": "Target addresses"
        }
      },
      "metaSafeTransferFrom(address,address,uint256,uint256,bool,bytes)": {
        "params": {
          "_amount": "Transfered amount",
          "_data": "Encodes a meta transfer indicator, signature, gas payment receipt and extra transfer data  _data should be encoded as (  (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),  (GasReceipt g, ?bytes transferData) )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array",
          "_from": "Source address",
          "_id": "ID of the token type",
          "_isGasFee": "Whether gas is reimbursed to executor or not",
          "_to": "Target address"
        }
      },
      "metaSetApprovalForAll(address,address,bool,bool,bytes)": {
        "params": {
          "_approved": "True if the operator is approved, false to revoke approval",
          "_data": "Encodes signature and gas payment receipt  _data should be encoded as (    (bytes32 r, bytes32 s, uint8 v, uint256 nonce, SignatureType sigType),    (GasReceipt g)  )  i.e. high level encoding should be (bytes, bytes), where the latter bytes array is a nested bytes array",
          "_isGasFee": "Whether gas will be reimbursed or not, with vlid signature",
          "_operator": "Address to add to the set of authorized operators",
          "_owner": "Address that wants to set operator status  _spender"
        }
      },
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
        "params": {
          "_from": "The address which previously owned the token",
          "_ids": "An array containing ids of each token being transferred",
          "_values": "An array containing amounts of each token being transferred"
        },
        "return": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"
      },
      "onERC1155Received(address,address,uint256,uint256,bytes)": {
        "params": {
          "_from": "The address which previously owned the token",
          "_id": "The id of the token being transferred",
          "_value": "The amount of tokens being transferred"
        },
        "return": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`"
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "params": {
          "_amounts": "Transfer amounts per token type",
          "_data": "Additional data with no specified format, sent in call to `_to`",
          "_from": "Source addresses",
          "_ids": "IDs of each token type",
          "_to": "Target addresses"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "params": {
          "_amount": "Transfered amount",
          "_data": "Additional data with no specified format, sent in call to `_to`",
          "_from": "Source address",
          "_id": "ID of the token type",
          "_to": "Target address"
        }
      },
      "setApprovalForAll(address,bool)": {
        "params": {
          "_approved": "True if the operator is approved, false to revoke approval",
          "_operator": "Address to add to the set of authorized operators"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "This function MUST return true if it implements the ERC1155TokenReceiver interface and ERC-165 interface.     This function MUST NOT consume more thsan 5,000 gas.",
        "params": {
          "interfaceID": "The ERC-165 interface ID that is queried for support.s"
        },
        "return": "Wheter ERC-165 or ERC1155TokenReceiver interfaces are supported."
      },
      "withdraw(address,address,uint256)": {
        "details": "Withdraw wrapped ERC20 tokens in this contract to receive the original ERC20s or ETH",
        "params": {
          "_to": "The address where the withdrawn tokens will go to",
          "_token": "The addess of the token to withdrww from this contract",
          "_value": "The amount of tokens to withdraw"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "balanceOf(address,uint256)": {
        "notice": "Get the balance of an account's Tokens"
      },
      "balanceOfBatch(address[],uint256[])": {
        "notice": "Get the balance of multiple account/token pairs"
      },
      "constructor": "*********************************| |            Constructor            | |__________________________________",
      "getIdAddress(uint256)": {
        "notice": "Return the ERC-20 token address for the given Meta-ERC20 token ID"
      },
      "getNTokens()": {
        "notice": "Returns number of tokens currently registered"
      },
      "getNonce(address)": {
        "notice": "Returns the current nonce associated with a given address"
      },
      "getTokenID(address)": {
        "notice": "Return the Meta-ERC20 token ID for the given ERC-20 token address"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given owner"
      },
      "metaSafeBatchTransferFrom(address,address,uint256[],uint256[],bool,bytes)": {
        "notice": "Allows anyone with a valid signature to transfer multiple types of tokens on the bahalf of _from"
      },
      "metaSafeTransferFrom(address,address,uint256,uint256,bool,bytes)": {
        "notice": "Allows anyone with a valid signature to transfer _amount amount of a token _id on the bahalf of _from"
      },
      "metaSetApprovalForAll(address,address,bool,bool,bytes)": {
        "notice": "Approve the passed address to spend on behalf of _from if valid signature is provided"
      },
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
        "notice": "Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart"
      },
      "onERC1155Received(address,address,uint256,uint256,bytes)": {
        "notice": "Withdraw ERC-20 tokens when receiving their ERC-1155 counterpart"
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "notice": "Send multiple types of Tokens from the _from address to the _to address (with safety call)"
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "notice": "Transfers amount amount of an _id from the _from address to the _to address specified"
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"
      },
      "supportsInterface(bytes4)": {
        "notice": "Indicates whether a contract implements the `ERC1155TokenReceiver` functions and so can accept ERC1155 token types."
      }
    },
    "notice": "Allows users to wrap any amount of any ERC-20 token with a 1:1 ratio  of corresponding ERC-1155 tokens with native metaTransaction methods. Each  ERC-20 is assigned an ERC-1155 id for more efficient CALLDATA usage when  doing transfers."
  }
}