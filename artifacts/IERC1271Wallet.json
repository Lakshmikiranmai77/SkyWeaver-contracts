{
  "contractName": "IERC1271Wallet",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data  > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\")  > This function MAY modify Ethereum's state\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signature\":\"Signature byte array associated with _data\"},\"return\":\"Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise   \"},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash  > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\")  > This function MAY modify Ethereum's state\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signature\":\"Signature byte array associated with _data\"},\"return\":\"Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}}},\"userdoc\":{\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"}}}},\"settings\":{\"compilationTarget\":{\"multi-token-standard/contracts/interfaces/IERC1271Wallet.sol\":\"IERC1271Wallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"multi-token-standard/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0xf04346229f40d5f61afc28a9562b000cd2621467f47eb68d52b6837ad9e37a3a\",\"urls\":[\"bzz-raw://5656645d69f71ef176452aa526adc77009c73068e0c6382227d8c94abfc14939\",\"dweb:/ipfs/QmZrKZ7W79GAwf9byvJLeeutQjiy9vS2KAbt946afCpxYD\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.16;\n\n\ninterface  IERC1271Wallet {\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided data\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   *   > This function MAY modify Ethereum's state\n   * @param _data       Arbitrary length data signed on the behalf of address(this)\n   * @param _signature  Signature byte array associated with _data\n   * @return Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   *\n   */\n  function isValidSignature(\n    bytes calldata _data,\n    bytes calldata _signature)\n    external\n    view\n    returns (bytes4 magicValue);\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   *   > This function MAY modify Ethereum's state\n   * @param _hash       keccak256 hash that was signed\n   * @param _signature  Signature byte array associated with _data\n   * @return Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signature)\n    external\n    view\n    returns (bytes4 magicValue);\n}",
  "sourcePath": "multi-token-standard/contracts/interfaces/IERC1271Wallet.sol",
  "ast": {
    "absolutePath": "multi-token-standard/contracts/interfaces/IERC1271Wallet.sol",
    "exportedSymbols": {
      "IERC1271Wallet": [
        5688
      ]
    },
    "id": 5689,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5669,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:23"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 5688,
        "linearizedBaseContracts": [
          5688
        ],
        "name": "IERC1271Wallet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Verifies whether the provided signature is valid with respect to the provided data\n@dev MUST return the correct magic value if the signature provided is valid for the provided data\n  > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n  > This function MAY modify Ethereum's state\n@param _data       Arbitrary length data signed on the behalf of address(this)\n@param _signature  Signature byte array associated with _data\n@return Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   ",
            "id": 5678,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5671,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 5678,
                  "src": "719:20:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5670,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5673,
                  "name": "_signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5678,
                  "src": "745:25:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5672,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "713:58:23"
            },
            "returnParameters": {
              "id": 5677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5676,
                  "name": "magicValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 5678,
                  "src": "807:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5675,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "806:19:23"
            },
            "scope": 5688,
            "src": "688:138:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Verifies whether the provided signature is valid with respect to the provided hash\n@dev MUST return the correct magic value if the signature provided is valid for the provided hash\n  > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n  > This function MAY modify Ethereum's state\n@param _hash       keccak256 hash that was signed\n@param _signature  Signature byte array associated with _data\n@return Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise",
            "id": 5687,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5680,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5687,
                  "src": "1457:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5679,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5682,
                  "name": "_signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5687,
                  "src": "1476:25:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5681,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1451:51:23"
            },
            "returnParameters": {
              "id": 5686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5685,
                  "name": "magicValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 5687,
                  "src": "1538:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5684,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1537:19:23"
            },
            "scope": 5688,
            "src": "1426:131:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5689,
        "src": "27:1532:23"
      }
    ],
    "src": "0:1559:23"
  },
  "legacyAST": {
    "absolutePath": "multi-token-standard/contracts/interfaces/IERC1271Wallet.sol",
    "exportedSymbols": {
      "IERC1271Wallet": [
        5688
      ]
    },
    "id": 5689,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5669,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:23"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 5688,
        "linearizedBaseContracts": [
          5688
        ],
        "name": "IERC1271Wallet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Verifies whether the provided signature is valid with respect to the provided data\n@dev MUST return the correct magic value if the signature provided is valid for the provided data\n  > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n  > This function MAY modify Ethereum's state\n@param _data       Arbitrary length data signed on the behalf of address(this)\n@param _signature  Signature byte array associated with _data\n@return Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   ",
            "id": 5678,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5671,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 5678,
                  "src": "719:20:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5670,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5673,
                  "name": "_signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5678,
                  "src": "745:25:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5672,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "713:58:23"
            },
            "returnParameters": {
              "id": 5677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5676,
                  "name": "magicValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 5678,
                  "src": "807:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5675,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "806:19:23"
            },
            "scope": 5688,
            "src": "688:138:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Verifies whether the provided signature is valid with respect to the provided hash\n@dev MUST return the correct magic value if the signature provided is valid for the provided hash\n  > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n  > This function MAY modify Ethereum's state\n@param _hash       keccak256 hash that was signed\n@param _signature  Signature byte array associated with _data\n@return Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise",
            "id": 5687,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5680,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5687,
                  "src": "1457:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5679,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5682,
                  "name": "_signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 5687,
                  "src": "1476:25:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5681,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1451:51:23"
            },
            "returnParameters": {
              "id": 5686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5685,
                  "name": "magicValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 5687,
                  "src": "1538:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5684,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1537:19:23"
            },
            "scope": 5688,
            "src": "1426:131:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 5689,
        "src": "27:1532:23"
      }
    ],
    "src": "0:1559:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-06-26T16:37:43.021Z",
  "devdoc": {
    "methods": {
      "isValidSignature(bytes,bytes)": {
        "details": "MUST return the correct magic value if the signature provided is valid for the provided data  > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")  > This function MAY modify Ethereum's state",
        "params": {
          "_data": "Arbitrary length data signed on the behalf of address(this)",
          "_signature": "Signature byte array associated with _data"
        },
        "return": "Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise   "
      },
      "isValidSignature(bytes32,bytes)": {
        "details": "MUST return the correct magic value if the signature provided is valid for the provided hash  > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")  > This function MAY modify Ethereum's state",
        "params": {
          "_hash": "keccak256 hash that was signed",
          "_signature": "Signature byte array associated with _data"
        },
        "return": "Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
      }
    }
  },
  "userdoc": {
    "methods": {
      "isValidSignature(bytes,bytes)": {
        "notice": "Verifies whether the provided signature is valid with respect to the provided data"
      },
      "isValidSignature(bytes32,bytes)": {
        "notice": "Verifies whether the provided signature is valid with respect to the provided hash"
      }
    }
  }
}